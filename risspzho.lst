   1               		.file	"risspzho.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 101               	.global	uc_klawisze
 102               		.data
 105               	uc_klawisze:
 106 0000 FF        		.byte	-1
 107               	.global	f_kp_r
 110               	f_kp_r:
 111 0001 66        		.byte	102
 112 0002 66        		.byte	102
 113 0003 66        		.byte	102
 114 0004 3F        		.byte	63
 115               	.global	f_ki_r
 118               	f_ki_r:
 119 0005 0A        		.byte	10
 120 0006 D7        		.byte	-41
 121 0007 23        		.byte	35
 122 0008 3C        		.byte	60
 123               	.global	f_kp_h
 126               	f_kp_h:
 127 0009 33        		.byte	51
 128 000a 33        		.byte	51
 129 000b F3        		.byte	-13
 130 000c 3F        		.byte	63
 131               	.global	f_ki_h
 134               	f_ki_h:
 135 000d 00        		.byte	0
 136 000e 00        		.byte	0
 137 000f C0        		.byte	-64
 138 0010 3F        		.byte	63
 139               	.LC0:
 140 0011 2020 2052 		.string	"   Regulator\n"
 140      6567 756C 
 140      6174 6F72 
 140      0A00 
 141               	.LC1:
 142 001f 2020 2020 		.string	"     pradu  "
 142      2070 7261 
 142      6475 2020 
 142      00
 143               	.LC2:
 144 002c 2020 2020 		.string	"     WYBIEG"
 144      2057 5942 
 144      4945 4700 
 145               	.LC3:
 146 0038 5A61 2064 		.string	"Za duzy prad!!!"
 146      757A 7920 
 146      7072 6164 
 146      2121 2100 
 147               		.text
 149               	.global	main
 151               	main:
   1:risspzho.c    **** // ***************************gtvbh njm,********************************
   2:risspzho.c    **** // Project: Rozruch impulsowy silnika szeregowego pradu stalego
   3:risspzho.c    **** //				z hamowaniem odzyskowym
   4:risspzho.c    **** //
   5:risspzho.c    **** // Author: Janusz Tomaszewski, Piotr Szymanski
   6:risspzho.c    **** //
   7:risspzho.c    **** // Module description: Regulator pr¹du PI
   8:risspzho.c    **** // ***********************************************************
   9:risspzho.c    **** #define F_CPU 8000000UL
  10:risspzho.c    **** 
  11:risspzho.c    **** #include <avr/io.h>
  12:risspzho.c    **** #include <avr/interrupt.h>
  13:risspzho.c    **** #include <stdlib.h>
  14:risspzho.c    **** #include <util/delay.h>
  15:risspzho.c    **** #include <stdio.h>
  16:risspzho.c    **** #include "lcd.h"
  17:risspzho.c    **** 
  18:risspzho.c    **** //************************************************************
  19:risspzho.c    **** // 		Zmienne zwiazane z obs³ug¹ klawiatury oraz LCD
  20:risspzho.c    **** //************************************************************
  21:risspzho.c    **** 
  22:risspzho.c    **** /*Definicje preprocesora*/
  23:risspzho.c    **** 
  24:risspzho.c    **** 
  25:risspzho.c    **** #define SETBIT(x,y) (x |=(y))			// definicja operacji ustawiania bitu
  26:risspzho.c    **** #define CLEARBIT(x,y) (x &= (~y))	// definicja operacji zerowania bitu
  27:risspzho.c    **** #define CHECKBIT(x,y) (x & (y))		// definicja opercji sprawdzania wartosci bitu
  28:risspzho.c    **** 
  29:risspzho.c    **** #define KLAWISZ_F 0x01              // definicja bitu 1 bajtu znaczników klawiatury
  30:risspzho.c    **** #define KLAWISZ_N 0x02					// definicja bitu 2 bajtu znaczników klawiatury
  31:risspzho.c    **** #define KLAWISZ 0x04						// definicja bitu 3 bajtu znaczników klawiatury
  32:risspzho.c    **** 
  33:risspzho.c    **** /*Definicje zmiennych*/
  34:risspzho.c    **** 
  35:risspzho.c    **** unsigned char uc_l_obiegow;			  // Licznik obiegów pêtli
  36:risspzho.c    **** unsigned char uc_kolumna;             // Numer kolumny
  37:risspzho.c    **** unsigned char uc_l_spowalniajacy;	  // Wartosc licznika spowalniajacego
  38:risspzho.c    **** unsigned char uc_nr_przycisku;		  // Numer naciœniêtego przycisku
  39:risspzho.c    **** unsigned  int ui_liczba_w;    	      // Liczba wprowadzana
  40:risspzho.c    **** unsigned char uc_klawisze=0xFF;   	  // Bajt znaczników logiki klawiatury
  41:risspzho.c    **** 	 	   char c_buffer_n[5];    	  // Bufor do przechowywania wyniku konwersji z "unsigned int" na ASC
  42:risspzho.c    **** 		    int i_war_wy, i_war_cof;    // Zmienne waruku wyjœcia i warunku cofniêcia
  43:risspzho.c    **** unsigned  int ui_Ir_ogr;			  // Ograniczenie pr¹du rozruchu
  44:risspzho.c    **** unsigned  int ui_Ih_ogr;              // Ograniczenie pr¹du hamowania
  45:risspzho.c    ****         float f_I_pom;
  46:risspzho.c    **** 
  47:risspzho.c    **** 			 int blad;
  48:risspzho.c    **** 			 int war_przejscia;
  49:risspzho.c    **** 			 int reset;
  50:risspzho.c    **** 			
  51:risspzho.c    **** /*Zmienne zwiazane z regulatorem PI */
  52:risspzho.c    **** 
  53:risspzho.c    **** 		  float f_Ie;
  54:risspzho.c    ****   		  float f_I_zad;
  55:risspzho.c    **** 		  float f_S;
  56:risspzho.c    **** 		  float f_Ie_1;
  57:risspzho.c    **** 		  float f_I_1;
  58:risspzho.c    ****  		  float f_Innt;
  59:risspzho.c    **** 		  float f_Ii;
  60:risspzho.c    **** 		  float f_Ip;
  61:risspzho.c    **** 		  float f_I_wy;
  62:risspzho.c    **** 
  63:risspzho.c    **** /*Nastawy dla ROZRUCHU */
  64:risspzho.c    **** 
  65:risspzho.c    **** 		 float f_kp_r = 0.9;
  66:risspzho.c    **** 		 float f_ki_r = 0.01;
  67:risspzho.c    **** 
  68:risspzho.c    **** /*Nastawy dla HAMOWANIA*/
  69:risspzho.c    **** 
  70:risspzho.c    **** 		 float f_kp_h = 1.9;    //1.1  1.5  2
  71:risspzho.c    **** 		 float f_ki_h = 1.5;  //0.6       0,9
  72:risspzho.c    **** 
  73:risspzho.c    **** /* Zmienne kontroli PWM	*/		
  74:risspzho.c    **** 
  75:risspzho.c    **** volatile unsigned int ui_PWM;
  76:risspzho.c    **** volatile float f_I_pwm;
  77:risspzho.c    **** 
  78:risspzho.c    **** 
  79:risspzho.c    **** 		  int i, j, k, licz, r_jazdy, czas, czas_2;
  80:risspzho.c    **** 		  float suma;
  81:risspzho.c    **** 
  82:risspzho.c    **** //============================================================
  83:risspzho.c    **** //                 	  PROTOTYPY FUNKCJI
  84:risspzho.c    **** //============================================================
  85:risspzho.c    **** 	
  86:risspzho.c    **** 	int Wybieg(void);
  87:risspzho.c    **** 	int Rozruch(void);
  88:risspzho.c    **** 	int Hamowanie(void);
  89:risspzho.c    **** 	int Klawiatura(void);
  90:risspzho.c    ****    int Wychylenie_Nastawnika(void);
  91:risspzho.c    **** 		
  92:risspzho.c    **** 	int Przetwornik_ADC(int Kanal_ADC);
  93:risspzho.c    **** 	
  94:risspzho.c    ****   void Inicjalizacja_CPU(void);
  95:risspzho.c    ****   void Pobierz_Wartosci(void);
  96:risspzho.c    **** 
  97:risspzho.c    ****   void wyswietl_float(float liczba);
  98:risspzho.c    **** 
  99:risspzho.c    ****  float Prad_Pomierzony(void);
 100:risspzho.c    **** 
 101:risspzho.c    ****  float Prad_Zadany(int Iogr);
 102:risspzho.c    **** 	
 103:risspzho.c    ****  float Regulator_PI(int I_ogr, float I_pom, float kp, float ki);
 104:risspzho.c    **** 
 105:risspzho.c    **** //------------------------------------------------------------
 106:risspzho.c    **** 
 107:risspzho.c    **** 
 108:risspzho.c    **** int (*wskf_int[5])(void);
 109:risspzho.c    **** int (*wskf_P_ADC)(int);
 110:risspzho.c    **** void (*wskf_void[2])(void);
 111:risspzho.c    **** void (*wskf_w_float)(float);
 112:risspzho.c    **** float (*wskf_P_Pom)(void);
 113:risspzho.c    **** float (*wskf_P_Zad)(int);
 114:risspzho.c    **** float (*wskf_R_PI)(int, float, float, float);
 115:risspzho.c    **** 
 116:risspzho.c    **** 
 117:risspzho.c    **** //============================================================
 118:risspzho.c    **** //                 		PROGRAM G£ÓWNY
 119:risspzho.c    **** //============================================================
 120:risspzho.c    **** 
 121:risspzho.c    **** int main(void)
 122:risspzho.c    **** {
 152               	
 153               		in r28,__SP_L__
 154               		in r29,__SP_H__
 155 0000 DF93      		sbiw r28,28
 156 0002 CF93      		in __tmp_reg__,__SREG__
 157 0004 CDB7      		cli
 158 0006 DEB7      		out __SP_H__,r29
 159 0008 6C97      		out __SREG__,__tmp_reg__
 160 000a 0FB6      		out __SP_L__,r28
 161 000c F894      	/* prologue: function */
 162 000e DEBF      	/* frame size = 28 */
 164 0012 CDBF      	.LM1:
 165               		ldi r24,lo8(gs(Wybieg))
 166               		ldi r25,hi8(gs(Wybieg))
 123:risspzho.c    **** 
 124:risspzho.c    **** 	wskf_int[0] = &Wybieg;
 167               	)+1,r25
 168               		sts wskf_int,r24
 170 0016 90E0      	.LM2:
 171 0018 9093 0000 		ldi r24,lo8(gs(Rozruch))
 172 001c 8093 0000 		ldi r25,hi8(gs(Rozruch))
 125:risspzho.c    **** 	wskf_int[1] = &Rozruch;
 173               	wskf_int+2)+1,r25
 174               		sts wskf_int+2,r24
 176 0022 90E0      	.LM3:
 177 0024 9093 0000 		ldi r24,lo8(gs(Hamowanie))
 178 0028 8093 0000 		ldi r25,hi8(gs(Hamowanie))
 126:risspzho.c    **** 	wskf_int[2] = &Hamowanie;
 179               	wskf_int+4)+1,r25
 180               		sts wskf_int+4,r24
 182 002e 90E0      	.LM4:
 183 0030 9093 0000 		ldi r24,lo8(gs(Klawiatura))
 184 0034 8093 0000 		ldi r25,hi8(gs(Klawiatura))
 127:risspzho.c    **** 	wskf_int[3] = &Klawiatura;
 185               	wskf_int+6)+1,r25
 186               		sts wskf_int+6,r24
 188 003a 90E0      	.LM5:
 189 003c 9093 0000 		ldi r24,lo8(gs(Wychylenie_Nastawnika))
 190 0040 8093 0000 		ldi r25,hi8(gs(Wychylenie_Nastawnika))
 128:risspzho.c    **** 	wskf_int[4] = &Wychylenie_Nastawnika;
 191               	wskf_int+8)+1,r25
 192               		sts wskf_int+8,r24
 194 0046 90E0      	.LM6:
 195 0048 9093 0000 		ldi r24,lo8(gs(Przetwornik_ADC))
 196 004c 8093 0000 		ldi r25,hi8(gs(Przetwornik_ADC))
 129:risspzho.c    **** 	
 130:risspzho.c    **** 	wskf_P_ADC = &Przetwornik_ADC;
 197               	wskf_P_ADC)+1,r25
 198               		sts wskf_P_ADC,r24
 200 0052 90E0      	.LM7:
 201 0054 9093 0000 		ldi r24,lo8(gs(Inicjalizacja_CPU))
 202 0058 8093 0000 		ldi r25,hi8(gs(Inicjalizacja_CPU))
 131:risspzho.c    **** 	
 132:risspzho.c    **** 	wskf_void[0] = &Inicjalizacja_CPU;
 203               	wskf_void)+1,r25
 204               		sts wskf_void,r24
 206 005e 90E0      	.LM8:
 207 0060 9093 0000 		ldi r24,lo8(gs(Pobierz_Wartosci))
 208 0064 8093 0000 		ldi r25,hi8(gs(Pobierz_Wartosci))
 133:risspzho.c    **** 	wskf_void[1] = &Pobierz_Wartosci;
 209               	wskf_void+2)+1,r25
 210               		sts wskf_void+2,r24
 212 006a 90E0      	.LM9:
 213 006c 9093 0000 		ldi r24,lo8(gs(wyswietl_float))
 214 0070 8093 0000 		ldi r25,hi8(gs(wyswietl_float))
 134:risspzho.c    **** 	
 135:risspzho.c    **** 	wskf_w_float = &wyswietl_float;
 215               	wskf_w_float)+1,r25
 216               		sts wskf_w_float,r24
 218 0076 90E0      	.LM10:
 219 0078 9093 0000 		ldi r24,lo8(gs(Prad_Pomierzony))
 220 007c 8093 0000 		ldi r25,hi8(gs(Prad_Pomierzony))
 136:risspzho.c    **** 	
 137:risspzho.c    **** 	wskf_P_Pom = &Prad_Pomierzony;
 221               	wskf_P_Pom)+1,r25
 222               		sts wskf_P_Pom,r24
 224 0082 90E0      	.LM11:
 225 0084 9093 0000 		ldi r24,lo8(gs(Prad_Zadany))
 226 0088 8093 0000 		ldi r25,hi8(gs(Prad_Zadany))
 138:risspzho.c    **** 	
 139:risspzho.c    **** 	wskf_P_Zad = &Prad_Zadany;
 227               	wskf_P_Zad)+1,r25
 228               		sts wskf_P_Zad,r24
 230 008e 90E0      	.LM12:
 231 0090 9093 0000 		ldi r24,lo8(gs(Regulator_PI))
 232 0094 8093 0000 		ldi r25,hi8(gs(Regulator_PI))
 140:risspzho.c    **** 	
 141:risspzho.c    **** 	wskf_R_PI = &Regulator_PI;
 233               	wskf_R_PI)+1,r25
 234               		sts wskf_R_PI,r24
 235 0098 80E0      	.L23:
 237 009c 9093 0000 	.LM13:
 238 00a0 8093 0000 		call Inicjalizacja_CPU
 142:risspzho.c    **** 
 143:risspzho.c    **** 	while(1)
 144:risspzho.c    **** 	{	
 145:risspzho.c    **** 	
 146:risspzho.c    **** 		Inicjalizacja_CPU();
 240               		lds r24,reset
 241               		lds r25,(reset)+1
 242 00a4 0E94 0000 		sbiw r24,0
 147:risspzho.c    **** //		(*wskf_void[0])();
 148:risspzho.c    **** 		
 149:risspzho.c    **** 		if(!reset)
 243               	eq .+2
 244               		rjmp .L2
 246 00ac 9091 0000 	.LM15:
 247 00b0 0097      		call lcd_clrscr
 249 00b4 00C0      	.LM16:
 150:risspzho.c    **** 		{
 151:risspzho.c    **** 			lcd_clrscr();
 250               	4,lo8(.LC0)
 251               		ldi r25,hi8(.LC0)
 252 00b6 0E94 0000 		call lcd_puts
 152:risspzho.c    **** 
 153:risspzho.c    **** 			lcd_puts("   Regulator\n");
 253               	tabn	68,0,154,.LM17-.LFBB1
 254               	.LM17:
 255 00ba 80E0      		ldi r24,lo8(.LC1)
 256 00bc 90E0      		ldi r25,hi8(.LC1)
 257 00be 0E94 0000 		call lcd_puts
 154:risspzho.c    **** 			lcd_puts("     pradu  ");
 258               	r24,lo8(0x451c4000)
 259               		ldi r25,hi8(0x451c4000)
 260 00c2 80E0      		ldi r26,hlo8(0x451c4000)
 261 00c4 90E0      		ldi r27,hhi8(0x451c4000)
 262 00c6 0E94 0000 		std Y+25,r24
 263 00ca 80E0      		std Y+26,r25
 264 00cc 90E4      		std Y+27,r26
 265 00ce ACE1      		std Y+28,r27
 266 00d0 B5E4      	.LBB14:
 267 00d2 898F      	.LBB15:
 269 00d6 AB8F      	.Ltext1:
 271               	.LM18:
 272               		ldi r18,lo8(0x44fa0000)
 273               		ldi r19,hi8(0x44fa0000)
 274               		ldi r20,hlo8(0x44fa0000)
   1:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    All rights reserved.
   5:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
   6:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
   9:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  12:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      distribution.
  16:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  17:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  21:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  33:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  35:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  38:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #include <inttypes.h>
  39:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  41:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /** \file */
  42:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \code
  44:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \endcode
  48:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  49:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     used.
  53:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  54:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  63:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     routines linked into the application.
  71:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  72:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  76:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** */
  77:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  78:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  82:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  83:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef F_CPU
  84:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  88:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  89:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  92:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  93:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /**
  94:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
  95:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  96:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
  97:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  98:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 101:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 103:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    will not be informed about this case.
 106:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****  */
 107:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** void
 108:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** _delay_us(double __us)
 109:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** {
 110:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 114:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	{
 116:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		return;
 118:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	}
 119:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else
 120:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** }
 123:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 124:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 125:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /**
 126:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
 127:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 128:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 130:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 133:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 135:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****  */
 141:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** void
 142:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** {
 144:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 275               	4fa0000)
 276               		ldd r22,Y+25
 277 00da 20E0      		ldd r23,Y+26
 278 00dc 30E0      		ldd r24,Y+27
 279 00de 4AEF      		ldd r25,Y+28
 280 00e0 54E4      		call __mulsf3
 281 00e2 698D      		movw r26,r24
 282 00e4 7A8D      		movw r24,r22
 283 00e6 8B8D      		std Y+21,r24
 284 00e8 9C8D      		std Y+22,r25
 285 00ea 0E94 0000 		std Y+23,r26
 286 00ee DC01      		std Y+24,r27
 288 00f2 8D8B      	.LM19:
 289 00f4 9E8B      		ldi r18,lo8(0x3f800000)
 290 00f6 AF8B      		ldi r19,hi8(0x3f800000)
 291 00f8 B88F      		ldi r20,hlo8(0x3f800000)
 146:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 292               	f800000)
 293               		ldd r22,Y+21
 294 00fa 20E0      		ldd r23,Y+22
 295 00fc 30E0      		ldd r24,Y+23
 296 00fe 40E8      		ldd r25,Y+24
 297 0100 5FE3      		call __ltsf2
 298 0102 6D89      		tst r24
 299 0104 7E89      		brge .L29
 300 0106 8F89      	.L25:
 302 010a 0E94 0000 	.LM20:
 303 010e 8823      		ldi r24,lo8(1)
 304 0110 04F4      		ldi r25,hi8(1)
 305               		std Y+20,r25
 147:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 306               		rjmp .L5
 307               	.L29:
 309 0114 90E0      	.LM21:
 310 0116 9C8B      		ldi r18,lo8(0x477fff00)
 311 0118 8B8B      		ldi r19,hi8(0x477fff00)
 312 011a 00C0      		ldi r20,hlo8(0x477fff00)
 313               		ldi r21,hhi8(0x477fff00)
 148:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 314               	,Y+21
 315               		ldd r23,Y+22
 316 011c 20E0      		ldd r24,Y+23
 317 011e 3FEF      		ldd r25,Y+24
 318 0120 4FE7      		call __gtsf2
 319 0122 57E4      		cp __zero_reg__,r24
 320 0124 6D89      		brge .L30
 321 0126 7E89      	.L26:
 323 012a 988D      	.LM22:
 324 012c 0E94 0000 		ldi r18,lo8(0x41200000)
 325 0130 1816      		ldi r19,hi8(0x41200000)
 326 0132 04F4      		ldi r20,hlo8(0x41200000)
 327               		ldi r21,hhi8(0x41200000)
 149:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	{
 150:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 328               		ldd r23,Y+26
 329               		ldd r24,Y+27
 330 0134 20E0      		ldd r25,Y+28
 331 0136 30E0      		call __mulsf3
 332 0138 40E2      		movw r26,r24
 333 013a 51E4      		movw r24,r22
 334 013c 698D      		movw r22,r24
 335 013e 7A8D      		movw r24,r26
 336 0140 8B8D      		call __fixunssfsi
 337 0142 9C8D      		movw r26,r24
 338 0144 0E94 0000 		movw r24,r22
 339 0148 DC01      		std Y+20,r25
 340 014a CB01      		std Y+19,r24
 341 014c BC01      		rjmp .L8
 342 014e CD01      	.L9:
 343 0150 0E94 0000 		ldi r24,lo8(200)
 344 0154 DC01      		ldi r25,hi8(200)
 345 0156 CB01      		std Y+18,r25
 346 0158 9C8B      		std Y+17,r24
 347 015a 8B8B      	.LBB16:
 348 015c 00C0      	.LBB17:
 350 015e 88EC      	.Ltext2:
 352 0162 9A8B      	.LM23:
 353 0164 898B      		ldd r24,Y+17
 354               		ldd r25,Y+18
 355               	/* #APP */
 356               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 357               		1: sbiw r24,1
   1:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
   5:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
   8:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  11:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      distribution.
  15:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  16:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  20:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  32:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  34:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  37:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  39:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \file */
  40:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     \code
  42:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     \endcode
  44:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  45:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  53:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  60:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  62:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** */
  63:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  64:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #endif
  68:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  69:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  71:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     register.
  76:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  77:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     can be achieved.
  79:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** */
  80:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** void
  81:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** {
  83:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	);
  89:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** }
  90:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  91:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  93:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     counter register pair.
  98:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  99:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****  */
 102:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** void
 103:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** {
 105:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 358               	*/
 359               		std Y+18,r25
 360 0166 8989      		std Y+17,r24
 361 0168 9A89      	.LBE17:
 362               	.LBE16:
 364 016a 0197      	.Ltext3:
 366               	.LM24:
 367               		ldd r24,Y+19
 368 016e 9A8B      		ldd r25,Y+20
 369 0170 898B      		sbiw r24,1
 370               		std Y+20,r25
 371               		std Y+19,r24
 372               	.L8:
 152:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		while(__ticks)
 153:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		{
 154:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			__ticks --;
 374               	Y+19
 375               		ldd r25,Y+20
 376 0172 8B89      		sbiw r24,0
 377 0174 9C89      		brne .L9
 378 0176 0197      		rjmp .L2
 379 0178 9C8B      	.L30:
 381               	.LM26:
 382               		ldd r22,Y+21
 383               		ldd r23,Y+22
 384 017c 8B89      		ldd r24,Y+23
 385 017e 9C89      		ldd r25,Y+24
 386 0180 0097      		call __fixunssfsi
 387 0182 01F4      		movw r26,r24
 388 0184 00C0      		movw r24,r22
 389               		std Y+20,r25
 157:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		}
 158:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		return;
 159:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	}
 160:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else
 161:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 390               	5:
 391               		ldd r24,Y+19
 392 0186 6D89      		ldd r25,Y+20
 393 0188 7E89      		std Y+16,r25
 394 018a 8F89      		std Y+15,r24
 395 018c 988D      	.LBB18:
 396 018e 0E94 0000 	.LBB19:
 398 0194 CB01      	.Ltext4:
 400 0198 8B8B      	.LM27:
 401               		ldd r24,Y+15
 402 019a 8B89      		ldd r25,Y+16
 403 019c 9C89      	/* #APP */
 404 019e 988B      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 405 01a0 8F87      		1: sbiw r24,1
 406               		brne 1b
 407               	 ;  0 "" 2
 408               	/* #NOAPP */
 409               		std Y+16,r25
 410               		std Y+15,r24
 411               	.L2:
 412 01a2 8F85      	.LBE19:
 413 01a4 9889      	.LBE18:
 414               	.LBE15:
 415               	.LBE14:
 417 01a8 01F4      	.Ltext5:
 419               	.LM28:
 420 01aa 988B      	/* #APP */
 421 01ac 8F87      	 ;  158 "risspzho.c" 1
 422               		sei
 423               	 ;  0 "" 2
 425               	.LM29:
 426               	/* #NOAPP */
 427               		sts (reset)+1,__zero_reg__
 428               		sts reset,__zero_reg__
 155:risspzho.c    **** 			_delay_ms(2500);
 156:risspzho.c    **** 		}
 157:risspzho.c    **** 
 158:risspzho.c    **** 		sei(); 								//wlaczenie obslugi przerwan
 429               	ts (r_jazdy)+1,__zero_reg__
 430               		sts r_jazdy,__zero_reg__
 432               	.LM31:
 433 01ae 7894      		call Pobierz_Wartosci
 159:risspzho.c    ****  	   reset = 0;
 435               	
 436               		sts (war_przejscia)+1,__zero_reg__
 437               		sts war_przejscia,__zero_reg__
 439 01b4 1092 0000 	.LM33:
 160:risspzho.c    ****  	   r_jazdy = 0;
 440               	 r24,lo8(1)
 441               		ldi r25,hi8(1)
 442 01b8 1092 0000 		sts (r_jazdy)+1,r25
 443 01bc 1092 0000 		sts r_jazdy,r24
 161:risspzho.c    **** 
 162:risspzho.c    **** 
 163:risspzho.c    **** 		Pobierz_Wartosci();
 444               	abn	68,0,170,.LM34-.LFBB1
 445               	.LM34:
 446 01c0 0E94 0000 		sts (blad)+1,__zero_reg__
 164:risspzho.c    **** //		(*wskf_void[1])();
 165:risspzho.c    **** 
 166:risspzho.c    **** 		war_przejscia = 0;
 447               	s blad,__zero_reg__
 448               		rjmp .L11
 449 01c4 1092 0000 	.L13:
 167:risspzho.c    **** 		
 168:risspzho.c    **** 		r_jazdy = 1;
 451               	5:
 452               		call lcd_clrscr
 454 01ce 90E0      	.LM36:
 455 01d0 9093 0000 		ldi r24,lo8(.LC2)
 456 01d4 8093 0000 		ldi r25,hi8(.LC2)
 169:risspzho.c    **** 	
 170:risspzho.c    **** 	   blad = 0;
 457               	lcd_puts
 459 01d8 1092 0000 	.LM37:
 460 01dc 1092 0000 		call Wybieg
 461 01e0 00C0      		sts (blad)+1,r25
 462               		sts blad,r24
 171:risspzho.c    **** 	
 172:risspzho.c    **** 
 173:risspzho.c    ****    	while(!blad)
 174:risspzho.c    ****    	{
 175:risspzho.c    ****      	      	
 176:risspzho.c    **** 	      lcd_clrscr();
 463               	n	68,0,180,.LM38-.LFBB1
 464               	.LM38:
 465 01e2 0E94 0000 		sts (war_przejscia)+1,__zero_reg__
 177:risspzho.c    ****       	lcd_puts("     WYBIEG");
 466               	s war_przejscia,__zero_reg__
 468 01e6 80E0      	.LM39:
 469 01e8 90E0      		ldi r30,lo8(48)
 470 01ea 0E94 0000 		ldi r31,hi8(48)
 178:risspzho.c    ****       	blad = Wybieg();
 471               	24,Z
 472               		mov r24,r24
 473 01ee 0E94 0000 		ldi r25,lo8(0)
 474 01f2 9093 0000 		andi r24,lo8(1)
 475 01f6 8093 0000 		andi r25,hi8(1)
 179:risspzho.c    ****       	
 180:risspzho.c    ****       	war_przejscia = 0;
 476               	r24
 477               		breq .L12
 478 01fa 1092 0000 		ldi r30,lo8(48)
 479 01fe 1092 0000 		ldi r31,hi8(48)
 181:risspzho.c    **** 
 182:risspzho.c    **** 
 183:risspzho.c    ****       	if(bit_is_set(PIND,0) && !bit_is_set(PIND,1) && war_przejscia != 2)
 480               	r24,Z
 481               		mov r24,r24
 482 0202 E0E3      		ldi r25,lo8(0)
 483 0204 F0E0      		andi r24,lo8(2)
 484 0206 8081      		andi r25,hi8(2)
 485 0208 882F      		sbiw r24,0
 486 020a 90E0      		brne .L12
 487 020c 8170      		lds r24,war_przejscia
 488 020e 9070      		lds r25,(war_przejscia)+1
 489 0210 8823      		cpi r24,2
 490 0212 01F0      		cpc r25,__zero_reg__
 491 0214 E0E3      		breq .L12
 493 0218 8081      	.LM40:
 494 021a 882F      		call Rozruch
 495 021c 90E0      		sts (blad)+1,r25
 496 021e 8270      		sts blad,r24
 498 0222 0097      	.LM41:
 499 0224 01F4      		ldi r24,lo8(1)
 500 0226 8091 0000 		ldi r25,hi8(1)
 501 022a 9091 0000 		sts (war_przejscia)+1,r25
 502 022e 8230      		sts war_przejscia,r24
 503 0230 9105      	.L12:
 184:risspzho.c    ****       	{
 185:risspzho.c    ****      	   	blad = Rozruch();
 505               	ldi r31,hi8(48)
 506               		ld r24,Z
 507 0234 0E94 0000 		mov r24,r24
 508 0238 9093 0000 		ldi r25,lo8(0)
 509 023c 8093 0000 		andi r24,lo8(2)
 186:risspzho.c    **** //         	blad = (*wskf_int[1])();
 187:risspzho.c    ****          	
 188:risspzho.c    ****       		war_przejscia = 1;
 510               	 r25,hi8(2)
 511               		sbiw r24,0
 512 0240 81E0      		breq .L11
 513 0242 90E0      		ldi r30,lo8(48)
 514 0244 9093 0000 		ldi r31,hi8(48)
 515 0248 8093 0000 		ld r24,Z
 516               		mov r24,r24
 189:risspzho.c    ****       	}
 190:risspzho.c    **** 
 191:risspzho.c    **** 		 	if(bit_is_set(PIND,1) && !bit_is_set(PIND,0) && war_przejscia != 1)
 517               	5,lo8(0)
 518               		andi r24,lo8(1)
 519 024c E0E3      		andi r25,hi8(1)
 520 024e F0E0      		sbiw r24,0
 521 0250 8081      		brne .L11
 522 0252 882F      		lds r24,war_przejscia
 523 0254 90E0      		lds r25,(war_przejscia)+1
 524 0256 8270      		cpi r24,1
 525 0258 9070      		cpc r25,__zero_reg__
 526 025a 0097      		breq .L11
 528 025e E0E3      	.LM43:
 529 0260 F0E0      		call Hamowanie
 530 0262 8081      		sts (blad)+1,r25
 531 0264 882F      		sts blad,r24
 533 0268 8170      	.LM44:
 534 026a 9070      		ldi r24,lo8(2)
 535 026c 0097      		ldi r25,hi8(2)
 536 026e 01F4      		sts (war_przejscia)+1,r25
 537 0270 8091 0000 		sts war_przejscia,r24
 538 0274 9091 0000 	.L11:
 540 027a 9105      	.LM45:
 541 027c 01F0      		lds r24,blad
 192:risspzho.c    ****       	{
 193:risspzho.c    ****       		blad = Hamowanie();
 542               	24,0
 543               		brne .+2
 544 027e 0E94 0000 		rjmp .L13
 546 0286 8093 0000 	.LM46:
 194:risspzho.c    ****       	   //blad = (*wskf_int[2])();
 195:risspzho.c    ****       	
 196:risspzho.c    ****       		war_przejscia = 2;
 547               	r30,lo8(74)
 548               		ldi r31,hi8(74)
 549 028a 82E0      		std Z+1,__zero_reg__
 550 028c 90E0      		st Z,__zero_reg__
 552 0292 8093 0000 	.LM47:
 553               		lds r24,reset
 554               		lds r25,(reset)+1
 555               		sbiw r24,0
 556 0296 8091 0000 		breq .+2
 557 029a 9091 0000 		rjmp .L23
 559 02a0 01F4      	.LM48:
 560 02a2 00C0      		call lcd_clrscr
 197:risspzho.c    ****       	}
 198:risspzho.c    ****    	}
 199:risspzho.c    **** 	
 200:risspzho.c    **** 		OCR1A = 0;
 561               	05,.LM49-.LFBB1
 562               	.LM49:
 563 02a4 EAE4      		ldi r24,lo8(.LC3)
 564 02a6 F0E0      		ldi r25,hi8(.LC3)
 565 02a8 1182      		call lcd_puts
 566 02aa 1082      		ldi r24,lo8(0x451c4000)
 201:risspzho.c    **** 	
 202:risspzho.c    **** 		if(!reset)
 567               	25,hi8(0x451c4000)
 568               		ldi r26,hlo8(0x451c4000)
 569 02ac 8091 0000 		ldi r27,hhi8(0x451c4000)
 570 02b0 9091 0000 		std Y+11,r24
 571 02b4 0097      		std Y+12,r25
 572 02b6 01F0      		std Y+13,r26
 573 02b8 00C0      		std Y+14,r27
 203:risspzho.c    **** 	   {
 204:risspzho.c    **** 			lcd_clrscr();
 574               	
 575               	.LBB21:
 205:risspzho.c    **** 			lcd_puts("Za duzy prad!!!");
 577               	text6:
 579 02be 80E0      	.LM50:
 580 02c0 90E0      		ldi r18,lo8(0x44fa0000)
 581 02c2 0E94 0000 		ldi r19,hi8(0x44fa0000)
 582 02c6 80E0      		ldi r20,hlo8(0x44fa0000)
 583 02c8 90E4      		ldi r21,hhi8(0x44fa0000)
 584 02ca ACE1      		ldd r22,Y+11
 585 02cc B5E4      		ldd r23,Y+12
 586 02ce 8B87      		ldd r24,Y+13
 587 02d0 9C87      		ldd r25,Y+14
 588 02d2 AD87      		call __mulsf3
 589 02d4 BE87      		movw r26,r24
 590               		movw r24,r22
 591               		std Y+7,r24
 592               		std Y+8,r25
 593               		std Y+9,r26
 594               		std Y+10,r27
 596 02d6 20E0      	.LM51:
 597 02d8 30E0      		ldi r18,lo8(0x3f800000)
 598 02da 4AEF      		ldi r19,hi8(0x3f800000)
 599 02dc 54E4      		ldi r20,hlo8(0x3f800000)
 600 02de 6B85      		ldi r21,hhi8(0x3f800000)
 601 02e0 7C85      		ldd r22,Y+7
 602 02e2 8D85      		ldd r23,Y+8
 603 02e4 9E85      		ldd r24,Y+9
 604 02e6 0E94 0000 		ldd r25,Y+10
 605 02ea DC01      		call __ltsf2
 606 02ec CB01      		tst r24
 607 02ee 8F83      		brge .L31
 608 02f0 9887      	.L27:
 610 02f4 BA87      	.LM52:
 611               		ldi r24,lo8(1)
 612               		ldi r25,hi8(1)
 613 02f6 20E0      		std Y+6,r25
 614 02f8 30E0      		std Y+5,r24
 615 02fa 40E8      		rjmp .L17
 616 02fc 5FE3      	.L31:
 618 0300 7885      	.LM53:
 619 0302 8985      		ldi r18,lo8(0x477fff00)
 620 0304 9A85      		ldi r19,hi8(0x477fff00)
 621 0306 0E94 0000 		ldi r20,hlo8(0x477fff00)
 622 030a 8823      		ldi r21,hhi8(0x477fff00)
 623 030c 04F4      		ldd r22,Y+7
 624               		ldd r23,Y+8
 625               		ldd r24,Y+9
 626               		ldd r25,Y+10
 627 030e 81E0      		call __gtsf2
 628 0310 90E0      		cp __zero_reg__,r24
 629 0312 9E83      		brge .L32
 630 0314 8D83      	.L28:
 632               	.LM54:
 633               		ldi r18,lo8(0x41200000)
 634               		ldi r19,hi8(0x41200000)
 635 0318 20E0      		ldi r20,hlo8(0x41200000)
 636 031a 3FEF      		ldi r21,hhi8(0x41200000)
 637 031c 4FE7      		ldd r22,Y+11
 638 031e 57E4      		ldd r23,Y+12
 639 0320 6F81      		ldd r24,Y+13
 640 0322 7885      		ldd r25,Y+14
 641 0324 8985      		call __mulsf3
 642 0326 9A85      		movw r26,r24
 643 0328 0E94 0000 		movw r24,r22
 644 032c 1816      		movw r22,r24
 645 032e 04F4      		movw r24,r26
 646               		call __fixunssfsi
 647               		movw r26,r24
 648               		movw r24,r22
 649 0330 20E0      		std Y+6,r25
 650 0332 30E0      		std Y+5,r24
 651 0334 40E2      		rjmp .L20
 652 0336 51E4      	.L21:
 653 0338 6B85      		ldi r24,lo8(200)
 654 033a 7C85      		ldi r25,hi8(200)
 655 033c 8D85      		std Y+4,r25
 656 033e 9E85      		std Y+3,r24
 657 0340 0E94 0000 	.LBB22:
 658 0344 DC01      	.LBB23:
 660 0348 BC01      	.Ltext7:
 662 034c 0E94 0000 	.LM55:
 663 0350 DC01      		ldd r24,Y+3
 664 0352 CB01      		ldd r25,Y+4
 665 0354 9E83      	/* #APP */
 666 0356 8D83      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 667 0358 00C0      		1: sbiw r24,1
 668               		brne 1b
 669 035a 88EC      	 ;  0 "" 2
 670 035c 90E0      	/* #NOAPP */
 671 035e 9C83      		std Y+4,r25
 672 0360 8B83      		std Y+3,r24
 673               	.LBE23:
 674               	.LBE22:
 676               	.Ltext8:
 678               	.LM56:
 679 0362 8B81      		ldd r24,Y+5
 680 0364 9C81      		ldd r25,Y+6
 681               		sbiw r24,1
 682               		std Y+6,r25
 683 0366 0197      		std Y+5,r24
 684 0368 01F4      	.L20:
 686               	.LM57:
 687 036a 9C83      		ldd r24,Y+5
 688 036c 8B83      		ldd r25,Y+6
 689               		sbiw r24,0
 690               		brne .L21
 691               		rjmp .L23
 692               	.L32:
 694               	.LM58:
 695 036e 8D81      		ldd r22,Y+7
 696 0370 9E81      		ldd r23,Y+8
 697 0372 0197      		ldd r24,Y+9
 698 0374 9E83      		ldd r25,Y+10
 699 0376 8D83      		call __fixunssfsi
 700               		movw r26,r24
 701               		movw r24,r22
 702               		std Y+6,r25
 703 0378 8D81      		std Y+5,r24
 704 037a 9E81      	.L17:
 705 037c 0097      		ldd r24,Y+5
 706 037e 01F4      		ldd r25,Y+6
 707 0380 00C0      		std Y+2,r25
 708               		std Y+1,r24
 709               	.LBB24:
 710               	.LBB25:
 712 0384 7885      	.Ltext9:
 714 0388 9A85      	.LM59:
 715 038a 0E94 0000 		ldd r24,Y+1
 716 038e DC01      		ldd r25,Y+2
 717 0390 CB01      	/* #APP */
 718 0392 9E83      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 719 0394 8D83      		1: sbiw r24,1
 720               		brne 1b
 721 0396 8D81      	 ;  0 "" 2
 722 0398 9E81      	/* #NOAPP */
 723 039a 9A83      		std Y+2,r25
 724 039c 8983      		std Y+1,r24
 725               		rjmp .L23
 726               	.LBE25:
 727               	.LBE24:
 728               	.LBE21:
 729               	.LBE20:
 731 039e 8981      	.Lscope1:
 733               	.global	Inicjalizacja_CPU
 735 03a2 0197      	Inicjalizacja_CPU:
 737               	.Ltext10:
 739 03a6 9A83      	.LM60:
 740 03a8 8983      	.LFBB2:
 741 03aa 00C0      		push r29
 742               		push r28
 743               		in r28,__SP_L__
 744               		in r29,__SP_H__
 745               	/* prologue: function */
 746               	/* frame size = 0 */
 748               	.LM61:
 749               		ldi r30,lo8(58)
 750               		ldi r31,hi8(58)
 751               		st Z,__zero_reg__
 753               	.LM62:
 206:risspzho.c    **** 			_delay_ms(2500);
 207:risspzho.c    **** 	   }
 208:risspzho.c    **** 	
 209:risspzho.c    **** 	}
 210:risspzho.c    **** 
 211:risspzho.c    **** 	return 0;
 212:risspzho.c    **** }
 213:risspzho.c    **** 
 214:risspzho.c    **** //============================================================
 215:risspzho.c    **** //                 	DEFINICJE FUNKCJI
 216:risspzho.c    **** //============================================================
 217:risspzho.c    **** 
 218:risspzho.c    **** 
 219:risspzho.c    **** void Inicjalizacja_CPU(void)
 220:risspzho.c    **** {
 754               	LM64-.LFBB2
 755               	.LM64:
 756               		ldi r30,lo8(49)
 757 03ac DF93      		ldi r31,hi8(49)
 758 03ae CF93      		ldi r24,lo8(112)
 759 03b0 CDB7      		st Z,r24
 761               	.LM65:
 762               		ldi r30,lo8(50)
 221:risspzho.c    **** 
 222:risspzho.c    **** //************************************************************
 223:risspzho.c    **** //						Konfiguracja portów I/O
 224:risspzho.c    **** //************************************************************
 225:risspzho.c    **** 
 226:risspzho.c    **** // DDRx 1 - wyjscie wowczas PORTx ustawiony jako 1,
 227:risspzho.c    **** // 0 - wejscie PORTx ustawiony jako 0,
 228:risspzho.c    **** 
 229:risspzho.c    **** /*ADC PA0, PA1*/
 230:risspzho.c    **** 	DDRA = 0x00;					// bity 0 - 7 jako wejœæia,
 763               	hi8(50)
 764               		ldi r24,lo8(7)
 765 03b4 EAE3      		st Z,r24
 767 03b8 1082      	.LM66:
 231:risspzho.c    **** //	PORTA = 0x00;
 232:risspzho.c    **** 
 233:risspzho.c    **** /*Klawiatura*/
 234:risspzho.c    **** 	DDRB = 0x0F;					// bity 0 - 3 jako wyjœcia,
 768               	r26,lo8(38)
 769               		ldi r27,hi8(38)
 770 03ba E7E3      		ldi r30,lo8(38)
 771 03bc F0E0      		ldi r31,hi8(38)
 772 03be 8FE0      		ld r24,Z
 773 03c0 8083      		ori r24,lo8(2)
 235:risspzho.c    **** 										// 4 - 7 jako wejœcia
 236:risspzho.c    **** 	PORTB = 0xFF;					// wejœcia z podci¹ganiem
 774               	r24
 776 03c2 E8E3      	.LM67:
 777 03c4 F0E0      		ldi r26,lo8(38)
 778 03c6 8FEF      		ldi r27,hi8(38)
 779 03c8 8083      		ldi r30,lo8(38)
 237:risspzho.c    **** 
 238:risspzho.c    **** /*LCD*/
 239:risspzho.c    **** //	DDRC = 0xFF;					// bity 0 - 7 jako wyjœcia
 240:risspzho.c    **** 
 241:risspzho.c    **** /*Wyjœcie PWM, T1, T2, Sygna³ R, Sygna³ H, Reset zewnêtrzny*/
 242:risspzho.c    **** 	DDRD = 0x70;					// bity 0 - 3 oraz bit 7 jako wejœcia
 780               	31,hi8(38)
 781               		ld r24,Z
 782 03ca E1E3      		ori r24,lo8(4)
 783 03cc F0E0      		st X,r24
 785 03d0 8083      	.LM68:
 243:risspzho.c    **** 	PORTD = 0x07; //0x07;					// bity 4 - 6 jako wyjœcia	
 786               	26,lo8(38)
 787               		ldi r27,hi8(38)
 788 03d2 E2E3      		ldi r30,lo8(38)
 789 03d4 F0E0      		ldi r31,hi8(38)
 790 03d6 87E0      		ld r24,Z
 791 03d8 8083      		ori r24,lo8(-128)
 244:risspzho.c    **** 										// Podciagniecie pibow 0, 1 i 2	
 245:risspzho.c    **** 
 246:risspzho.c    **** //************************************************************
 247:risspzho.c    **** //							Konfiguracja ADC
 248:risspzho.c    **** //************************************************************
 249:risspzho.c    **** 
 250:risspzho.c    **** // Wewnetrzne 2.56V Trzeba wylaczyc aby bylo zewnetrzne zrodlo	                           	
 251:risspzho.c    **** //	ADMUX |= _BV(REFS0);			// Wybór Ÿród³a referencyjnego
 252:risspzho.c    **** //	ADMUX |= _BV(REFS1); 		// AREF, Vref wylaczone
 253:risspzho.c    **** 										
 254:risspzho.c    **** 										// ADLAR = 0 (tryb 10 bitowy)
 255:risspzho.c    **** 	
 256:risspzho.c    **** // Je¿eli ADCSRA nie dziala nale¿y u¿yæ nzwy ADCSR.
 257:risspzho.c    **** 	
 258:risspzho.c    **** 	ADCSRA |= _BV(ADPS1);		// Czêstotliwoœæ taktowania przetwornika	
 792               	r24
 794 03da A6E2      	.LM69:
 795 03dc B0E0      		ldi r26,lo8(79)
 796 03de E6E2      		ldi r27,hi8(79)
 797 03e0 F0E0      		ldi r30,lo8(79)
 798 03e2 8081      		ldi r31,hi8(79)
 799 03e4 8260      		ld r24,Z
 800 03e6 8C93      		ori r24,lo8(-128)
 259:risspzho.c    **** 	ADCSRA |= _BV(ADPS2);		// (1/64 czêstotliwoœci zegara kontrolera)
 801               	
 803 03e8 A6E2      	.LM70:
 804 03ea B0E0      		ldi r26,lo8(78)
 805 03ec E6E2      		ldi r27,hi8(78)
 806 03ee F0E0      		ldi r30,lo8(78)
 807 03f0 8081      		ldi r31,hi8(78)
 808 03f2 8460      		ld r24,Z
 809 03f4 8C93      		ori r24,lo8(16)
 260:risspzho.c    **** 	
 261:risspzho.c    **** 	ADCSRA |= _BV(ADEN);			// Odblokowanie przetwornika (zezwolenie
 810               	4
 812 03f6 A6E2      	.LM71:
 813 03f8 B0E0      		ldi r26,lo8(79)
 814 03fa E6E2      		ldi r27,hi8(79)
 815 03fc F0E0      		ldi r30,lo8(79)
 816 03fe 8081      		ldi r31,hi8(79)
 817 0400 8068      		ld r24,Z
 818 0402 8C93      		ori r24,lo8(2)
 262:risspzho.c    **** 										// na konwersje).
 263:risspzho.c    **** 	
 264:risspzho.c    **** // W programie nale¿y dokonywaæ wyboru pinu, który bêdzie pod³¹czony
 265:risspzho.c    **** // przez multiplekser do przetwornika ADC, i tak:
 266:risspzho.c    **** // ADMUX = 0x00 - Aby wybrac kana³ (PA0) ADC 0 - Pomiar pr¹du
 267:risspzho.c    **** //																z przetwornika LEM
 268:risspzho.c    **** // ADMUX = 0x01 lub ADMUX |= _BV(MUX0); - Aby wybrac kana³ (PA1) ADC 1
 269:risspzho.c    **** //													- Pomiar wychylenia nastawnika
 270:risspzho.c    **** //													  jazdy.
 271:risspzho.c    **** 
 272:risspzho.c    **** // W programie nale¿y dokonywac w³¹czania bitu rozpoczêcia konwersji
 273:risspzho.c    **** // w trybie pojedynczego wyzwalania, i tak:
 274:risspzho.c    **** // ADCSRA |= _BV(ADSC); - Ustawienie bitu rozpoczynaj¹cego konwersje
 275:risspzho.c    **** 
 276:risspzho.c    **** //************************************************************
 277:risspzho.c    **** //							Konfiguracja PWM
 278:risspzho.c    **** //************************************************************
 279:risspzho.c    **** 
 280:risspzho.c    **** // Rozdzielczosc PWM: Rpcpwm = log(TOP + 1)/log(2) = 10 bit,
 281:risspzho.c    **** // Czêstotliwoœæ PWM: focnxpwm = fclk/(2 * N * TOP) = 2kHz.
 282:risspzho.c    **** 
 283:risspzho.c    **** 	TCCR1A |= _BV(COM1A1);		// Clear OC1A/OC1B on compare match,
 819               	
 821 0404 AFE4      	.LM72:
 822 0406 B0E0      		ldi r26,lo8(78)
 823 0408 EFE4      		ldi r27,hi8(78)
 824 040a F0E0      		ldi r30,lo8(78)
 825 040c 8081      		ldi r31,hi8(78)
 826 040e 8068      		ld r24,Z
 827 0410 8C93      		ori r24,lo8(1)
 284:risspzho.c    **** 										// set OC1A/OC1B at BOTTOM.
 285:risspzho.c    **** 	
 286:risspzho.c    **** 	TCCR1B |= _BV(WGM13);		// Mode 10: PWM, Phase Correct,
 828               	4
 830 0412 AEE4      	.LM73:
 831 0414 B0E0      		ldi r30,lo8(70)
 832 0416 EEE4      		ldi r31,hi8(70)
 833 0418 F0E0      		ldi r24,lo8(2000)
 834 041a 8081      		ldi r25,hi8(2000)
 835 041c 8061      		std Z+1,r25
 836 041e 8C93      		st Z,r24
 287:risspzho.c    **** 	TCCR1A |= _BV(WGM11);      // TOP = ICR1.
 837               	8,0,297,.LM74-.LFBB2
 838               	.LM74:
 839 0420 AFE4      		ldi r24,lo8(12)
 840 0422 B0E0      		call lcd_init
 842 0426 F0E0      	.LM75:
 843 0428 8081      		ldi r30,lo8(91)
 844 042a 8260      		ldi r31,hi8(91)
 845 042c 8C93      		ldi r24,lo8(64)
 288:risspzho.c    **** 	
 289:risspzho.c    **** 	TCCR1B |= _BV(CS10);			// clk / 1 - bez preskalera.
 846               	
 848 042e AEE4      	.LM76:
 849 0430 B0E0      		ldi r30,lo8(85)
 850 0432 EEE4      		ldi r31,hi8(85)
 851 0434 F0E0      		ldi r24,lo8(2)
 852 0436 8081      		st Z,r24
 853 0438 8160      	/* epilogue start */
 290:risspzho.c    **** 	
 291:risspzho.c    **** 	ICR1 = 0x7D0;					// ICR1=2000, aby uzyskac 2kHz i 10 bit.
 855               	pop r28
 856               		pop r29
 857 043c E6E4      		ret
 859 0440 80ED      	.Lscope2:
 860 0442 97E0      		.data
 861 0444 9183      	.LC4:
 862 0446 8083      		.string	"I rozruchu:\n"
 292:risspzho.c    **** 	
 293:risspzho.c    **** //************************************************************
 294:risspzho.c    **** //							Konfiguracja LCD
 295:risspzho.c    **** //************************************************************	
 296:risspzho.c    **** 
 297:risspzho.c    **** 	lcd_init(LCD_DISP_ON);		// Inicjalizacja wyswietlacza
 863               	string	"Ir = "
 864               	.LC6:
 865 0448 8CE0      		.string	" Za duzy prad:\n"
 866 044a 0E94 0000 	.LC7:
 298:risspzho.c    **** 	
 299:risspzho.c    **** //************************************************************
 300:risspzho.c    **** //		Konfiguracja Przerwania INT0 - Reset zewnetrzny PD2
 301:risspzho.c    **** //************************************************************	
 302:risspzho.c    **** 
 303:risspzho.c    **** 	GICR = _BV(INT0);
 867               	ring	"  (Max 20 A)"
 868               	.LC8:
 869 044e EBE5      		.string	"I hamowania:\n"
 870 0450 F0E0      	.LC9:
 871 0452 80E4      		.string	"Ih = "
 872 0454 8083      	.LC10:
 304:risspzho.c    **** 	
 305:risspzho.c    **** 	MCUCR = _BV(ISC01);
 873               	ng	"  (Max 17 A)"
 874               	.LC11:
 875 0456 E5E5      		.string	" A\n"
 876 0458 F0E0      	.LC12:
 877 045a 82E0      		.string	" A"
 878 045c 8083      		.text
 306:risspzho.c    **** }
 880               		Pobierz_Wartosci
 882 045e CF91      	Pobierz_Wartosci:
 884 0462 0895      	.LM78:
 885               	.LFBB3:
 886               		push r29
 887               		push r28
 888               		in r28,__SP_L__
 889 0048 4920 726F 		in r29,__SP_H__
 889      7A72 7563 
 889      6875 3A0A 
 889      00
 890               		sbiw r28,42
 891 0055 4972 203D 		in __tmp_reg__,__SREG__
 891      2000 
 892               		cli
 893 005b 205A 6120 		out __SP_H__,r29
 893      6475 7A79 
 893      2070 7261 
 893      643A 0A00 
 894               		out __SREG__,__tmp_reg__
 895 006b 2020 284D 		out __SP_L__,r28
 895      6178 2032 
 895      3020 4129 
 895      00
 896               	/* prologue: function */
 897 0078 4920 6861 	/* frame size = 42 */
 897      6D6F 7761 
 897      6E69 613A 
 897      0A00 
 899 0086 4968 203D 	.LM79:
 899      2000 
 900               		sts (i_war_wy)+1,__zero_reg__
 901 008c 2020 284D 		sts i_war_wy,__zero_reg__
 901      6178 2031 
 901      3720 4129 
 901      00
 902               		rjmp .L36
 903 0099 2041 0A00 	.L48:
 905 009d 2041 00   	.LM80:
 906               		call lcd_clrscr
 908               	.LM81:
 909               		ldi r24,lo8(.LC4)
 910               		ldi r25,hi8(.LC4)
 307:risspzho.c    **** 
 308:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 309:risspzho.c    **** 
 310:risspzho.c    **** void Pobierz_Wartosci(void)
 311:risspzho.c    **** {
 911               	,.LM82-.LFBB3
 912               	.LM82:
 913               		ldi r24,lo8(.LC5)
 914 0464 DF93      		ldi r25,hi8(.LC5)
 915 0466 CF93      		call lcd_puts
 917 046a DEB7      	.LM83:
 918 046c AA97      		ldi r24,lo8(14)
 919 046e 0FB6      		call lcd_command
 920 0470 F894      		rjmp .L37
 921 0472 DEBF      	.L38:
 923 0476 CDBF      	.LM84:
 924               		call Klawiatura
 925               		sts (i_war_cof)+1,r25
 312:risspzho.c    **** 	
 313:risspzho.c    **** 	i_war_wy = 0;
 926               	r24
 928 0478 1092 0000 	.LM85:
 929 047c 1092 0000 		lds r24,i_war_cof
 930 0480 00C0      		lds r25,(i_war_cof)+1
 931               		cpi r24,2
 314:risspzho.c    **** //	i_war_cof = 0;
 315:risspzho.c    **** 
 316:risspzho.c    **** 
 317:risspzho.c    **** 	while(!i_war_wy)
 318:risspzho.c    **** 	{	
 319:risspzho.c    **** 		lcd_clrscr();
 932               	25,__zero_reg__
 933               		brne .L37
 320:risspzho.c    **** 	
 321:risspzho.c    **** 		lcd_puts("I rozruchu:\n");
 935               	86:
 936               		ldi r24,lo8(1)
 937 0486 80E0      		ldi r25,hi8(1)
 938 0488 90E0      		sts (i_war_wy)+1,r25
 939 048a 0E94 0000 		sts i_war_wy,r24
 322:risspzho.c    **** 		lcd_puts("Ir = ");
 940               	
 942 048e 80E0      	.LM87:
 943 0490 90E0      		lds r24,i_war_cof
 944 0492 0E94 0000 		lds r25,(i_war_cof)+1
 323:risspzho.c    **** 		
 324:risspzho.c    **** 		lcd_command(LCD_DISP_ON_CURSOR);
 945               	w r24,0
 946               		breq .L38
 948 0498 0E94 0000 	.LM88:
 949 049c 00C0      		sts (i_war_cof)+1,__zero_reg__
 950               		sts i_war_cof,__zero_reg__
 325:risspzho.c    **** 
 326:risspzho.c    **** 		while(!i_war_cof)	
 327:risspzho.c    ****    	{
 328:risspzho.c    ****     			
 329:risspzho.c    ****     		i_war_cof = Klawiatura();   	// Obs³uga klawiszy
 951               	n	68,0,341,.LM89-.LFBB3
 952               	.LM89:
 953 049e 0E94 0000 		lds r24,ui_liczba_w
 954 04a2 9093 0000 		lds r25,(ui_liczba_w)+1
 955 04a6 8093 0000 		cpi r24,21
 330:risspzho.c    ****     		//i_war_cof = (*wskf_int[3])();
 331:risspzho.c    ****     			
 332:risspzho.c    ****     			if( i_war_cof == 2)
 956               	r25,__zero_reg__
 957               		brsh .+2
 958 04aa 8091 0000 		rjmp .L39
 959 04ae 9091 0000 		lds r24,i_war_wy
 960 04b2 8230      		lds r25,(i_war_wy)+1
 961 04b4 9105      		cpi r24,1
 962 04b6 01F4      		cpc r25,__zero_reg__
 333:risspzho.c    ****     			{
 334:risspzho.c    ****     				i_war_wy = 1;
 963               	+2
 964               		rjmp .L39
 966 04ba 90E0      	.LM90:
 967 04bc 9093 0000 		call lcd_clrscr
 969               	.LM91:
 970               		ldi r24,lo8(.LC6)
 971               		ldi r25,hi8(.LC6)
 972 04c4 8091 0000 		call lcd_puts
 974 04cc 0097      	.LM92:
 975 04ce 01F0      		ldi r24,lo8(.LC7)
 335:risspzho.c    ****     			}
 336:risspzho.c    ****     		
 337:risspzho.c    **** 		}
 338:risspzho.c    **** 		
 339:risspzho.c    **** 		i_war_cof = 0;
 976               	.LC7)
 977               		call lcd_puts
 978 04d0 1092 0000 		ldi r24,lo8(0x451c4000)
 979 04d4 1092 0000 		ldi r25,hi8(0x451c4000)
 340:risspzho.c    **** 		
 341:risspzho.c    **** 		if(ui_liczba_w > 20 && i_war_wy == 1)
 980               	 r26,hlo8(0x451c4000)
 981               		ldi r27,hhi8(0x451c4000)
 982 04d8 8091 0000 		std Y+39,r24
 983 04dc 9091 0000 		std Y+40,r25
 984 04e0 8531      		std Y+41,r26
 985 04e2 9105      		std Y+42,r27
 986 04e4 00F4      	.LBB44:
 987 04e6 00C0      	.LBB45:
 989 04ec 9091 0000 	.Ltext11:
 991 04f2 9105      	.LM93:
 992 04f4 01F0      		ldi r18,lo8(0x44fa0000)
 993 04f6 00C0      		ldi r19,hi8(0x44fa0000)
 342:risspzho.c    **** 		{
 343:risspzho.c    **** 			lcd_clrscr();
 994               	0x44fa0000)
 995               		ldi r21,hhi8(0x44fa0000)
 996 04f8 0E94 0000 		ldd r22,Y+39
 344:risspzho.c    **** 			lcd_puts(" Za duzy prad:\n");
 997               	d r23,Y+40
 998               		ldd r24,Y+41
 999 04fc 80E0      		ldd r25,Y+42
 1000 04fe 90E0      		call __mulsf3
 1001 0500 0E94 0000 		movw r26,r24
 345:risspzho.c    **** 			lcd_puts("  (Max 20 A)");
 1002               	 r24,r22
 1003               		std Y+35,r24
 1004 0504 80E0      		std Y+36,r25
 1005 0506 90E0      		std Y+37,r26
 1006 0508 0E94 0000 		std Y+38,r27
 1008 050e 90E4      	.LM94:
 1009 0510 ACE1      		ldi r18,lo8(0x3f800000)
 1010 0512 B5E4      		ldi r19,hi8(0x3f800000)
 1011 0514 8FA3      		ldi r20,hlo8(0x3f800000)
 1012 0516 98A7      		ldi r21,hhi8(0x3f800000)
 1013 0518 A9A7      		ldd r22,Y+35
 1014 051a BAA7      		ldd r23,Y+36
 1015               		ldd r24,Y+37
 1016               		ldd r25,Y+38
 1017               		call __ltsf2
 1018               		tst r24
 1019               		brge .L77
 1020               	.L71:
 1022 051e 30E0      	.LM95:
 1023 0520 4AEF      		ldi r24,lo8(1)
 1024 0522 54E4      		ldi r25,hi8(1)
 1025 0524 6FA1      		std Y+34,r25
 1026 0526 78A5      		std Y+33,r24
 1027 0528 89A5      		rjmp .L42
 1028 052a 9AA5      	.L77:
 1030 0530 DC01      	.LM96:
 1031 0532 CB01      		ldi r18,lo8(0x477fff00)
 1032 0534 8BA3      		ldi r19,hi8(0x477fff00)
 1033 0536 9CA3      		ldi r20,hlo8(0x477fff00)
 1034 0538 ADA3      		ldi r21,hhi8(0x477fff00)
 1035 053a BEA3      		ldd r22,Y+35
 1036               		ldd r23,Y+36
 1037               		ldd r24,Y+37
 1038 053c 20E0      		ldd r25,Y+38
 1039 053e 30E0      		call __gtsf2
 1040 0540 40E8      		cp __zero_reg__,r24
 1041 0542 5FE3      		brge .L78
 1042 0544 6BA1      	.L72:
 1044 0548 8DA1      	.LM97:
 1045 054a 9EA1      		ldi r18,lo8(0x41200000)
 1046 054c 0E94 0000 		ldi r19,hi8(0x41200000)
 1047 0550 8823      		ldi r20,hlo8(0x41200000)
 1048 0552 04F4      		ldi r21,hhi8(0x41200000)
 1049               		ldd r22,Y+39
 1050               		ldd r23,Y+40
 1051               		ldd r24,Y+41
 1052 0554 81E0      		ldd r25,Y+42
 1053 0556 90E0      		call __mulsf3
 1054 0558 9AA3      		movw r26,r24
 1055 055a 89A3      		movw r24,r22
 1056 055c 00C0      		movw r22,r24
 1057               		movw r24,r26
 1058               		call __fixunssfsi
 1059               		movw r26,r24
 1060 055e 20E0      		movw r24,r22
 1061 0560 3FEF      		std Y+34,r25
 1062 0562 4FE7      		std Y+33,r24
 1063 0564 57E4      		rjmp .L45
 1064 0566 6BA1      	.L46:
 1065 0568 7CA1      		ldi r24,lo8(200)
 1066 056a 8DA1      		ldi r25,hi8(200)
 1067 056c 9EA1      		std Y+32,r25
 1068 056e 0E94 0000 		std Y+31,r24
 1069 0572 1816      	.LBB46:
 1070 0574 04F4      	.LBB47:
 1072               	.Ltext12:
 1074 0576 20E0      	.LM98:
 1075 0578 30E0      		ldd r24,Y+31
 1076 057a 40E2      		ldd r25,Y+32
 1077 057c 51E4      	/* #APP */
 1078 057e 6FA1      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1079 0580 78A5      		1: sbiw r24,1
 1080 0582 89A5      		brne 1b
 1081 0584 9AA5      	 ;  0 "" 2
 1082 0586 0E94 0000 	/* #NOAPP */
 1083 058a DC01      		std Y+32,r25
 1084 058c CB01      		std Y+31,r24
 1085 058e BC01      	.LBE47:
 1086 0590 CD01      	.LBE46:
 1088 0596 DC01      	.Ltext13:
 1090 059a 9AA3      	.LM99:
 1091 059c 89A3      		ldd r24,Y+33
 1092 059e 00C0      		ldd r25,Y+34
 1093               		sbiw r24,1
 1094 05a0 88EC      		std Y+34,r25
 1095 05a2 90E0      		std Y+33,r24
 1096 05a4 98A3      	.L45:
 1098               	.LM100:
 1099               		ldd r24,Y+33
 1100               		ldd r25,Y+34
 1101               		sbiw r24,0
 1102               		brne .L46
 1103               		rjmp .L47
 1104 05a8 8F8D      	.L78:
 1106               	.LM101:
 1107               		ldd r22,Y+35
 1108 05ac 0197      		ldd r23,Y+36
 1109 05ae 01F4      		ldd r24,Y+37
 1110               		ldd r25,Y+38
 1111               		call __fixunssfsi
 1112 05b0 98A3      		movw r26,r24
 1113 05b2 8F8F      		movw r24,r22
 1114               		std Y+34,r25
 1115               		std Y+33,r24
 1116               	.L42:
 1117               		ldd r24,Y+33
 1118               		ldd r25,Y+34
 1119               		std Y+30,r25
 1120 05b4 89A1      		std Y+29,r24
 1121 05b6 9AA1      	.LBB48:
 1122 05b8 0197      	.LBB49:
 1124 05bc 89A3      	.Ltext14:
 1126               	.LM102:
 1127               		ldd r24,Y+29
 1128 05be 89A1      		ldd r25,Y+30
 1129 05c0 9AA1      	/* #APP */
 1130 05c2 0097      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1131 05c4 01F4      		1: sbiw r24,1
 1132 05c6 00C0      		brne 1b
 1133               	 ;  0 "" 2
 1134               	/* #NOAPP */
 1135               		std Y+30,r25
 1136 05c8 6BA1      		std Y+29,r24
 1137 05ca 7CA1      	.L47:
 1138 05cc 8DA1      	.LBE49:
 1139 05ce 9EA1      	.LBE48:
 1140 05d0 0E94 0000 	.LBE45:
 1141 05d4 DC01      	.LBE44:
 1143 05d8 9AA3      	.Ltext15:
 1145               	.LM103:
 1146 05dc 89A1      		sts (i_war_wy)+1,__zero_reg__
 1147 05de 9AA1      		sts i_war_wy,__zero_reg__
 1148 05e0 9E8F      	.L39:
 1150               	.LM104:
 1151               		lds r24,ui_liczba_w
 1152               		lds r25,(ui_liczba_w)+1
 1153               		sts (ui_Ir_ogr)+1,r25
 1154               		sts ui_Ir_ogr,r24
 1156 05e4 8D8D      	.LM105:
 1157 05e6 9E8D      		sts (ui_liczba_w)+1,__zero_reg__
 1158               		sts ui_liczba_w,__zero_reg__
 1159               	.L36:
 1161 05ea 01F4      	.LM106:
 1162               		lds r24,i_war_wy
 1163               		lds r25,(i_war_wy)+1
 1164 05ec 9E8F      		sbiw r24,0
 1165 05ee 8D8F      		brne .+2
 1166               		rjmp .L48
 1168               	.LM107:
 1169               		sts (i_war_wy)+1,__zero_reg__
 1170               		sts i_war_wy,__zero_reg__
 1171               		rjmp .L49
 1172               	.L61:
 346:risspzho.c    **** 			
 347:risspzho.c    **** 			_delay_ms(2500);
 348:risspzho.c    **** 			
 349:risspzho.c    **** 			i_war_wy = 0;
 1173               	-.LFBB3
 1174               	.LM110:
 1175 05f0 1092 0000 		ldi r24,lo8(.LC9)
 1176 05f4 1092 0000 		ldi r25,hi8(.LC9)
 1177               		call lcd_puts
 350:risspzho.c    **** 		}
 351:risspzho.c    **** 		ui_Ir_ogr = ui_liczba_w;
 1178               	bn	68,0,363,.LM111-.LFBB3
 1179               	.LM111:
 1180 05f8 8091 0000 		ldi r24,lo8(14)
 1181 05fc 9091 0000 		call lcd_command
 1182 0600 9093 0000 		rjmp .L50
 1183 0604 8093 0000 	.L51:
 352:risspzho.c    **** 		ui_liczba_w = 0;
 1184               	n	68,0,367,.LM112-.LFBB3
 1185               	.LM112:
 1186 0608 1092 0000 		call Klawiatura
 1187 060c 1092 0000 		sts (i_war_cof)+1,r25
 1188               		sts i_war_cof,r24
 1190               	.LM113:
 1191 0610 8091 0000 		lds r24,i_war_cof
 1192 0614 9091 0000 		lds r25,(i_war_cof)+1
 1193 0618 0097      		cpi r24,2
 1194 061a 01F4      		cpc r25,__zero_reg__
 1195 061c 00C0      		brne .L50
 353:risspzho.c    **** 		
 354:risspzho.c    **** 	}
 355:risspzho.c    **** 	
 356:risspzho.c    **** 		i_war_wy=0;
 1196               	,372,.LM114-.LFBB3
 1197               	.LM114:
 1198 061e 1092 0000 		ldi r24,lo8(1)
 1199 0622 1092 0000 		ldi r25,hi8(1)
 1200 0626 00C0      		sts (i_war_wy)+1,r25
 1201               		sts i_war_wy,r24
 357:risspzho.c    **** 		while(!i_war_wy)
 358:risspzho.c    **** 	{	
 359:risspzho.c    **** 		lcd_clrscr();
 1203               	.LM115:
 1204 0628 0E94 0000 		lds r24,i_war_cof
 360:risspzho.c    **** 	
 361:risspzho.c    **** 		lcd_puts("I hamowania:\n");
 1205               	s r25,(i_war_cof)+1
 1206               		sbiw r24,0
 1207 062c 80E0      		breq .L51
 1209 0630 0E94 0000 	.LM116:
 362:risspzho.c    **** 		lcd_puts("Ih = ");
 1210               	(i_war_cof)+1,__zero_reg__
 1211               		sts i_war_cof,__zero_reg__
 1213 0636 90E0      	.LM117:
 1214 0638 0E94 0000 		lds r24,ui_liczba_w
 363:risspzho.c    **** 		lcd_command(LCD_DISP_ON_CURSOR);
 1215               	r25,(ui_liczba_w)+1
 1216               		cpi r24,18
 1217 063c 8EE0      		cpc r25,__zero_reg__
 1218 063e 0E94 0000 		brsh .+2
 1219 0642 00C0      		rjmp .L52
 1220               		lds r24,i_war_wy
 364:risspzho.c    **** 	
 365:risspzho.c    **** 		while(!i_war_cof)
 366:risspzho.c    **** 		{
 367:risspzho.c    **** 				i_war_cof = Klawiatura();
 1221               	25,(i_war_wy)+1
 1222               		cpi r24,1
 1223 0644 0E94 0000 		cpc r25,__zero_reg__
 1224 0648 9093 0000 		breq .+2
 1225 064c 8093 0000 		rjmp .L52
 368:risspzho.c    **** 		//		i_war_cof = (*wskf_int[3])();
 369:risspzho.c    **** 				
 370:risspzho.c    **** 				if( i_war_cof == 2)
 1226               	bn	68,0,379,.LM118-.LFBB3
 1227               	.LM118:
 1228 0650 8091 0000 		call lcd_clrscr
 1230 0658 8230      	.LM119:
 1231 065a 9105      		ldi r24,lo8(.LC6)
 1232 065c 01F4      		ldi r25,hi8(.LC6)
 371:risspzho.c    ****     			{
 372:risspzho.c    ****     				i_war_wy = 1;
 1233               	cd_puts
 1235 065e 81E0      	.LM120:
 1236 0660 90E0      		ldi r24,lo8(.LC10)
 1237 0662 9093 0000 		ldi r25,hi8(.LC10)
 1238 0666 8093 0000 		call lcd_puts
 1239               		ldi r24,lo8(0x451c4000)
 1240               		ldi r25,hi8(0x451c4000)
 1241               		ldi r26,hlo8(0x451c4000)
 1242 066a 8091 0000 		ldi r27,hhi8(0x451c4000)
 1243 066e 9091 0000 		std Y+25,r24
 1244 0672 0097      		std Y+26,r25
 1245 0674 01F0      		std Y+27,r26
 373:risspzho.c    ****     			}
 374:risspzho.c    **** 		}
 375:risspzho.c    **** 		i_war_cof = 0;
 1246               	
 1247               	.LBB50:
 1248 0676 1092 0000 	.LBB51:
 376:risspzho.c    **** 		
 377:risspzho.c    **** 		if(ui_liczba_w > 17 && i_war_wy == 1)
 1250               	ext16:
 1252 067e 8091 0000 	.LM121:
 1253 0682 9091 0000 		ldi r18,lo8(0x44fa0000)
 1254 0686 8231      		ldi r19,hi8(0x44fa0000)
 1255 0688 9105      		ldi r20,hlo8(0x44fa0000)
 1256 068a 00F4      		ldi r21,hhi8(0x44fa0000)
 1257 068c 00C0      		ldd r22,Y+25
 1258 068e 8091 0000 		ldd r23,Y+26
 1259 0692 9091 0000 		ldd r24,Y+27
 1260 0696 8130      		ldd r25,Y+28
 1261 0698 9105      		call __mulsf3
 1262 069a 01F0      		movw r26,r24
 1263 069c 00C0      		movw r24,r22
 378:risspzho.c    **** 		{
 379:risspzho.c    **** 			lcd_clrscr();
 1264               		std Y+22,r25
 1265               		std Y+23,r26
 1266 069e 0E94 0000 		std Y+24,r27
 380:risspzho.c    **** 			lcd_puts(" Za duzy prad:\n");
 1267               	tabn	68,0,146,.LM122-.LFBB3
 1268               	.LM122:
 1269 06a2 80E0      		ldi r18,lo8(0x3f800000)
 1270 06a4 90E0      		ldi r19,hi8(0x3f800000)
 1271 06a6 0E94 0000 		ldi r20,hlo8(0x3f800000)
 381:risspzho.c    **** 			lcd_puts("  (Max 17 A)");
 1272               	r21,hhi8(0x3f800000)
 1273               		ldd r22,Y+21
 1274 06aa 80E0      		ldd r23,Y+22
 1275 06ac 90E0      		ldd r24,Y+23
 1276 06ae 0E94 0000 		ldd r25,Y+24
 1277 06b2 80E0      		call __ltsf2
 1278 06b4 90E4      		tst r24
 1279 06b6 ACE1      		brge .L79
 1280 06b8 B5E4      	.L73:
 1282 06bc 9A8F      	.LM123:
 1283 06be AB8F      		ldi r24,lo8(1)
 1284 06c0 BC8F      		ldi r25,hi8(1)
 1285               		std Y+20,r25
 1286               		std Y+19,r24
 1287               		rjmp .L55
 1288               	.L79:
 1290               	.LM124:
 1291 06c2 20E0      		ldi r18,lo8(0x477fff00)
 1292 06c4 30E0      		ldi r19,hi8(0x477fff00)
 1293 06c6 4AEF      		ldi r20,hlo8(0x477fff00)
 1294 06c8 54E4      		ldi r21,hhi8(0x477fff00)
 1295 06ca 698D      		ldd r22,Y+21
 1296 06cc 7A8D      		ldd r23,Y+22
 1297 06ce 8B8D      		ldd r24,Y+23
 1298 06d0 9C8D      		ldd r25,Y+24
 1299 06d2 0E94 0000 		call __gtsf2
 1300 06d6 DC01      		cp __zero_reg__,r24
 1301 06d8 CB01      		brge .L80
 1302 06da 8D8B      	.L74:
 1304 06de AF8B      	.LM125:
 1305 06e0 B88F      		ldi r18,lo8(0x41200000)
 1306               		ldi r19,hi8(0x41200000)
 1307               		ldi r20,hlo8(0x41200000)
 1308 06e2 20E0      		ldi r21,hhi8(0x41200000)
 1309 06e4 30E0      		ldd r22,Y+25
 1310 06e6 40E8      		ldd r23,Y+26
 1311 06e8 5FE3      		ldd r24,Y+27
 1312 06ea 6D89      		ldd r25,Y+28
 1313 06ec 7E89      		call __mulsf3
 1314 06ee 8F89      		movw r26,r24
 1315 06f0 988D      		movw r24,r22
 1316 06f2 0E94 0000 		movw r22,r24
 1317 06f6 8823      		movw r24,r26
 1318 06f8 04F4      		call __fixunssfsi
 1319               		movw r26,r24
 1320               		movw r24,r22
 1321               		std Y+20,r25
 1322 06fa 81E0      		std Y+19,r24
 1323 06fc 90E0      		rjmp .L58
 1324 06fe 9C8B      	.L59:
 1325 0700 8B8B      		ldi r24,lo8(200)
 1326 0702 00C0      		ldi r25,hi8(200)
 1327               		std Y+18,r25
 1328               		std Y+17,r24
 1329               	.LBB52:
 1330 0704 20E0      	.LBB53:
 1332 0708 4FE7      	.Ltext17:
 1334 070c 6D89      	.LM126:
 1335 070e 7E89      		ldd r24,Y+17
 1336 0710 8F89      		ldd r25,Y+18
 1337 0712 988D      	/* #APP */
 1338 0714 0E94 0000 	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1339 0718 1816      		1: sbiw r24,1
 1340 071a 04F4      		brne 1b
 1341               	 ;  0 "" 2
 1342               	/* #NOAPP */
 1343               		std Y+18,r25
 1344 071c 20E0      		std Y+17,r24
 1345 071e 30E0      	.LBE53:
 1346 0720 40E2      	.LBE52:
 1348 0724 698D      	.Ltext18:
 1350 0728 8B8D      	.LM127:
 1351 072a 9C8D      		ldd r24,Y+19
 1352 072c 0E94 0000 		ldd r25,Y+20
 1353 0730 DC01      		sbiw r24,1
 1354 0732 CB01      		std Y+20,r25
 1355 0734 BC01      		std Y+19,r24
 1356 0736 CD01      	.L58:
 1358 073c DC01      	.LM128:
 1359 073e CB01      		ldd r24,Y+19
 1360 0740 9C8B      		ldd r25,Y+20
 1361 0742 8B8B      		sbiw r24,0
 1362 0744 00C0      		brne .L59
 1363               		rjmp .L60
 1364 0746 88EC      	.L80:
 1366 074a 9A8B      	.LM129:
 1367 074c 898B      		ldd r22,Y+21
 1368               		ldd r23,Y+22
 1369               		ldd r24,Y+23
 1370               		ldd r25,Y+24
 1371               		call __fixunssfsi
 1372               		movw r26,r24
 1373               		movw r24,r22
 1374 074e 8989      		std Y+20,r25
 1375 0750 9A89      		std Y+19,r24
 1376               	.L55:
 1377               		ldd r24,Y+19
 1378 0752 0197      		ldd r25,Y+20
 1379 0754 01F4      		std Y+16,r25
 1380               		std Y+15,r24
 1381               	.LBB54:
 1382 0756 9A8B      	.LBB55:
 1384               	.Ltext19:
 1386               	.LM130:
 1387               		ldd r24,Y+15
 1388               		ldd r25,Y+16
 1389               	/* #APP */
 1390 075a 8B89      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1391 075c 9C89      		1: sbiw r24,1
 1392 075e 0197      		brne 1b
 1393 0760 9C8B      	 ;  0 "" 2
 1394 0762 8B8B      	/* #NOAPP */
 1395               		std Y+16,r25
 1396               		std Y+15,r24
 1397               	.L60:
 1398 0764 8B89      	.LBE55:
 1399 0766 9C89      	.LBE54:
 1400 0768 0097      	.LBE51:
 1401 076a 01F4      	.LBE50:
 1403               	.Ltext20:
 1405               	.LM131:
 1406 076e 6D89      		sts (i_war_wy)+1,__zero_reg__
 1407 0770 7E89      		sts i_war_wy,__zero_reg__
 1408 0772 8F89      	.L52:
 1410 0776 0E94 0000 	.LM132:
 1411 077a DC01      		call lcd_clrscr
 1413 077e 9C8B      	.LM133:
 1414 0780 8B8B      		lds r24,ui_liczba_w
 1415               		lds r25,(ui_liczba_w)+1
 1416 0782 8B89      		sts (ui_Ih_ogr)+1,r25
 1417 0784 9C89      		sts ui_Ih_ogr,r24
 1419 0788 8F87      	.LM134:
 1420               		sts (ui_liczba_w)+1,__zero_reg__
 1421               		sts ui_liczba_w,__zero_reg__
 1422               	.L49:
 1424               	.LM135:
 1425               		lds r24,i_war_wy
 1426 078a 8F85      		lds r25,(i_war_wy)+1
 1427 078c 9889      		sbiw r24,0
 1428               		brne .+2
 1429               		rjmp .L61
 1431 0790 01F4      	.LM136:
 1432               		ldi r24,lo8(12)
 1433               		call lcd_command
 1435 0794 8F87      	.LM137:
 1436               		call lcd_clrscr
 1438               	.LM138:
 1439               		lds r18,ui_Ir_ogr
 1440               		lds r19,(ui_Ir_ogr)+1
 1441               		ldi r24,lo8(c_buffer_n)
 1442               		ldi r25,hi8(c_buffer_n)
 382:risspzho.c    **** 			
 383:risspzho.c    **** 			_delay_ms(2500);
 384:risspzho.c    **** 						
 385:risspzho.c    **** 			i_war_wy = 0;
 1443               	n	68,0,397,.LM140-.LFBB3
 1444               	.LM140:
 1445 0796 1092 0000 		ldi r24,lo8(c_buffer_n)
 1446 079a 1092 0000 		ldi r25,hi8(c_buffer_n)
 1447               		call lcd_puts
 386:risspzho.c    **** 		}
 387:risspzho.c    **** 		lcd_clrscr();
 1448               	bn	68,0,398,.LM141-.LFBB3
 1449               	.LM141:
 1450 079e 0E94 0000 		ldi r24,lo8(.LC11)
 388:risspzho.c    **** 		ui_Ih_ogr = ui_liczba_w;
 1451               	i r25,hi8(.LC11)
 1452               		call lcd_puts
 1454 07a6 9091 0000 	.LM142:
 1455 07aa 9093 0000 		lds r18,ui_Ih_ogr
 1456 07ae 8093 0000 		lds r19,(ui_Ih_ogr)+1
 389:risspzho.c    **** 		ui_liczba_w = 0;
 1457               	24,lo8(c_buffer_n)
 1458               		ldi r25,hi8(c_buffer_n)
 1459 07b2 1092 0000 		ldi r20,lo8(10)
 1460 07b6 1092 0000 		ldi r21,hi8(10)
 1461               		movw r22,r24
 1462               		movw r24,r18
 1463               		call utoa
 1465 07be 9091 0000 	.LM143:
 1466 07c2 0097      		ldi r24,lo8(.LC9)
 1467 07c4 01F4      		ldi r25,hi8(.LC9)
 1468 07c6 00C0      		call lcd_puts
 390:risspzho.c    ****    }
 391:risspzho.c    **** 
 392:risspzho.c    **** 	lcd_command(LCD_DISP_ON);
 1469               	,402,.LM144-.LFBB3
 1470               	.LM144:
 1471 07c8 8CE0      		ldi r24,lo8(c_buffer_n)
 1472 07ca 0E94 0000 		ldi r25,hi8(c_buffer_n)
 393:risspzho.c    **** 	lcd_clrscr();
 1473               	l lcd_puts
 1475 07ce 0E94 0000 	.LM145:
 394:risspzho.c    **** 	
 395:risspzho.c    **** 	utoa(ui_Ir_ogr, c_buffer_n, 10);
 1476               	i r24,lo8(.LC12)
 1477               		ldi r25,hi8(.LC12)
 1478 07d2 2091 0000 		call lcd_puts
 1479 07d6 3091 0000 		ldi r24,lo8(0x451c4000)
 1480 07da 80E0      		ldi r25,hi8(0x451c4000)
 1481 07dc 90E0      		ldi r26,hlo8(0x451c4000)
 1482 07de 4AE0      		ldi r27,hhi8(0x451c4000)
 1483 07e0 50E0      		std Y+11,r24
 1484 07e2 BC01      		std Y+12,r25
 1485 07e4 C901      		std Y+13,r26
 1486 07e6 0E94 0000 		std Y+14,r27
 396:risspzho.c    **** 	lcd_puts("Ir = ");
 1487               	B57:
 1489 07ea 80E0      	.Ltext21:
 1491 07ee 0E94 0000 	.LM146:
 397:risspzho.c    **** 	lcd_puts(c_buffer_n);
 1492               	r18,lo8(0x44fa0000)
 1493               		ldi r19,hi8(0x44fa0000)
 1494 07f2 80E0      		ldi r20,hlo8(0x44fa0000)
 1495 07f4 90E0      		ldi r21,hhi8(0x44fa0000)
 1496 07f6 0E94 0000 		ldd r22,Y+11
 398:risspzho.c    **** 	lcd_puts(" A\n");
 1497               	r23,Y+12
 1498               		ldd r24,Y+13
 1499 07fa 80E0      		ldd r25,Y+14
 1500 07fc 90E0      		call __mulsf3
 1501 07fe 0E94 0000 		movw r26,r24
 399:risspzho.c    **** 	
 400:risspzho.c    **** 	utoa(ui_Ih_ogr, c_buffer_n, 10);
 1502               	 r24,r22
 1503               		std Y+7,r24
 1504 0802 2091 0000 		std Y+8,r25
 1505 0806 3091 0000 		std Y+9,r26
 1506 080a 80E0      		std Y+10,r27
 1508 080e 4AE0      	.LM147:
 1509 0810 50E0      		ldi r18,lo8(0x3f800000)
 1510 0812 BC01      		ldi r19,hi8(0x3f800000)
 1511 0814 C901      		ldi r20,hlo8(0x3f800000)
 1512 0816 0E94 0000 		ldi r21,hhi8(0x3f800000)
 401:risspzho.c    **** 	lcd_puts("Ih = ");
 1513               	7
 1514               		ldd r23,Y+8
 1515 081a 80E0      		ldd r24,Y+9
 1516 081c 90E0      		ldd r25,Y+10
 1517 081e 0E94 0000 		call __ltsf2
 402:risspzho.c    **** 	lcd_puts(c_buffer_n);
 1518               	r24
 1519               		brge .L81
 1520 0822 80E0      	.L75:
 1522 0826 0E94 0000 	.LM148:
 403:risspzho.c    **** 	lcd_puts(" A");
 1523               	r24,lo8(1)
 1524               		ldi r25,hi8(1)
 1525 082a 80E0      		std Y+6,r25
 1526 082c 90E0      		std Y+5,r24
 1527 082e 0E94 0000 		rjmp .L64
 1528 0832 80E0      	.L81:
 1530 0836 ACE1      	.LM149:
 1531 0838 B5E4      		ldi r18,lo8(0x477fff00)
 1532 083a 8B87      		ldi r19,hi8(0x477fff00)
 1533 083c 9C87      		ldi r20,hlo8(0x477fff00)
 1534 083e AD87      		ldi r21,hhi8(0x477fff00)
 1535 0840 BE87      		ldd r22,Y+7
 1536               		ldd r23,Y+8
 1537               		ldd r24,Y+9
 1538               		ldd r25,Y+10
 1539               		call __gtsf2
 1540               		cp __zero_reg__,r24
 1541               		brge .L82
 1542 0842 20E0      	.L76:
 1544 0846 4AEF      	.LM150:
 1545 0848 54E4      		ldi r18,lo8(0x41200000)
 1546 084a 6B85      		ldi r19,hi8(0x41200000)
 1547 084c 7C85      		ldi r20,hlo8(0x41200000)
 1548 084e 8D85      		ldi r21,hhi8(0x41200000)
 1549 0850 9E85      		ldd r22,Y+11
 1550 0852 0E94 0000 		ldd r23,Y+12
 1551 0856 DC01      		ldd r24,Y+13
 1552 0858 CB01      		ldd r25,Y+14
 1553 085a 8F83      		call __mulsf3
 1554 085c 9887      		movw r26,r24
 1555 085e A987      		movw r24,r22
 1556 0860 BA87      		movw r22,r24
 1557               		movw r24,r26
 1558               		call __fixunssfsi
 1559 0862 20E0      		movw r26,r24
 1560 0864 30E0      		movw r24,r22
 1561 0866 40E8      		std Y+6,r25
 1562 0868 5FE3      		std Y+5,r24
 1563 086a 6F81      		rjmp .L67
 1564 086c 7885      	.L68:
 1565 086e 8985      		ldi r24,lo8(200)
 1566 0870 9A85      		ldi r25,hi8(200)
 1567 0872 0E94 0000 		std Y+4,r25
 1568 0876 8823      		std Y+3,r24
 1569 0878 04F4      	.LBB58:
 1570               	.LBB59:
 1572               	.Ltext22:
 1574 087c 90E0      	.LM151:
 1575 087e 9E83      		ldd r24,Y+3
 1576 0880 8D83      		ldd r25,Y+4
 1577 0882 00C0      	/* #APP */
 1578               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1579               		1: sbiw r24,1
 1580               		brne 1b
 1581 0884 20E0      	 ;  0 "" 2
 1582 0886 3FEF      	/* #NOAPP */
 1583 0888 4FE7      		std Y+4,r25
 1584 088a 57E4      		std Y+3,r24
 1585 088c 6F81      	.LBE59:
 1586 088e 7885      	.LBE58:
 1588 0892 9A85      	.Ltext23:
 1590 0898 1816      	.LM152:
 1591 089a 04F4      		ldd r24,Y+5
 1592               		ldd r25,Y+6
 1593               		sbiw r24,1
 1594               		std Y+6,r25
 1595 089c 20E0      		std Y+5,r24
 1596 089e 30E0      	.L67:
 1598 08a2 51E4      	.LM153:
 1599 08a4 6B85      		ldd r24,Y+5
 1600 08a6 7C85      		ldd r25,Y+6
 1601 08a8 8D85      		sbiw r24,0
 1602 08aa 9E85      		brne .L68
 1603 08ac 0E94 0000 		rjmp .L70
 1604 08b0 DC01      	.L82:
 1606 08b4 BC01      	.LM154:
 1607 08b6 CD01      		ldd r22,Y+7
 1608 08b8 0E94 0000 		ldd r23,Y+8
 1609 08bc DC01      		ldd r24,Y+9
 1610 08be CB01      		ldd r25,Y+10
 1611 08c0 9E83      		call __fixunssfsi
 1612 08c2 8D83      		movw r26,r24
 1613 08c4 00C0      		movw r24,r22
 1614               		std Y+6,r25
 1615 08c6 88EC      		std Y+5,r24
 1616 08c8 90E0      	.L64:
 1617 08ca 9C83      		ldd r24,Y+5
 1618 08cc 8B83      		ldd r25,Y+6
 1619               		std Y+2,r25
 1620               		std Y+1,r24
 1621               	.LBB60:
 1622               	.LBB61:
 1624               	.Ltext24:
 1626 08d0 9C81      	.LM155:
 1627               		ldd r24,Y+1
 1628               		ldd r25,Y+2
 1629 08d2 0197      	/* #APP */
 1630 08d4 01F4      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1631               		1: sbiw r24,1
 1632               		brne 1b
 1633 08d6 9C83      	 ;  0 "" 2
 1634 08d8 8B83      	/* #NOAPP */
 1635               		std Y+2,r25
 1636               		std Y+1,r24
 1637               	.L70:
 1638               	/* epilogue start */
 1639               	.LBE61:
 1640               	.LBE60:
 1641 08da 8D81      	.LBE57:
 1642 08dc 9E81      	.LBE56:
 1644 08e0 9E83      	.Ltext25:
 1646               	.LM156:
 1647               		adiw r28,42
 1648               		in __tmp_reg__,__SREG__
 1649 08e4 8D81      		cli
 1650 08e6 9E81      		out __SP_H__,r29
 1651 08e8 0097      		out __SREG__,__tmp_reg__
 1652 08ea 01F4      		out __SP_L__,r28
 1653 08ec 00C0      		pop r28
 1654               		pop r29
 1655               		ret
 1657 08ee 6F81      	.Lscope3:
 1659 08f2 8985      	.global	Klawiatura
 1661 08f6 0E94 0000 	Klawiatura:
 1663 08fc CB01      	.LM157:
 1664 08fe 9E83      	.LFBB4:
 1665 0900 8D83      		push r29
 1666               		push r28
 1667 0902 8D81      		rcall .
 1668 0904 9E81      		in r28,__SP_L__
 1669 0906 9A83      		in r29,__SP_H__
 1670 0908 8983      	/* prologue: function */
 1671               	/* frame size = 2 */
 1673               	.LM158:
 1674               		lds r24,uc_l_obiegow
 1675               		subi r24,lo8(-(1))
 1676               		sts uc_l_obiegow,r24
 1678 090c 9A81      	.LM159:
 1679               		lds r24,uc_l_obiegow
 1680               		cpi r24,lo8(20)
 1681 090e 0197      		breq .+2
 1682 0910 01F4      		rjmp .L84
 1684               	.LM160:
 1685 0912 9A83      		lds r24,uc_kolumna
 1686 0914 8983      		subi r24,lo8(-(1))
 1687               		sts uc_kolumna,r24
 1689               	.LM161:
 1690               		sts uc_l_obiegow,__zero_reg__
 1692               	.LM162:
 1693               		lds r24,uc_kolumna
 1694               		cpi r24,lo8(4)
 404:risspzho.c    **** 	
 405:risspzho.c    **** 	_delay_ms(2500);
 406:risspzho.c    **** }
 1695               	c_l_spowalniajacy,r24
 1697 0916 AA96      	.LM165:
 1698 0918 0FB6      		lds r24,uc_l_spowalniajacy
 1699 091a F894      		cpi r24,lo8(5)
 1700 091c DEBF      		brne .L85
 1702 0920 CDBF      	.LM166:
 1703 0922 CF91      		lds r24,uc_klawisze
 1704 0924 DF91      		ori r24,lo8(4)
 1705 0926 0895      		sts uc_klawisze,r24
 1707               	.LM167:
 1708               		lds r24,uc_klawisze
 1709               		ori r24,lo8(2)
 1710               		sts uc_klawisze,r24
 407:risspzho.c    **** 
 408:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 409:risspzho.c    **** 
 410:risspzho.c    **** int Klawiatura(void)
 411:risspzho.c    **** {
 1712               	uc_klawisze
 1713               		ori r24,lo8(1)
 1714               		sts uc_klawisze,r24
 1716 092a CF93      	.LM169:
 1717 092c 00D0      		sts uc_nr_przycisku,__zero_reg__
 1719 0930 DEB7      	.LM170:
 1720               		sts uc_l_spowalniajacy,__zero_reg__
 1721               	.L85:
 412:risspzho.c    ****   	uc_l_obiegow++;              						// Licznik obiegów pêtli
 1722               	,0,433,.LM171-.LFBB4
 1723               	.LM171:
 1724 0932 8091 0000 		ldi r30,lo8(56)
 1725 0936 8F5F      		ldi r31,hi8(56)
 1726 0938 8093 0000 		ldi r24,lo8(-1)
 413:risspzho.c    **** 
 414:risspzho.c    **** 	if(uc_l_obiegow == 20)
 1727               	,r24
 1729 093c 8091 0000 	.LM172:
 1730 0940 8431      		ldi r26,lo8(56)
 1731 0942 01F0      		ldi r27,hi8(56)
 1732 0944 00C0      		ldi r30,lo8(56)
 415:risspzho.c    ****     {
 416:risspzho.c    **** 		uc_kolumna++;            						// Licznik kolumny
 1733               	31,hi8(56)
 1734               		ld r24,Z
 1735 0946 8091 0000 		mov r20,r24
 1736 094a 8F5F      		lds r24,uc_kolumna
 1737 094c 8093 0000 		mov r18,r24
 417:risspzho.c    **** 		uc_l_obiegow = 0;
 1738               	r19,lo8(0)
 1739               		ldi r24,lo8(1)
 1740 0950 1092 0000 		ldi r25,hi8(1)
 418:risspzho.c    **** 		if(uc_kolumna == 4)            				// Przepe³nienie licznika obiegów pêtli
 1741               	v r0,r18
 1742               		rjmp 2f
 1743 0954 8091 0000 	1:	lsl r24
 1744 0958 8430      		rol r25
 1745 095a 01F4      	2:	dec r0
 419:risspzho.c    **** 	    {
 420:risspzho.c    **** 	      uc_kolumna = 0;
 1746               	 1b
 1747               		com r24
 1748 095c 1092 0000 		and r24,r20
 421:risspzho.c    **** 	      uc_l_spowalniajacy++;
 1749               	 X,r24
 1750               	.L84:
 1752 0964 8F5F      	.LM173:
 1753 0966 8093 0000 		ldi r30,lo8(54)
 422:risspzho.c    **** 	
 423:risspzho.c    **** 			if(uc_l_spowalniajacy == 5) 				// Licznik spowalniaj¹cy
 1754               	r31,hi8(54)
 1755               		ld r24,Z
 1756 096a 8091 0000 		swap r24
 1757 096e 8530      		andi r24,lo8(15)
 1758 0970 01F4      		cpi r24,lo8(15)
 424:risspzho.c    **** 	        {
 425:risspzho.c    **** 	          SETBIT(uc_klawisze, KLAWISZ);		// Flaga naciœniêcia klawisza
 1759               	 .L86
 1761 0972 8091 0000 	.LM174:
 1762 0976 8460      		lds r24,uc_klawisze
 1763 0978 8093 0000 		andi r24,lo8(-5)
 426:risspzho.c    **** 	          SETBIT(uc_klawisze, KLAWISZ_N);		// Flaga naciœniêcia klawisza numerycznego
 1764               	uc_klawisze,r24
 1766 097c 8091 0000 	.LM175:
 1767 0980 8260      		sts uc_l_spowalniajacy,__zero_reg__
 1768 0982 8093 0000 	.L86:
 427:risspzho.c    **** 	          SETBIT(uc_klawisze, KLAWISZ_F);		// Flaga naciœniêcia klawisza funkcyjnego
 1769               	bn	68,0,442,.LM176-.LFBB4
 1770               	.LM176:
 1771 0986 8091 0000 		lds r24,uc_kolumna
 1772 098a 8160      		tst r24
 1773 098c 8093 0000 		brne .L87
 428:risspzho.c    **** 	          uc_nr_przycisku = 0;
 1774               	bn	68,0,444,.LM177-.LFBB4
 1775               	.LM177:
 1776 0990 1092 0000 		ldi r30,lo8(54)
 429:risspzho.c    **** 	          uc_l_spowalniajacy = 0;
 1777               	i r31,hi8(54)
 1778               		ld r24,Z
 1779 0994 1092 0000 		swap r24
 1780               		andi r24,lo8(15)
 430:risspzho.c    **** 	        }
 431:risspzho.c    **** 	    }
 432:risspzho.c    **** 	
 433:risspzho.c    **** 		PORTB = 0xFF;
 1781               	 r24,lo8(14)
 1782               		brne .L88
 1784 099a F0E0      	.LM178:
 1785 099c 8FEF      		ldi r24,lo8(1)
 1786 099e 8083      		sts uc_nr_przycisku,r24
 434:risspzho.c    **** 		PORTB &= ~_BV(uc_kolumna);
 1788               	.LM179:
 1789 09a0 A8E3      		ldi r30,lo8(54)
 1790 09a2 B0E0      		ldi r31,hi8(54)
 1791 09a4 E8E3      		ld r24,Z
 1792 09a6 F0E0      		swap r24
 1793 09a8 8081      		andi r24,lo8(15)
 1794 09aa 482F      		cpi r24,lo8(13)
 1795 09ac 8091 0000 		brne .L89
 1797 09b2 30E0      	.LM180:
 1798 09b4 81E0      		ldi r24,lo8(4)
 1799 09b6 90E0      		sts uc_nr_przycisku,r24
 1800 09b8 022E      	.L89:
 1802 09bc 880F      	.LM181:
 1803 09be 991F      		ldi r30,lo8(54)
 1804 09c0 0A94      		ldi r31,hi8(54)
 1805 09c2 02F4      		ld r24,Z
 1806 09c4 8095      		swap r24
 1807 09c6 8423      		andi r24,lo8(15)
 1808 09c8 8C93      		cpi r24,lo8(11)
 1809               		brne .L90
 435:risspzho.c    ****     }
 436:risspzho.c    **** 	
 437:risspzho.c    **** 	if ((PINB >> 4) != 15)								// Wykrycie wciœniêcia klawisza
 1810               	-.LFBB4
 1811               	.LM182:
 1812 09ca E6E3      		ldi r24,lo8(7)
 1813 09cc F0E0      		sts uc_nr_przycisku,r24
 1814 09ce 8081      	.L90:
 1816 09d2 8F70      	.LM183:
 1817 09d4 8F30      		ldi r30,lo8(54)
 1818 09d6 01F0      		ldi r31,hi8(54)
 438:risspzho.c    ****     {		
 439:risspzho.c    **** 		CLEARBIT(uc_klawisze, KLAWISZ);				// Ustawienie flagi naciœniêcia klawisza
 1819               	
 1820               		swap r24
 1821 09d8 8091 0000 		andi r24,lo8(15)
 1822 09dc 8B7F      		cpi r24,lo8(7)
 1823 09de 8093 0000 		brne .L87
 440:risspzho.c    **** 		uc_l_spowalniajacy = 0;
 1824               	abn	68,0,458,.LM184-.LFBB4
 1825               	.LM184:
 1826 09e2 1092 0000 		ldi r24,lo8(15)
 1827               		sts uc_nr_przycisku,r24
 441:risspzho.c    ****     }
 442:risspzho.c    **** 	if((uc_kolumna == 0))								// Wykrycie klawisza 1-szej kolumny
 1828               	:
 1830 09e6 8091 0000 	.LM185:
 1831 09ea 8823      		lds r24,uc_kolumna
 1832 09ec 01F4      		cpi r24,lo8(1)
 443:risspzho.c    ****     {
 444:risspzho.c    ****       if((PINB >> 4) == 14)
 1833               	 .L91
 1835 09ee E6E3      	.LM186:
 1836 09f0 F0E0      		ldi r30,lo8(54)
 1837 09f2 8081      		ldi r31,hi8(54)
 1838 09f4 8295      		ld r24,Z
 1839 09f6 8F70      		swap r24
 1840 09f8 8E30      		andi r24,lo8(15)
 1841 09fa 01F4      		cpi r24,lo8(14)
 445:risspzho.c    ****         {
 446:risspzho.c    **** 				uc_nr_przycisku = 1;				     	// Wciœniêto przycisk "1"
 1842               	2
 1844 09fc 81E0      	.LM187:
 1845 09fe 8093 0000 		ldi r24,lo8(2)
 1846               		sts uc_nr_przycisku,r24
 447:risspzho.c    ****         }
 448:risspzho.c    ****       if((PINB >> 4) == 13)	
 1847               	
 1849 0a02 E6E3      	.LM188:
 1850 0a04 F0E0      		ldi r30,lo8(54)
 1851 0a06 8081      		ldi r31,hi8(54)
 1852 0a08 8295      		ld r24,Z
 1853 0a0a 8F70      		swap r24
 1854 0a0c 8D30      		andi r24,lo8(15)
 1855 0a0e 01F4      		cpi r24,lo8(13)
 449:risspzho.c    ****         {
 450:risspzho.c    **** 				uc_nr_przycisku = 4;						// Wciœniêto przycisk "4"
 1856               	93
 1858 0a10 84E0      	.LM189:
 1859 0a12 8093 0000 		ldi r24,lo8(5)
 1860               		sts uc_nr_przycisku,r24
 451:risspzho.c    ****         }
 452:risspzho.c    ****       if((PINB >> 4) == 11)
 1861               	
 1863 0a16 E6E3      	.LM190:
 1864 0a18 F0E0      		ldi r30,lo8(54)
 1865 0a1a 8081      		ldi r31,hi8(54)
 1866 0a1c 8295      		ld r24,Z
 1867 0a1e 8F70      		swap r24
 1868 0a20 8B30      		andi r24,lo8(15)
 1869 0a22 01F4      		cpi r24,lo8(11)
 453:risspzho.c    ****         {
 454:risspzho.c    **** 				uc_nr_przycisku = 7;						// Wciœniêto przycisk "7"
 1870               	94
 1872 0a24 87E0      	.LM191:
 1873 0a26 8093 0000 		ldi r24,lo8(8)
 1874               		sts uc_nr_przycisku,r24
 455:risspzho.c    ****         }
 456:risspzho.c    ****       if((PINB >> 4) == 7)
 1875               	
 1877 0a2a E6E3      	.LM192:
 1878 0a2c F0E0      		ldi r30,lo8(54)
 1879 0a2e 8081      		ldi r31,hi8(54)
 1880 0a30 8295      		ld r24,Z
 1881 0a32 8F70      		swap r24
 1882 0a34 8730      		andi r24,lo8(15)
 1883 0a36 01F4      		cpi r24,lo8(7)
 457:risspzho.c    ****         {
 458:risspzho.c    **** 			uc_nr_przycisku = 15;						// Wciœniêto przycisk "15" (*)
 1884               	91
 1886 0a38 8FE0      	.LM193:
 1887 0a3a 8093 0000 		sts uc_nr_przycisku,__zero_reg__
 1888               	.L91:
 459:risspzho.c    ****         }
 460:risspzho.c    ****     }
 461:risspzho.c    ****   if((uc_kolumna == 1))									// Wykrycie klawisza 2-giej kolumny
 1889               	bn	68,0,480,.LM194-.LFBB4
 1890               	.LM194:
 1891 0a3e 8091 0000 		lds r24,uc_kolumna
 1892 0a42 8130      		cpi r24,lo8(2)
 1893 0a44 01F4      		brne .L95
 462:risspzho.c    ****     {
 463:risspzho.c    ****       if((PINB >> 4) == 14)
 1894               	bn	68,0,482,.LM195-.LFBB4
 1895               	.LM195:
 1896 0a46 E6E3      		ldi r30,lo8(54)
 1897 0a48 F0E0      		ldi r31,hi8(54)
 1898 0a4a 8081      		ld r24,Z
 1899 0a4c 8295      		swap r24
 1900 0a4e 8F70      		andi r24,lo8(15)
 1901 0a50 8E30      		cpi r24,lo8(14)
 1902 0a52 01F4      		brne .L96
 464:risspzho.c    ****         {
 465:risspzho.c    **** 				uc_nr_przycisku = 2;						// Wciœniêto przycisk "2"
 1903               	8,0,484,.LM196-.LFBB4
 1904               	.LM196:
 1905 0a54 82E0      		ldi r24,lo8(3)
 1906 0a56 8093 0000 		sts uc_nr_przycisku,r24
 1907               	.L96:
 466:risspzho.c    ****         }
 467:risspzho.c    ****       if((PINB >> 4) == 13)
 1908               	bn	68,0,486,.LM197-.LFBB4
 1909               	.LM197:
 1910 0a5a E6E3      		ldi r30,lo8(54)
 1911 0a5c F0E0      		ldi r31,hi8(54)
 1912 0a5e 8081      		ld r24,Z
 1913 0a60 8295      		swap r24
 1914 0a62 8F70      		andi r24,lo8(15)
 1915 0a64 8D30      		cpi r24,lo8(13)
 1916 0a66 01F4      		brne .L97
 468:risspzho.c    ****         {
 469:risspzho.c    **** 				uc_nr_przycisku = 5;						// Wciœniêto przycisk "5"
 1917               	8,0,488,.LM198-.LFBB4
 1918               	.LM198:
 1919 0a68 85E0      		ldi r24,lo8(6)
 1920 0a6a 8093 0000 		sts uc_nr_przycisku,r24
 1921               	.L97:
 470:risspzho.c    ****         }
 471:risspzho.c    ****       if((PINB >> 4) == 11)
 1922               	bn	68,0,490,.LM199-.LFBB4
 1923               	.LM199:
 1924 0a6e E6E3      		ldi r30,lo8(54)
 1925 0a70 F0E0      		ldi r31,hi8(54)
 1926 0a72 8081      		ld r24,Z
 1927 0a74 8295      		swap r24
 1928 0a76 8F70      		andi r24,lo8(15)
 1929 0a78 8B30      		cpi r24,lo8(11)
 1930 0a7a 01F4      		brne .L98
 472:risspzho.c    ****         {
 473:risspzho.c    **** 				uc_nr_przycisku = 8;						// Wciœniêto przycisk "8"
 1931               	8,0,492,.LM200-.LFBB4
 1932               	.LM200:
 1933 0a7c 88E0      		ldi r24,lo8(9)
 1934 0a7e 8093 0000 		sts uc_nr_przycisku,r24
 1935               	.L98:
 474:risspzho.c    **** 		  }
 475:risspzho.c    ****       if((PINB >> 4) == 7)
 1936               	bn	68,0,494,.LM201-.LFBB4
 1937               	.LM201:
 1938 0a82 E6E3      		ldi r30,lo8(54)
 1939 0a84 F0E0      		ldi r31,hi8(54)
 1940 0a86 8081      		ld r24,Z
 1941 0a88 8295      		swap r24
 1942 0a8a 8F70      		andi r24,lo8(15)
 1943 0a8c 8730      		cpi r24,lo8(7)
 1944 0a8e 01F4      		brne .L95
 476:risspzho.c    ****         {
 477:risspzho.c    **** 				uc_nr_przycisku = 0;						// Wciœniêto przycisk "0"
 1945               	8,0,496,.LM202-.LFBB4
 1946               	.LM202:
 1947 0a90 1092 0000 		ldi r24,lo8(16)
 1948               		sts uc_nr_przycisku,r24
 478:risspzho.c    ****         }
 479:risspzho.c    ****     }
 480:risspzho.c    ****   if((uc_kolumna == 2))									// Wykrycie klawisza 3-ciej kolumny
 1949               	:
 1951 0a94 8091 0000 	.LM203:
 1952 0a98 8230      		lds r24,uc_kolumna
 1953 0a9a 01F4      		cpi r24,lo8(3)
 481:risspzho.c    ****     {
 482:risspzho.c    ****       if((PINB >> 4) == 14)
 1954               	 .L99
 1956 0a9c E6E3      	.LM204:
 1957 0a9e F0E0      		ldi r30,lo8(54)
 1958 0aa0 8081      		ldi r31,hi8(54)
 1959 0aa2 8295      		ld r24,Z
 1960 0aa4 8F70      		swap r24
 1961 0aa6 8E30      		andi r24,lo8(15)
 1962 0aa8 01F4      		cpi r24,lo8(14)
 483:risspzho.c    ****         {
 484:risspzho.c    **** 				uc_nr_przycisku = 3;						// Wciœniêto przycisk "3"
 1963               	00
 1965 0aaa 83E0      	.LM205:
 1966 0aac 8093 0000 		ldi r24,lo8(11)
 1967               		sts uc_nr_przycisku,r24
 485:risspzho.c    ****         }
 486:risspzho.c    ****       if((PINB >> 4) == 13)
 1968               	:
 1970 0ab0 E6E3      	.LM206:
 1971 0ab2 F0E0      		ldi r30,lo8(54)
 1972 0ab4 8081      		ldi r31,hi8(54)
 1973 0ab6 8295      		ld r24,Z
 1974 0ab8 8F70      		swap r24
 1975 0aba 8D30      		andi r24,lo8(15)
 1976 0abc 01F4      		cpi r24,lo8(13)
 487:risspzho.c    ****         {
 488:risspzho.c    **** 				uc_nr_przycisku = 6;						// Wciœniêto przycisk "6"
 1977               	01
 1979 0abe 86E0      	.LM207:
 1980 0ac0 8093 0000 		ldi r24,lo8(12)
 1981               		sts uc_nr_przycisku,r24
 489:risspzho.c    ****         }
 490:risspzho.c    ****       if((PINB >> 4) == 11)
 1982               	:
 1984 0ac4 E6E3      	.LM208:
 1985 0ac6 F0E0      		ldi r30,lo8(54)
 1986 0ac8 8081      		ldi r31,hi8(54)
 1987 0aca 8295      		ld r24,Z
 1988 0acc 8F70      		swap r24
 1989 0ace 8B30      		andi r24,lo8(15)
 1990 0ad0 01F4      		cpi r24,lo8(11)
 491:risspzho.c    ****         {
 492:risspzho.c    **** 				uc_nr_przycisku = 9; 			     	// Wciœniêto przycisk "9"
 1991               	02
 1993 0ad2 89E0      	.LM209:
 1994 0ad4 8093 0000 		ldi r24,lo8(13)
 1995               		sts uc_nr_przycisku,r24
 493:risspzho.c    ****         }
 494:risspzho.c    ****       if((PINB >> 4) == 7)
 1996               	:
 1998 0ad8 E6E3      	.LM210:
 1999 0ada F0E0      		ldi r30,lo8(54)
 2000 0adc 8081      		ldi r31,hi8(54)
 2001 0ade 8295      		ld r24,Z
 2002 0ae0 8F70      		swap r24
 2003 0ae2 8730      		andi r24,lo8(15)
 2004 0ae4 01F4      		cpi r24,lo8(7)
 495:risspzho.c    ****         {
 496:risspzho.c    **** 				uc_nr_przycisku = 16;					// Wciœniêto przycisk "16" (#)
 2005               	9
 2007 0ae6 80E1      	.LM211:
 2008 0ae8 8093 0000 		ldi r24,lo8(14)
 2009               		sts uc_nr_przycisku,r24
 497:risspzho.c    ****         }
 498:risspzho.c    ****     }	
 499:risspzho.c    ****   if((uc_kolumna == 3))									// Wykrycie klawisza 4-tej kolumny
 2010               	
 2012 0aec 8091 0000 	.LM212:
 2013 0af0 8330      		lds r24,uc_nr_przycisku
 2014 0af2 01F4      		cpi r24,lo8(11)
 500:risspzho.c    ****     {
 501:risspzho.c    ****       if((PINB >> 4) == 14)
 2015               	e .L103
 2016               		lds r24,uc_klawisze
 2017 0af4 E6E3      		mov r24,r24
 2018 0af6 F0E0      		ldi r25,lo8(0)
 2019 0af8 8081      		andi r24,lo8(1)
 2020 0afa 8295      		andi r25,hi8(1)
 2021 0afc 8F70      		tst r24
 2022 0afe 8E30      		breq .L103
 502:risspzho.c    ****         {
 503:risspzho.c    **** 				uc_nr_przycisku = 11;					// Wciœniêto przycisk "11" (A)
 2024               	lds r24,uc_klawisze
 2025               		andi r24,lo8(-2)
 2026 0b02 8BE0      		sts uc_klawisze,r24
 2028               	.LM214:
 504:risspzho.c    ****         }
 505:risspzho.c    ****       if((PINB >> 4) == 13)
 2029               	r24,lo8(2)
 2030               		ldi r25,hi8(2)
 2031 0b08 E6E3      		std Y+2,r25
 2032 0b0a F0E0      		std Y+1,r24
 2033 0b0c 8081      		rjmp .L104
 2034 0b0e 8295      	.L103:
 2036 0b12 8D30      	.LM215:
 2037 0b14 01F4      		lds r24,uc_nr_przycisku
 506:risspzho.c    ****         {
 507:risspzho.c    **** 				uc_nr_przycisku = 12;					// Wciœniêto przycisk "12" (B)
 2038               	lo8(13)
 2039               		brne .L105
 2040 0b16 8CE0      		lds r24,uc_klawisze
 2041 0b18 8093 0000 		mov r24,r24
 2042               		ldi r25,lo8(0)
 508:risspzho.c    ****         }
 509:risspzho.c    ****       if((PINB >> 4) == 11)
 2043               	 r24,lo8(1)
 2044               		andi r25,hi8(1)
 2045 0b1c E6E3      		tst r24
 2046 0b1e F0E0      		breq .L105
 2048 0b22 8295      	.LM216:
 2049 0b24 8F70      		lds r24,uc_klawisze
 2050 0b26 8B30      		andi r24,lo8(-2)
 2051 0b28 01F4      		sts uc_klawisze,r24
 510:risspzho.c    ****         {
 511:risspzho.c    **** 				uc_nr_przycisku = 13;					// Wciœniêto przycisk "13" (C)
 2052               	8,0,527,.LM217-.LFBB4
 2053               	.LM217:
 2054 0b2a 8DE0      		ldi r24,lo8(1)
 2055 0b2c 8093 0000 		ldi r25,hi8(1)
 2056               		std Y+2,r25
 512:risspzho.c    ****         }
 513:risspzho.c    ****       if((PINB >> 4) == 7)
 2057               	Y+1,r24
 2058               		rjmp .L104
 2059 0b30 E6E3      	.L105:
 2061 0b34 8081      	.LM218:
 2062 0b36 8295      		lds r24,uc_klawisze
 2063 0b38 8F70      		mov r24,r24
 2064 0b3a 8730      		ldi r25,lo8(0)
 2065 0b3c 01F4      		andi r24,lo8(4)
 514:risspzho.c    ****         {
 515:risspzho.c    **** 				uc_nr_przycisku = 14;					// Wciœniêto przycisk "14" (D)
 2066               	,hi8(4)
 2067               		sbiw r24,0
 2068 0b3e 8EE0      		brne .L106
 2069 0b40 8093 0000 		lds r24,uc_klawisze
 2070               		mov r24,r24
 516:risspzho.c    ****         }
 517:risspzho.c    ****     }
 518:risspzho.c    ****   		
 519:risspzho.c    ****   if((uc_nr_przycisku == 11) && (CHECKBIT(uc_klawisze, KLAWISZ_F)))		// Zatwierdzenie wpisanej wrto
 2071               	r25,lo8(0)
 2072               		andi r24,lo8(2)
 2073 0b44 8091 0000 		andi r25,hi8(2)
 2074 0b48 8B30      		sbiw r24,0
 2075 0b4a 01F4      		breq .L106
 2076 0b4c 8091 0000 		lds r24,uc_nr_przycisku
 2077 0b50 882F      		cpi r24,lo8(10)
 2078 0b52 90E0      		brsh .L106
 2080 0b56 9070      	.LM219:
 2081 0b58 8823      		lds r24,uc_nr_przycisku
 2082 0b5a 01F0      		mov r18,r24
 520:risspzho.c    ****   {
 521:risspzho.c    **** 		CLEARBIT(uc_klawisze, KLAWISZ_F);       									// Ustawienie flagi wybrania klawisza funkcyjneg
 2083               	(0)
 2084               		ldi r24,lo8(c_buffer_n)
 2085 0b5c 8091 0000 		ldi r25,hi8(c_buffer_n)
 2086 0b60 8E7F      		ldi r20,lo8(10)
 2087 0b62 8093 0000 		ldi r21,hi8(10)
 522:risspzho.c    **** 		return 2;
 2088               	 r22,r24
 2089               		movw r24,r18
 2090 0b66 82E0      		call utoa
 2092 0b6a 9A83      	.LM220:
 2093 0b6c 8983      		ldi r24,lo8(c_buffer_n)
 2094 0b6e 00C0      		ldi r25,hi8(c_buffer_n)
 2095               		call lcd_puts
 523:risspzho.c    ****   }
 524:risspzho.c    ****   if((uc_nr_przycisku == 13) && (CHECKBIT(uc_klawisze, KLAWISZ_F))) 		// Powtórzenie wpisu - Przyci
 2096               	68,0,533,.LM221-.LFBB4
 2097               	.LM221:
 2098 0b70 8091 0000 		lds r24,ui_liczba_w
 2099 0b74 8D30      		lds r25,(ui_liczba_w)+1
 2100 0b76 01F4      		movw r18,r24
 2101 0b78 8091 0000 		lsl r18
 2102 0b7c 882F      		rol r19
 2103 0b7e 90E0      		movw r24,r18
 2104 0b80 8170      		lsl r24
 2105 0b82 9070      		rol r25
 2106 0b84 8823      		lsl r24
 2107 0b86 01F0      		rol r25
 525:risspzho.c    ****   {
 526:risspzho.c    **** 		CLEARBIT(uc_klawisze, KLAWISZ_F);											// Ustawienie flagi wybrania klawisza funkcyjnego
 2108               	
 2109               		adc r19,r25
 2110 0b88 8091 0000 		lds r24,uc_nr_przycisku
 2111 0b8c 8E7F      		mov r24,r24
 2112 0b8e 8093 0000 		ldi r25,lo8(0)
 527:risspzho.c    **** 		return 1;
 2113               	 r24,r18
 2114               		adc r25,r19
 2115 0b92 81E0      		sts (ui_liczba_w)+1,r25
 2116 0b94 90E0      		sts ui_liczba_w,r24
 2118 0b98 8983      	.LM222:
 2119 0b9a 00C0      		lds r24,uc_klawisze
 2120               		andi r24,lo8(-3)
 528:risspzho.c    ****   }
 529:risspzho.c    ****   if(!(CHECKBIT(uc_klawisze, KLAWISZ)) && (CHECKBIT(uc_klawisze, KLAWISZ_N)) && (uc_nr_przycisku < 
 2121               	klawisze,r24
 2122               	.L106:
 2124 0ba0 882F      	.LM223:
 2125 0ba2 90E0      		std Y+2,__zero_reg__
 2126 0ba4 8470      		std Y+1,__zero_reg__
 2127 0ba6 9070      	.L104:
 2128 0ba8 0097      		ldd r24,Y+1
 2129 0baa 01F4      		ldd r25,Y+2
 2130 0bac 8091 0000 	/* epilogue start */
 2132 0bb2 90E0      	.LM224:
 2133 0bb4 8270      		pop __tmp_reg__
 2134 0bb6 9070      		pop __tmp_reg__
 2135 0bb8 0097      		pop r28
 2136 0bba 01F0      		pop r29
 2137 0bbc 8091 0000 		ret
 2139 0bc2 00F4      	.Lscope4:
 530:risspzho.c    ****   {
 531:risspzho.c    **** 		utoa(uc_nr_przycisku, c_buffer_n, 10);
 2140               	k_ADC:F(0,1)",36,0,0,Przetwornik_ADC
 2142 0bc4 8091 0000 	.global	Przetwornik_ADC
 2144 0bca 30E0      	Przetwornik_ADC:
 2146 0bce 90E0      	.LM225:
 2147 0bd0 4AE0      	.LFBB5:
 2148 0bd2 50E0      		push r29
 2149 0bd4 BC01      		push r28
 2150 0bd6 C901      		rcall .
 2151 0bd8 0E94 0000 		rcall .
 532:risspzho.c    **** 		lcd_puts(c_buffer_n);
 2152               	_L__
 2153               		in r29,__SP_H__
 2154 0bdc 80E0      	/* prologue: function */
 2155 0bde 90E0      	/* frame size = 4 */
 2156 0be0 0E94 0000 		std Y+2,r25
 533:risspzho.c    **** 		ui_liczba_w = ui_liczba_w * 10 + uc_nr_przycisku;						// Obliczanie wprowadzanej liczby
 2157               	Y+1,r24
 2159 0be4 8091 0000 	.LM226:
 2160 0be8 9091 0000 		ldi r26,lo8(39)
 2161 0bec 9C01      		ldi r27,hi8(39)
 2162 0bee 220F      		ldi r30,lo8(39)
 2163 0bf0 331F      		ldi r31,hi8(39)
 2164 0bf2 C901      		ld r24,Z
 2165 0bf4 880F      		andi r24,lo8(-8)
 2166 0bf6 991F      		st X,r24
 2168 0bfa 991F      	.LM227:
 2169 0bfc 280F      		ldd r24,Y+1
 2170 0bfe 391F      		ldd r25,Y+2
 2171 0c00 8091 0000 		std Y+4,r25
 2172 0c04 882F      		std Y+3,r24
 2173 0c06 90E0      		ldd r24,Y+3
 2174 0c08 820F      		ldd r25,Y+4
 2175 0c0a 931F      		cpi r24,3
 2176 0c0c 9093 0000 		cpc r25,__zero_reg__
 2177 0c10 8093 0000 		breq .L113
 534:risspzho.c    **** 		CLEARBIT(uc_klawisze, KLAWISZ_N);											// Ustawienie flagi zadzia³ania klawisza numerycznego
 2178               	,Y+4
 2179               		cpi r24,4
 2180 0c14 8091 0000 		cpc r25,__zero_reg__
 2181 0c18 8D7F      		brge .L118
 2182 0c1a 8093 0000 		ldd r24,Y+3
 2183               		ldd r25,Y+4
 535:risspzho.c    ****   }
 536:risspzho.c    **** 
 537:risspzho.c    **** 	return 0;
 2184               	24,1
 2185               		cpc r25,__zero_reg__
 2186 0c1e 1A82      		breq .L111
 2187 0c20 1982      		ldd r24,Y+3
 2188               		ldd r25,Y+4
 2189 0c22 8981      		cpi r24,2
 2190 0c24 9A81      		cpc r25,__zero_reg__
 2191               		brge .L112
 538:risspzho.c    **** }
 2192               	109
 2193               	.L118:
 2194 0c26 0F90      		ldd r24,Y+3
 2195 0c28 0F90      		ldd r25,Y+4
 2196 0c2a CF91      		cpi r24,5
 2197 0c2c DF91      		cpc r25,__zero_reg__
 2198 0c2e 0895      		breq .L115
 2199               		ldd r24,Y+3
 2200               		ldd r25,Y+4
 2201               		cpi r24,5
 2202               		cpc r25,__zero_reg__
 2203               		brlt .L114
 2204               		ldd r24,Y+3
 2205               		ldd r25,Y+4
 539:risspzho.c    **** 
 540:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 541:risspzho.c    **** 
 542:risspzho.c    **** int Przetwornik_ADC(int Kanal_ADC)
 543:risspzho.c    **** {
 2206               	c r25,__zero_reg__
 2207               		breq .L116
 2208               		ldd r24,Y+3
 2209 0c30 DF93      		ldd r25,Y+4
 2210 0c32 CF93      		cpi r24,7
 2211 0c34 00D0      		cpc r25,__zero_reg__
 2212 0c36 00D0      		breq .L117
 2213 0c38 CDB7      		rjmp .L109
 2214 0c3a DEB7      	.L111:
 2216               	.LM228:
 2217 0c3c 9A83      		ldi r26,lo8(39)
 2218 0c3e 8983      		ldi r27,hi8(39)
 544:risspzho.c    **** 
 545:risspzho.c    **** 	ADMUX &= ~_BV(MUX0) &~_BV(MUX1) &~_BV(MUX2);
 2219               	39)
 2220               		ldi r31,hi8(39)
 2221 0c40 A7E2      		ld r24,Z
 2222 0c42 B0E0      		ori r24,lo8(1)
 2223 0c44 E7E2      		st X,r24
 2224 0c46 F0E0      		rjmp .L109
 2225 0c48 8081      	.L112:
 2227 0c4c 8C93      	.LM229:
 546:risspzho.c    **** 		
 547:risspzho.c    **** 	switch(Kanal_ADC) 									// Wybór kana³u
 2228               	lo8(39)
 2229               		ldi r27,hi8(39)
 2230 0c4e 8981      		ldi r30,lo8(39)
 2231 0c50 9A81      		ldi r31,hi8(39)
 2232 0c52 9C83      		ld r24,Z
 2233 0c54 8B83      		ori r24,lo8(2)
 2234 0c56 8B81      		st X,r24
 2235 0c58 9C81      		rjmp .L109
 2236 0c5a 8330      	.L113:
 2238 0c5e 01F0      	.LM230:
 2239 0c60 8B81      		ldi r26,lo8(39)
 2240 0c62 9C81      		ldi r27,hi8(39)
 2241 0c64 8430      		ldi r30,lo8(39)
 2242 0c66 9105      		ldi r31,hi8(39)
 2243 0c68 04F4      		ld r24,Z
 2244 0c6a 8B81      		ori r24,lo8(3)
 2245 0c6c 9C81      		st X,r24
 2246 0c6e 8130      		rjmp .L109
 2247 0c70 9105      	.L114:
 2249 0c74 8B81      	.LM231:
 2250 0c76 9C81      		ldi r26,lo8(39)
 2251 0c78 8230      		ldi r27,hi8(39)
 2252 0c7a 9105      		ldi r30,lo8(39)
 2253 0c7c 04F4      		ldi r31,hi8(39)
 2254 0c7e 00C0      		ld r24,Z
 2255               		ori r24,lo8(4)
 2256 0c80 8B81      		st X,r24
 2257 0c82 9C81      		rjmp .L109
 2258 0c84 8530      	.L115:
 2260 0c88 01F0      	.LM232:
 2261 0c8a 8B81      		ldi r26,lo8(39)
 2262 0c8c 9C81      		ldi r27,hi8(39)
 2263 0c8e 8530      		ldi r30,lo8(39)
 2264 0c90 9105      		ldi r31,hi8(39)
 2265 0c92 04F0      		ld r24,Z
 2266 0c94 8B81      		ori r24,lo8(5)
 2267 0c96 9C81      		st X,r24
 2268 0c98 8630      		rjmp .L109
 2269 0c9a 9105      	.L116:
 2271 0c9e 8B81      	.LM233:
 2272 0ca0 9C81      		ldi r26,lo8(39)
 2273 0ca2 8730      		ldi r27,hi8(39)
 2274 0ca4 9105      		ldi r30,lo8(39)
 2275 0ca6 01F0      		ldi r31,hi8(39)
 2276 0ca8 00C0      		ld r24,Z
 2277               		ori r24,lo8(6)
 548:risspzho.c    **** 	{
 549:risspzho.c    **** 		
 550:risspzho.c    **** 		case 0:
 551:risspzho.c    **** 					break;
 552:risspzho.c    **** 					
 553:risspzho.c    **** 		case 1:  ADMUX |= _BV(MUX0);
 2278               	34-.LFBB5
 2279               	.LM234:
 2280 0caa A7E2      		ldi r26,lo8(39)
 2281 0cac B0E0      		ldi r27,hi8(39)
 2282 0cae E7E2      		ldi r30,lo8(39)
 2283 0cb0 F0E0      		ldi r31,hi8(39)
 2284 0cb2 8081      		ld r24,Z
 2285 0cb4 8160      		ori r24,lo8(7)
 2286 0cb6 8C93      		st X,r24
 2287 0cb8 00C0      	.L109:
 554:risspzho.c    **** 	            break;
 555:risspzho.c    **** 	
 556:risspzho.c    **** 		case 2:	ADMUX |= _BV(MUX1);
 2289               	i r26,lo8(38)
 2290               		ldi r27,hi8(38)
 2291 0cba A7E2      		ldi r30,lo8(38)
 2292 0cbc B0E0      		ldi r31,hi8(38)
 2293 0cbe E7E2      		ld r24,Z
 2294 0cc0 F0E0      		ori r24,lo8(-128)
 2295 0cc2 8081      		st X,r24
 2297 0cc6 8C93      	.LM236:
 2298 0cc8 00C0      		ldi r26,lo8(38)
 2299               		ldi r27,hi8(38)
 557:risspzho.c    **** 					break;
 558:risspzho.c    **** 				
 559:risspzho.c    **** 		case 3:	ADMUX |= _BV(MUX0) | _BV(MUX1);
 2300               	8(38)
 2301               		ldi r31,hi8(38)
 2302 0cca A7E2      		ld r24,Z
 2303 0ccc B0E0      		ori r24,lo8(64)
 2304 0cce E7E2      		st X,r24
 2305 0cd0 F0E0      	.L119:
 2307 0cd4 8360      	.LM237:
 2308 0cd6 8C93      		ldi r30,lo8(38)
 2309 0cd8 00C0      		ldi r31,hi8(38)
 2310               		ld r24,Z
 560:risspzho.c    **** 					break;
 561:risspzho.c    **** 					
 562:risspzho.c    **** 		case 4:  ADMUX |= _BV(MUX2);
 2311               	4
 2312               		ldi r25,lo8(0)
 2313 0cda A7E2      		andi r24,lo8(64)
 2314 0cdc B0E0      		andi r25,hi8(64)
 2315 0cde E7E2      		sbiw r24,0
 2316 0ce0 F0E0      		brne .L119
 2318 0ce4 8460      	.LM238:
 2319 0ce6 8C93      		ldi r30,lo8(36)
 2320 0ce8 00C0      		ldi r31,hi8(36)
 2321               		ld r24,Z
 563:risspzho.c    **** 					break;
 564:risspzho.c    **** 					
 565:risspzho.c    **** 		case 5:	ADMUX |= _BV(MUX0) | _BV(MUX2);
 2322               	1
 2323               	/* epilogue start */
 2325 0cec B0E0      	.LM239:
 2326 0cee E7E2      		pop __tmp_reg__
 2327 0cf0 F0E0      		pop __tmp_reg__
 2328 0cf2 8081      		pop __tmp_reg__
 2329 0cf4 8560      		pop __tmp_reg__
 2330 0cf6 8C93      		pop r28
 2331 0cf8 00C0      		pop r29
 2332               		ret
 566:risspzho.c    **** 					break;
 567:risspzho.c    **** 		
 568:risspzho.c    **** 		case 6:	ADMUX |= _BV(MUX1) | _BV(MUX2);
 2333               	twornik_ADC, .-Przetwornik_ADC
 2334               	.Lscope5:
 2336 0cfc B0E0      	.global	Wychylenie_Nastawnika
 2338 0d00 F0E0      	Wychylenie_Nastawnika:
 2340 0d04 8660      	.LM240:
 2341 0d06 8C93      	.LFBB6:
 2342 0d08 00C0      		push r29
 2343               		push r28
 569:risspzho.c    **** 					break;
 570:risspzho.c    **** 					
 571:risspzho.c    **** 		case 7:	ADMUX |= _BV(MUX0) | _BV(MUX1) | _BV(MUX2);
 2344               	n r28,__SP_L__
 2345               		in r29,__SP_H__
 2346 0d0a A7E2      	/* prologue: function */
 2347 0d0c B0E0      	/* frame size = 2 */
 2349 0d10 F0E0      	.LM241:
 2350 0d12 8081      		ldi r24,lo8(1)
 2351 0d14 8760      		ldi r25,hi8(1)
 2352 0d16 8C93      		call Przetwornik_ADC
 2353               		std Y+2,r25
 572:risspzho.c    **** 					break;
 573:risspzho.c    **** 	}
 574:risspzho.c    **** 	
 575:risspzho.c    **** 	ADCSRA |= _BV(ADEN);
 2354               	24
 2356 0d18 A6E2      	.LM242:
 2357 0d1a B0E0      		ldd r24,Y+1
 2358 0d1c E6E2      		ldd r25,Y+2
 2359 0d1e F0E0      		cpi r24,120
 2360 0d20 8081      		cpc r25,__zero_reg__
 2361 0d22 8068      		brge .L122
 576:risspzho.c    **** 	ADCSRA |= _BV(ADSC);         						// Rozpoczêcie przetwarzania
 2363               	ldi r24,lo8(120)
 2364               		ldi r25,hi8(120)
 2365 0d26 A6E2      		std Y+2,r25
 2366 0d28 B0E0      		std Y+1,r24
 2367 0d2a E6E2      	.L122:
 2369 0d2e 8081      	.LM244:
 2370 0d30 8064      		ldd r24,Y+1
 2371 0d32 8C93      		ldd r25,Y+2
 2372               		ldi r18,hi8(621)
 577:risspzho.c    **** 	while(bit_is_set(ADCSRA,ADSC))					// Oczekiwanie na zakoñczenie przetwarzania
 2373               	o8(621)
 2374               		cpc r25,r18
 2375 0d34 E6E2      		brlt .L123
 2377 0d38 8081      	.LM245:
 2378 0d3a 882F      		ldi r24,lo8(620)
 2379 0d3c 90E0      		ldi r25,hi8(620)
 2380 0d3e 8074      		std Y+2,r25
 2381 0d40 9070      		std Y+1,r24
 2382 0d42 0097      	.L123:
 578:risspzho.c    **** 	{
 579:risspzho.c    **** 	}
 580:risspzho.c    **** 
 581:risspzho.c    **** 	return (ADCW);		
 2384               	d r24,Y+1
 2385               		ldd r25,Y+2
 2386 0d46 E4E2      		subi r24,lo8(-(-120))
 2387 0d48 F0E0      		sbci r25,hi8(-(-120))
 2388 0d4a 8081      	/* epilogue start */
 2390               	.LM247:
 582:risspzho.c    **** }
 2391               	tmp_reg__
 2392               		pop __tmp_reg__
 2393 0d4e 0F90      		pop r28
 2394 0d50 0F90      		pop r29
 2395 0d52 0F90      		ret
 2400               	.Lscope6:
 2403               	.global	Prad_Zadany
 2405               	Prad_Zadany:
 583:risspzho.c    **** 
 584:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 585:risspzho.c    **** 
 586:risspzho.c    **** int Wychylenie_Nastawnika(void)
 587:risspzho.c    **** {
 2406               	9,.LM248-.LFBB7
 2407               	.LM248:
 2408               	.LFBB7:
 2409 0d5c DF93      		push r29
 2410 0d5e CF93      		push r28
 2411 0d60 00D0      		rcall .
 2412 0d62 CDB7      		in r28,__SP_L__
 2413 0d64 DEB7      		in r29,__SP_H__
 2414               	/* prologue: function */
 2415               	/* frame size = 2 */
 588:risspzho.c    **** 	int wychylenie;
 589:risspzho.c    **** 	
 590:risspzho.c    **** 	wychylenie = Przetwornik_ADC(1);
 2416               	25
 2417               		std Y+1,r24
 2419 0d68 90E0      	.LM249:
 2420 0d6a 0E94 0000 		call Wychylenie_Nastawnika
 2421 0d6e 9A83      		movw r18,r24
 2422 0d70 8983      		ldd r24,Y+1
 591:risspzho.c    **** //	wychylenie = (*wskf_P_ADC)(1);
 592:risspzho.c    **** 		
 593:risspzho.c    **** 	if( wychylenie < 120)
 2423               	5,Y+2
 2424               		movw r20,r24
 2425 0d72 8981      		mul r18,r20
 2426 0d74 9A81      		movw r24,r0
 2427 0d76 8837      		mul r18,r21
 2428 0d78 9105      		add r25,r0
 2429 0d7a 04F4      		mul r19,r20
 594:risspzho.c    **** 	{
 595:risspzho.c    **** 		wychylenie = 120;
 2430               	5,r0
 2431               		clr r1
 2432 0d7c 88E7      		clr r26
 2433 0d7e 90E0      		sbrc r25,7
 2434 0d80 9A83      		com r26
 2435 0d82 8983      		mov r27,r26
 2436               		movw r22,r24
 596:risspzho.c    **** 	}
 597:risspzho.c    **** 	
 598:risspzho.c    **** 	if( wychylenie > 620)
 2437               	24,r26
 2438               		call __floatsisf
 2439 0d84 8981      		movw r26,r24
 2440 0d86 9A81      		movw r24,r22
 2441 0d88 22E0      		ldi r18,lo8(0x3b03126f)
 2442 0d8a 8D36      		ldi r19,hi8(0x3b03126f)
 2443 0d8c 9207      		ldi r20,hlo8(0x3b03126f)
 2444 0d8e 04F0      		ldi r21,hhi8(0x3b03126f)
 599:risspzho.c    **** 	{
 600:risspzho.c    **** 		wychylenie = 620;
 2445               	2,r24
 2446               		movw r24,r26
 2447 0d90 8CE6      		call __mulsf3
 2448 0d92 92E0      		movw r26,r24
 2449 0d94 9A83      		movw r24,r22
 2451               	.LM250:
 601:risspzho.c    **** 	}
 602:risspzho.c    **** 	
 603:risspzho.c    **** 	return (wychylenie - 120);
 2452               	22,r24
 2453               		movw r24,r26
 2454 0d98 8981      	/* epilogue start */
 2455 0d9a 9A81      		pop __tmp_reg__
 2456 0d9c 8857      		pop __tmp_reg__
 2457 0d9e 9040      		pop r28
 2458               		pop r29
 604:risspzho.c    **** }
 2459               	size	Prad_Zadany, .-Prad_Zadany
 2460               	.Lscope7:
 2462 0da2 0F90      	.global	Prad_Pomierzony
 2464 0da6 DF91      	Prad_Pomierzony:
 2466               	.LM251:
 2467               	.LFBB8:
 2468               		push r14
 2469               		push r15
 2470               		push r16
 2471               		push r17
 2472               		push r29
 2473               		push r28
 2474               		in r28,__SP_L__
 2475               		in r29,__SP_H__
 605:risspzho.c    **** 
 606:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 607:risspzho.c    **** 
 608:risspzho.c    **** float Prad_Zadany(int Iogr)
 609:risspzho.c    **** {
 2476               	__tmp_reg__,__SREG__
 2477               		cli
 2478               		out __SP_H__,r29
 2479 0daa DF93      		out __SREG__,__tmp_reg__
 2480 0dac CF93      		out __SP_L__,r28
 2481 0dae 00D0      	/* prologue: function */
 2482 0db0 CDB7      	/* frame size = 14 */
 2484               	.LM252:
 2485               		ldi r24,lo8(0x40a00000)
 2486 0db4 9A83      		ldi r25,hi8(0x40a00000)
 2487 0db6 8983      		ldi r26,hlo8(0x40a00000)
 610:risspzho.c    **** 	return (Wychylenie_Nastawnika() * Iogr * 0.002);
 2488               	8(0x40a00000)
 2489               		std Y+9,r24
 2490 0db8 0E94 0000 		std Y+10,r25
 2491 0dbc 9C01      		std Y+11,r26
 2492 0dbe 8981      		std Y+12,r27
 2494 0dc2 AC01      	.LM253:
 2495 0dc4 249F      		ldi r24,lo8(0x43960000)
 2496 0dc6 C001      		ldi r25,hi8(0x43960000)
 2497 0dc8 259F      		ldi r26,hlo8(0x43960000)
 2498 0dca 900D      		ldi r27,hhi8(0x43960000)
 2499 0dcc 349F      		std Y+5,r24
 2500 0dce 900D      		std Y+6,r25
 2501 0dd0 1124      		std Y+7,r26
 2502 0dd2 AA27      		std Y+8,r27
 2504 0dd6 A095      	.LM254:
 2505 0dd8 BA2F      		ldi r24,lo8(0x3a03126f)
 2506 0dda BC01      		ldi r25,hi8(0x3a03126f)
 2507 0ddc CD01      		ldi r26,hlo8(0x3a03126f)
 2508 0dde 0E94 0000 		ldi r27,hhi8(0x3a03126f)
 2509 0de2 DC01      		std Y+1,r24
 2510 0de4 CB01      		std Y+2,r25
 2511 0de6 2FE6      		std Y+3,r26
 2512 0de8 32E1      		std Y+4,r27
 2514 0dec 5BE3      	.LM255:
 2515 0dee BC01      		ldi r24,lo8(0)
 2516 0df0 CD01      		ldi r25,hi8(0)
 2517 0df2 0E94 0000 		call Przetwornik_ADC
 2518 0df6 DC01      		std Y+14,r25
 2519 0df8 CB01      		std Y+13,r24
 611:risspzho.c    **** //return ((*wskf_int[4])() * Iogr * 0.002);
 612:risspzho.c    **** }
 2520               	LM256:
 2521               		ldd r24,Y+13
 2522 0dfa BC01      		ldd r25,Y+14
 2523 0dfc CD01      		clr r26
 2524               		sbrc r25,7
 2525 0dfe 0F90      		com r26
 2526 0e00 0F90      		mov r27,r26
 2527 0e02 CF91      		movw r22,r24
 2528 0e04 DF91      		movw r24,r26
 2529 0e06 0895      		call __floatsisf
 2530               		movw r26,r24
 2531               		movw r24,r22
 2532               		ldd r18,Y+9
 2533               		ldd r19,Y+10
 2534               		ldd r20,Y+11
 2535               		ldd r21,Y+12
 613:risspzho.c    **** 
 614:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 615:risspzho.c    **** 
 616:risspzho.c    **** float Prad_Pomierzony(void)
 617:risspzho.c    **** {
 2536               	ovw r24,r26
 2537               		call __mulsf3
 2538               		movw r26,r24
 2539 0e08 EF92      		movw r24,r22
 2540 0e0a FF92      		ldi r18,lo8(0x44800000)
 2541 0e0c 0F93      		ldi r19,hi8(0x44800000)
 2542 0e0e 1F93      		ldi r20,hlo8(0x44800000)
 2543 0e10 DF93      		ldi r21,hhi8(0x44800000)
 2544 0e12 CF93      		movw r22,r24
 2545 0e14 CDB7      		movw r24,r26
 2546 0e16 DEB7      		call __divsf3
 2547 0e18 2E97      		movw r26,r24
 2548 0e1a 0FB6      		movw r24,r22
 2549 0e1c F894      		movw r14,r24
 2550 0e1e DEBF      		movw r16,r26
 2551 0e20 0FBE      		ldd r18,Y+5
 2552 0e22 CDBF      		ldd r19,Y+6
 2553               		ldd r20,Y+7
 2554               		ldd r21,Y+8
 618:risspzho.c    **** 	int V_pom;
 619:risspzho.c    **** 	float Vref, R, P_LEM;
 620:risspzho.c    **** 	
 621:risspzho.c    **** 	Vref = 5;
 2555               	23,Y+2
 2556               		ldd r24,Y+3
 2557 0e24 80E0      		ldd r25,Y+4
 2558 0e26 90E0      		call __mulsf3
 2559 0e28 A0EA      		movw r26,r24
 2560 0e2a B0E4      		movw r24,r22
 2561 0e2c 8987      		movw r18,r24
 2562 0e2e 9A87      		movw r20,r26
 2563 0e30 AB87      		movw r24,r16
 2564 0e32 BC87      		movw r22,r14
 622:risspzho.c    ****   	R = 300;                 			// Rezystor na wyjsciu LEMa  R = 220 Ohm
 2565               	vsf3
 2566               		movw r26,r24
 2567 0e34 80E0      		movw r24,r22
 2569 0e38 A6E9      	.LM257:
 2570 0e3a B3E4      		movw r22,r24
 2571 0e3c 8D83      		movw r24,r26
 2572 0e3e 9E83      	/* epilogue start */
 2573 0e40 AF83      		adiw r28,14
 2574 0e42 B887      		in __tmp_reg__,__SREG__
 623:risspzho.c    **** 	P_LEM = 0.0005;          			// Przek³adnia LEM 1:1000;
 2575               	__SP_H__,r29
 2576               		out __SREG__,__tmp_reg__
 2577 0e44 8FE6      		out __SP_L__,r28
 2578 0e46 92E1      		pop r28
 2579 0e48 A3E0      		pop r29
 2580 0e4a BAE3      		pop r17
 2581 0e4c 8983      		pop r16
 2582 0e4e 9A83      		pop r15
 2583 0e50 AB83      		pop r14
 2584 0e52 BC83      		ret
 624:risspzho.c    **** 	
 625:risspzho.c    **** 	V_pom = Przetwornik_ADC(0);
 2585               	d_Pomierzony, .-Prad_Pomierzony
 626:risspzho.c    **** //	V_pom = (*wskf_P_ADC)(0);
 627:risspzho.c    **** 	
 628:risspzho.c    **** 	return ((V_pom * Vref / 1024) / (P_LEM * R));
 2592               	8:
 2594 0e60 8D85      	.global	Wybieg
 2596 0e64 AA27      	Wybieg:
 2598 0e68 A095      	.LM258:
 2599 0e6a BA2F      	.LFBB9:
 2600 0e6c BC01      		push r29
 2601 0e6e CD01      		push r28
 2602 0e70 0E94 0000 		rcall .
 2603 0e74 DC01      		in r28,__SP_L__
 2604 0e76 CB01      		in r29,__SP_H__
 2605 0e78 2985      	/* prologue: function */
 2606 0e7a 3A85      	/* frame size = 2 */
 2608 0e7e 5C85      	.LM259:
 2609 0e80 BC01      		sts (ui_PWM)+1,__zero_reg__
 2610 0e82 CD01      		sts ui_PWM,__zero_reg__
 2612 0e88 DC01      	.LM260:
 2613 0e8a CB01      		ldi r24,lo8(0x0)
 2614 0e8c 20E0      		ldi r25,hi8(0x0)
 2615 0e8e 30E0      		ldi r26,hlo8(0x0)
 2616 0e90 40E8      		ldi r27,hhi8(0x0)
 2617 0e92 54E4      		sts suma,r24
 2618 0e94 BC01      		sts (suma)+1,r25
 2619 0e96 CD01      		sts (suma)+2,r26
 2620 0e98 0E94 0000 		sts (suma)+3,r27
 2622 0e9e CB01      	.LM261:
 2623 0ea0 7C01      		sts (licz)+1,__zero_reg__
 2624 0ea2 8D01      		sts licz,__zero_reg__
 2626 0ea6 3E81      	.LM262:
 2627 0ea8 4F81      		ldi r30,lo8(74)
 2628 0eaa 5885      		ldi r31,hi8(74)
 2629 0eac 6981      		lds r24,ui_PWM
 2630 0eae 7A81      		lds r25,(ui_PWM)+1
 2631 0eb0 8B81      		std Z+1,r25
 2632 0eb2 9C81      		st Z,r24
 2634 0eb8 DC01      	.LM263:
 2635 0eba CB01      		call Prad_Pomierzony
 2636 0ebc 9C01      		movw r26,r24
 2637 0ebe AD01      		movw r24,r22
 2638 0ec0 C801      		sts f_I_pom,r24
 2639 0ec2 B701      		sts (f_I_pom)+1,r25
 2640 0ec4 0E94 0000 		sts (f_I_pom)+2,r26
 2641 0ec8 DC01      		sts (f_I_pom)+3,r27
 629:risspzho.c    **** }
 2643               	r26,(f_I_pom)+2
 2644               		lds r27,(f_I_pom)+3
 2645 0ecc BC01      		ldi r18,lo8(0x41b80000)
 2646 0ece CD01      		ldi r19,hi8(0x41b80000)
 2647               		ldi r20,hlo8(0x41b80000)
 2648 0ed0 2E96      		ldi r21,hhi8(0x41b80000)
 2649 0ed2 0FB6      		movw r22,r24
 2650 0ed4 F894      		movw r24,r26
 2651 0ed6 DEBF      		call __gesf2
 2652 0ed8 0FBE      		tst r24
 2653 0eda CDBF      		brlt .L133
 2654 0edc CF91      	.L138:
 2656 0ee0 1F91      	.LM265:
 2657 0ee2 0F91      		ldi r24,lo8(1)
 2658 0ee4 FF90      		ldi r25,hi8(1)
 2659 0ee6 EF90      		std Y+2,r25
 2660 0ee8 0895      		std Y+1,r24
 2661               		rjmp .L132
 2662               	.L135:
 2664               	.LM266:
 2665               		lds r24,reset
 2666               		lds r25,(reset)+1
 2667               		sbiw r24,0
 2668               		breq .L133
 2670               	.LM267:
 2671               		ldi r24,lo8(1)
 2672               		ldi r25,hi8(1)
 630:risspzho.c    **** 
 631:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 632:risspzho.c    **** 
 633:risspzho.c    **** int Wybieg(void)
 634:risspzho.c    **** {
 2673               	p .L132
 2674               	.L133:
 2676 0eea DF93      	.LM268:
 2677 0eec CF93      		ldi r30,lo8(48)
 2678 0eee 00D0      		ldi r31,hi8(48)
 2679 0ef0 CDB7      		ld r24,Z
 2680 0ef2 DEB7      		mov r24,r24
 2681               		ldi r25,lo8(0)
 2682               		andi r24,lo8(2)
 635:risspzho.c    **** 	ui_PWM = 0;
 2683               	hi8(2)
 2684               		sbiw r24,0
 2685 0ef4 1092 0000 		breq .L134
 2686 0ef8 1092 0000 		ldi r30,lo8(48)
 636:risspzho.c    **** 	suma = 0;
 2687               	 r31,hi8(48)
 2688               		ld r24,Z
 2689 0efc 80E0      		mov r24,r24
 2690 0efe 90E0      		ldi r25,lo8(0)
 2691 0f00 A0E0      		andi r24,lo8(1)
 2692 0f02 B0E0      		andi r25,hi8(1)
 2693 0f04 8093 0000 		tst r24
 2694 0f08 9093 0000 		brne .L135
 2695 0f0c A093 0000 	.L134:
 2696 0f10 B093 0000 		ldi r30,lo8(48)
 637:risspzho.c    **** 	licz = 0;
 2697               	i8(48)
 2698               		ld r24,Z
 2699 0f14 1092 0000 		mov r24,r24
 2700 0f18 1092 0000 		ldi r25,lo8(0)
 638:risspzho.c    **** 	
 639:risspzho.c    **** 	OCR1A = ui_PWM;
 2701               	i r24,lo8(2)
 2702               		andi r25,hi8(2)
 2703 0f1c EAE4      		sbiw r24,0
 2704 0f1e F0E0      		brne .L136
 2705 0f20 8091 0000 		ldi r30,lo8(48)
 2706 0f24 9091 0000 		ldi r31,hi8(48)
 2707 0f28 9183      		ld r24,Z
 2708 0f2a 8083      		mov r24,r24
 640:risspzho.c    **** 	
 641:risspzho.c    **** 	f_I_pom = Prad_Pomierzony();
 2709               	,lo8(0)
 2710               		andi r24,lo8(1)
 2711 0f2c 0E94 0000 		andi r25,hi8(1)
 2712 0f30 DC01      		sbiw r24,0
 2713 0f32 CB01      		breq .L135
 2714 0f34 8093 0000 	.L136:
 2716 0f3c A093 0000 	.LM269:
 2717 0f40 B093 0000 		std Y+2,__zero_reg__
 642:risspzho.c    **** //	f_I_pom = (*wskf_P_Pom)();
 643:risspzho.c    **** 	
 644:risspzho.c    **** 	if(f_I_pom >= 23)
 2718               	__zero_reg__
 2719               	.L132:
 2720 0f44 8091 0000 		ldd r24,Y+1
 2721 0f48 9091 0000 		ldd r25,Y+2
 2722 0f4c A091 0000 	/* epilogue start */
 2724 0f54 20E0      	.LM270:
 2725 0f56 30E0      		pop __tmp_reg__
 2726 0f58 48EB      		pop __tmp_reg__
 2727 0f5a 51E4      		pop r28
 2728 0f5c BC01      		pop r29
 2729 0f5e CD01      		ret
 2731 0f64 8823      	.Lscope9:
 2732 0f66 04F0      		.data
 2733               	.LC13:
 645:risspzho.c    **** 	{
 646:risspzho.c    **** 		return 1;
 2734               	ZRUCH"
 2735               	.LC14:
 2736 0f68 81E0      		.string	"f_I_pom = "
 2737 0f6a 90E0      	.LC15:
 2738 0f6c 9A83      		.string	"Izad = "
 2739 0f6e 8983      	.LC16:
 2740 0f70 00C0      		.string	"Ipom = "
 2741               		.text
 647:risspzho.c    **** 	}
 648:risspzho.c    **** 	
 649:risspzho.c    **** 	while((bit_is_set(PIND,1) && bit_is_set(PIND,0)) || (!bit_is_set(PIND,1) && !bit_is_set(PIND,0)))
 650:risspzho.c    **** 	{
 651:risspzho.c    **** 		if(reset)
 2742               	"Rozruch:F(0,1)",36,0,0,Rozruch
 2743               	.global	Rozruch
 2745 0f76 9091 0000 	Rozruch:
 2747 0f7c 01F0      	.LM271:
 652:risspzho.c    **** 		{
 653:risspzho.c    **** 			return 1;
 2748               	0:
 2749               		push r4
 2750 0f7e 81E0      		push r5
 2751 0f80 90E0      		push r6
 2752 0f82 9A83      		push r7
 2753 0f84 8983      		push r8
 2754 0f86 00C0      		push r9
 2755               		push r10
 2756               		push r11
 2757               		push r12
 2758 0f88 E0E3      		push r13
 2759 0f8a F0E0      		push r14
 2760 0f8c 8081      		push r15
 2761 0f8e 882F      		push r16
 2762 0f90 90E0      		push r17
 2763 0f92 8270      		push r29
 2764 0f94 9070      		push r28
 2765 0f96 0097      		in r28,__SP_L__
 2766 0f98 01F0      		in r29,__SP_H__
 2767 0f9a E0E3      		sbiw r28,30
 2768 0f9c F0E0      		in __tmp_reg__,__SREG__
 2769 0f9e 8081      		cli
 2770 0fa0 882F      		out __SP_H__,r29
 2771 0fa2 90E0      		out __SREG__,__tmp_reg__
 2772 0fa4 8170      		out __SP_L__,r28
 2773 0fa6 9070      	/* prologue: function */
 2774 0fa8 8823      	/* frame size = 30 */
 2776               	.LM272:
 2777 0fac E0E3      		ldi r24,lo8(0x0)
 2778 0fae F0E0      		ldi r25,hi8(0x0)
 2779 0fb0 8081      		ldi r26,hlo8(0x0)
 2780 0fb2 882F      		ldi r27,hhi8(0x0)
 2781 0fb4 90E0      		sts f_S,r24
 2782 0fb6 8270      		sts (f_S)+1,r25
 2783 0fb8 9070      		sts (f_S)+2,r26
 2784 0fba 0097      		sts (f_S)+3,r27
 2786 0fbe E0E3      	.LM273:
 2787 0fc0 F0E0      		ldi r24,lo8(0x0)
 2788 0fc2 8081      		ldi r25,hi8(0x0)
 2789 0fc4 882F      		ldi r26,hlo8(0x0)
 2790 0fc6 90E0      		ldi r27,hhi8(0x0)
 2791 0fc8 8170      		sts f_I_1,r24
 2792 0fca 9070      		sts (f_I_1)+1,r25
 2793 0fcc 0097      		sts (f_I_1)+2,r26
 2794 0fce 01F0      		sts (f_I_1)+3,r27
 654:risspzho.c    **** 		}
 655:risspzho.c    **** 	}
 656:risspzho.c    **** 	
 657:risspzho.c    **** 	return 0;	
 2796               	 r26,hlo8(0x0)
 2797               		ldi r27,hhi8(0x0)
 2798 0fd0 1A82      		sts f_Ie_1,r24
 2799 0fd2 1982      		sts (f_Ie_1)+1,r25
 2800               		sts (f_Ie_1)+2,r26
 2801 0fd4 8981      		sts (f_Ie_1)+3,r27
 2803               	.LM275:
 658:risspzho.c    **** }
 2804               	d_clrscr
 2806 0fd8 0F90      	.LM276:
 2807 0fda 0F90      		ldi r24,lo8(.LC13)
 2808 0fdc CF91      		ldi r25,hi8(.LC13)
 2809 0fde DF91      		call lcd_puts
 2811               	.LM277:
 2812               		ldi r26,lo8(50)
 2813               		ldi r27,hi8(50)
 2814               		ldi r30,lo8(50)
 2815 00a0 2020 2020 		ldi r31,hi8(50)
 2815      524F 5A52 
 2815      5543 4800 
 2816               		ld r24,Z
 2817 00ac 665F 495F 		andi r24,lo8(-65)
 2817      706F 6D20 
 2817      3D20 00
 2818               		st X,r24
 2819 00b7 497A 6164 		ldi r24,lo8(0x43480000)
 2819      203D 2000 
 2820               		ldi r25,hi8(0x43480000)
 2821 00bf 4970 6F6D 		ldi r26,hlo8(0x43480000)
 2821      203D 2000 
 2822               		ldi r27,hhi8(0x43480000)
 2823               		std Y+25,r24
 2824               		std Y+26,r25
 2825               		std Y+27,r26
 2826               		std Y+28,r27
 659:risspzho.c    **** 
 660:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 661:risspzho.c    **** 
 662:risspzho.c    **** int Rozruch(void)
 663:risspzho.c    **** {
 2827               		"c:/winavr/lib/gcc/../../avr/include/util/delay.h",132,0,0,.Ltext26
 2828               	.Ltext26:
 2830 0fe2 4F92      	.LM278:
 2831 0fe4 5F92      		ldi r18,lo8(0x44fa0000)
 2832 0fe6 6F92      		ldi r19,hi8(0x44fa0000)
 2833 0fe8 7F92      		ldi r20,hlo8(0x44fa0000)
 2834 0fea 8F92      		ldi r21,hhi8(0x44fa0000)
 2835 0fec 9F92      		ldd r22,Y+25
 2836 0fee AF92      		ldd r23,Y+26
 2837 0ff0 BF92      		ldd r24,Y+27
 2838 0ff2 CF92      		ldd r25,Y+28
 2839 0ff4 DF92      		call __mulsf3
 2840 0ff6 EF92      		movw r26,r24
 2841 0ff8 FF92      		movw r24,r22
 2842 0ffa 0F93      		std Y+21,r24
 2843 0ffc 1F93      		std Y+22,r25
 2844 0ffe DF93      		std Y+23,r26
 2845 1000 CF93      		std Y+24,r27
 2847 1004 DEB7      	.LM279:
 2848 1006 6E97      		ldi r18,lo8(0x3f800000)
 2849 1008 0FB6      		ldi r19,hi8(0x3f800000)
 2850 100a F894      		ldi r20,hlo8(0x3f800000)
 2851 100c DEBF      		ldi r21,hhi8(0x3f800000)
 2852 100e 0FBE      		ldd r22,Y+21
 2853 1010 CDBF      		ldd r23,Y+22
 2854               		ldd r24,Y+23
 2855               		ldd r25,Y+24
 664:risspzho.c    ****    f_S = 0;
 2856               	.L173
 2857               	.L167:
 2859 1014 90E0      	.LM280:
 2860 1016 A0E0      		ldi r24,lo8(1)
 2861 1018 B0E0      		ldi r25,hi8(1)
 2862 101a 8093 0000 		std Y+20,r25
 2863 101e 9093 0000 		std Y+19,r24
 2864 1022 A093 0000 		rjmp .L142
 2865 1026 B093 0000 	.L173:
 665:risspzho.c    **** 	f_I_1 = 0;
 2866               	,0,148,.LM281-.LFBB10
 2867               	.LM281:
 2868 102a 80E0      		ldi r18,lo8(0x477fff00)
 2869 102c 90E0      		ldi r19,hi8(0x477fff00)
 2870 102e A0E0      		ldi r20,hlo8(0x477fff00)
 2871 1030 B0E0      		ldi r21,hhi8(0x477fff00)
 2872 1032 8093 0000 		ldd r22,Y+21
 2873 1036 9093 0000 		ldd r23,Y+22
 2874 103a A093 0000 		ldd r24,Y+23
 2875 103e B093 0000 		ldd r25,Y+24
 666:risspzho.c    **** 	f_Ie_1 = 0;
 2876               	sf2
 2877               		cp __zero_reg__,r24
 2878 1042 80E0      		brge .L174
 2879 1044 90E0      	.L168:
 2881 1048 B0E0      	.LM282:
 2882 104a 8093 0000 		ldi r18,lo8(0x41200000)
 2883 104e 9093 0000 		ldi r19,hi8(0x41200000)
 2884 1052 A093 0000 		ldi r20,hlo8(0x41200000)
 2885 1056 B093 0000 		ldi r21,hhi8(0x41200000)
 667:risspzho.c    **** 	
 668:risspzho.c    **** 	lcd_clrscr();
 2886               	+25
 2887               		ldd r23,Y+26
 2888 105a 0E94 0000 		ldd r24,Y+27
 669:risspzho.c    **** 	lcd_puts("    ROZRUCH");
 2889               	d r25,Y+28
 2890               		call __mulsf3
 2891 105e 80E0      		movw r26,r24
 2892 1060 90E0      		movw r24,r22
 2893 1062 0E94 0000 		movw r22,r24
 670:risspzho.c    **** 	
 671:risspzho.c    **** 	PORTD &= ~_BV(PORTD6);								// Wylaczenie T1
 2894               	 r24,r26
 2895               		call __fixunssfsi
 2896 1066 A2E3      		movw r26,r24
 2897 1068 B0E0      		movw r24,r22
 2898 106a E2E3      		std Y+20,r25
 2899 106c F0E0      		std Y+19,r24
 2900 106e 8081      		rjmp .L145
 2901 1070 8F7B      	.L146:
 2902 1072 8C93      		ldi r24,lo8(200)
 2903 1074 80E0      		ldi r25,hi8(200)
 2904 1076 90E0      		std Y+18,r25
 2905 1078 A8E4      		std Y+17,r24
 2906 107a B3E4      	.LBB76:
 2907 107c 898F      	.LBB77:
 2909 1080 AB8F      	.Ltext27:
 2911               	.LM283:
 2912               		ldd r24,Y+17
 2913               		ldd r25,Y+18
 2914               	/* #APP */
 2915               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 2916               		1: sbiw r24,1
 2917 1084 20E0      		brne 1b
 2918 1086 30E0      	 ;  0 "" 2
 2919 1088 4AEF      	/* #NOAPP */
 2920 108a 54E4      		std Y+18,r25
 2921 108c 698D      		std Y+17,r24
 2922 108e 7A8D      	.LBE77:
 2923 1090 8B8D      	.LBE76:
 2925 1094 0E94 0000 	.Ltext28:
 2927 109a CB01      	.LM284:
 2928 109c 8D8B      		ldd r24,Y+19
 2929 109e 9E8B      		ldd r25,Y+20
 2930 10a0 AF8B      		sbiw r24,1
 2931 10a2 B88F      		std Y+20,r25
 2932               		std Y+19,r24
 2933               	.L145:
 2935 10a6 30E0      	.LM285:
 2936 10a8 40E8      		ldd r24,Y+19
 2937 10aa 5FE3      		ldd r25,Y+20
 2938 10ac 6D89      		sbiw r24,0
 2939 10ae 7E89      		brne .L146
 2940 10b0 8F89      		rjmp .L148
 2941 10b2 988D      	.L174:
 2943 10b8 8823      	.LM286:
 2944 10ba 04F4      		ldd r22,Y+21
 2945               		ldd r23,Y+22
 2946               		ldd r24,Y+23
 2947               		ldd r25,Y+24
 2948 10bc 81E0      		call __fixunssfsi
 2949 10be 90E0      		movw r26,r24
 2950 10c0 9C8B      		movw r24,r22
 2951 10c2 8B8B      		std Y+20,r25
 2952 10c4 00C0      		std Y+19,r24
 2953               	.L142:
 2954               		ldd r24,Y+19
 2955               		ldd r25,Y+20
 2956 10c6 20E0      		std Y+16,r25
 2957 10c8 3FEF      		std Y+15,r24
 2958 10ca 4FE7      	.LBB78:
 2959 10cc 57E4      	.LBB79:
 2961 10d0 7E89      	.Ltext29:
 2963 10d4 988D      	.LM287:
 2964 10d6 0E94 0000 		ldd r24,Y+15
 2965 10da 1816      		ldd r25,Y+16
 2966 10dc 04F4      	/* #APP */
 2967               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 2968               		1: sbiw r24,1
 2969               		brne 1b
 2970 10de 20E0      	 ;  0 "" 2
 2971 10e0 30E0      	/* #NOAPP */
 2972 10e2 40E2      		std Y+16,r25
 2973 10e4 51E4      		std Y+15,r24
 2974 10e6 698D      	.L148:
 2975 10e8 7A8D      	.LBE79:
 2976 10ea 8B8D      	.LBE78:
 2977 10ec 9C8D      	.LBE75:
 2978 10ee 0E94 0000 	.LBE74:
 2980 10f4 CB01      	.Ltext30:
 2982 10f8 CD01      	.LM288:
 2983 10fa 0E94 0000 		call Prad_Pomierzony
 2984 10fe DC01      		movw r26,r24
 2985 1100 CB01      		movw r24,r22
 2986 1102 9C8B      		ldi r18,lo8(0x0)
 2987 1104 8B8B      		ldi r19,hi8(0x0)
 2988 1106 00C0      		ldi r20,hlo8(0x0)
 2989               		ldi r21,hhi8(0x0)
 2990 1108 88EC      		movw r22,r24
 2991 110a 90E0      		movw r24,r26
 2992 110c 9A8B      		call __nesf2
 2993 110e 898B      		tst r24
 2994               		brne .L148
 2996               	.LM289:
 2997               		ldi r26,lo8(50)
 2998               		ldi r27,hi8(50)
 2999               		ldi r30,lo8(50)
 3000 1110 8989      		ldi r31,hi8(50)
 3001 1112 9A89      		ld r24,Z
 3002               		ori r24,lo8(16)
 3003               		st X,r24
 3004 1114 0197      		rjmp .L149
 3005 1116 01F4      	.L165:
 3007               	.LM290:
 3008 1118 9A8B      		call Prad_Pomierzony
 3009 111a 898B      		movw r26,r24
 3010               		movw r24,r22
 3011               		sts f_I_pom,r24
 3012               		sts (f_I_pom)+1,r25
 3013               		sts (f_I_pom)+2,r26
 3014               		sts (f_I_pom)+3,r27
 3016 111c 8B89      	.LM291:
 3017 111e 9C89      		lds r24,f_I_pom
 3018 1120 0197      		lds r25,(f_I_pom)+1
 3019 1122 9C8B      		lds r26,(f_I_pom)+2
 3020 1124 8B8B      		lds r27,(f_I_pom)+3
 3021               		ldi r18,lo8(0x41b80000)
 3022               		ldi r19,hi8(0x41b80000)
 3023               		ldi r20,hlo8(0x41b80000)
 3024 1126 8B89      		ldi r21,hhi8(0x41b80000)
 3025 1128 9C89      		movw r22,r24
 3026 112a 0097      		movw r24,r26
 3027 112c 01F4      		call __gesf2
 3028 112e 00C0      		tst r24
 3029               		brge .+2
 3030               		rjmp .L175
 3031               	.L169:
 3033 1132 7E89      	.LM292:
 3034 1134 8F89      		ldi r30,lo8(74)
 3035 1136 988D      		ldi r31,hi8(74)
 3036 1138 0E94 0000 		std Z+1,__zero_reg__
 3037 113c DC01      		st Z,__zero_reg__
 3039 1140 9C8B      	.LM293:
 3040 1142 8B8B      		call lcd_clrscr
 3042 1144 8B89      	.LM294:
 3043 1146 9C89      		ldi r24,lo8(.LC14)
 3044 1148 988B      		ldi r25,hi8(.LC14)
 3045 114a 8F87      		call lcd_puts
 3047               	.LM295:
 3048               		lds r24,f_I_pom
 3049               		lds r25,(f_I_pom)+1
 3050               		lds r26,(f_I_pom)+2
 3051               		lds r27,(f_I_pom)+3
 3052 114c 8F85      		movw r22,r24
 3053 114e 9889      		movw r24,r26
 3054               		call wyswietl_float
 3055               		ldi r24,lo8(0x459c4000)
 3056 1150 0197      		ldi r25,hi8(0x459c4000)
 3057 1152 01F4      		ldi r26,hlo8(0x459c4000)
 3058               		ldi r27,hhi8(0x459c4000)
 3059               		std Y+11,r24
 3060 1154 988B      		std Y+12,r25
 3061 1156 8F87      		std Y+13,r26
 3062               		std Y+14,r27
 3063               	.LBB80:
 3064               	.LBB81:
 3066               	.Ltext31:
 3068               	.LM296:
 672:risspzho.c    **** 	_delay_ms(200);										// Opoznienie aby nie przelaczac jednoczesnie tranzystorow
 673:risspzho.c    **** 			
 674:risspzho.c    **** 	do
 675:risspzho.c    **** 	{
 676:risspzho.c    **** 	}
 677:risspzho.c    **** //	while((*wskf_P_Pom)());
 678:risspzho.c    ****   	while( Prad_Pomierzony() );
 3069               	ovw r26,r24
 3070               		movw r24,r22
 3071 1158 0E94 0000 		std Y+7,r24
 3072 115c DC01      		std Y+8,r25
 3073 115e CB01      		std Y+9,r26
 3074 1160 20E0      		std Y+10,r27
 3076 1164 40E0      	.LM297:
 3077 1166 50E0      		ldi r18,lo8(0x3f800000)
 3078 1168 BC01      		ldi r19,hi8(0x3f800000)
 3079 116a CD01      		ldi r20,hlo8(0x3f800000)
 3080 116c 0E94 0000 		ldi r21,hhi8(0x3f800000)
 3081 1170 8823      		ldd r22,Y+7
 3082 1172 01F4      		ldd r23,Y+8
 679:risspzho.c    **** 
 680:risspzho.c    **** 
 681:risspzho.c    **** 	PORTD |= _BV(PORTD4);				// Wlaczenie T2
 3083               	ldd r25,Y+10
 3084               		call __ltsf2
 3085 1174 A2E3      		tst r24
 3086 1176 B0E0      		brge .L176
 3087 1178 E2E3      	.L170:
 3089 117c 8081      	.LM298:
 3090 117e 8061      		ldi r24,lo8(1)
 3091 1180 8C93      		ldi r25,hi8(1)
 3092 1182 00C0      		std Y+6,r25
 3093               		std Y+5,r24
 682:risspzho.c    **** 	
 683:risspzho.c    **** 	while(bit_is_set(PIND,0) && !bit_is_set(PIND,1))
 684:risspzho.c    **** 	{
 685:risspzho.c    **** 		f_I_pom = Prad_Pomierzony();
 3094               	
 3095               	.L176:
 3097 1188 DC01      	.LM299:
 3098 118a CB01      		ldi r18,lo8(0x477fff00)
 3099 118c 8093 0000 		ldi r19,hi8(0x477fff00)
 3100 1190 9093 0000 		ldi r20,hlo8(0x477fff00)
 3101 1194 A093 0000 		ldi r21,hhi8(0x477fff00)
 3102 1198 B093 0000 		ldd r22,Y+7
 686:risspzho.c    **** //		f_I_pom = (*wskf_P_Pom)();
 687:risspzho.c    **** 		
 688:risspzho.c    **** 		if(f_I_pom >= 23)
 3103               	,Y+8
 3104               		ldd r24,Y+9
 3105 119c 8091 0000 		ldd r25,Y+10
 3106 11a0 9091 0000 		call __gtsf2
 3107 11a4 A091 0000 		cp __zero_reg__,r24
 3108 11a8 B091 0000 		brge .L177
 3109 11ac 20E0      	.L171:
 3111 11b0 48EB      	.LM300:
 3112 11b2 51E4      		ldi r18,lo8(0x41200000)
 3113 11b4 BC01      		ldi r19,hi8(0x41200000)
 3114 11b6 CD01      		ldi r20,hlo8(0x41200000)
 3115 11b8 0E94 0000 		ldi r21,hhi8(0x41200000)
 3116 11bc 8823      		ldd r22,Y+11
 3117 11be 04F4      		ldd r23,Y+12
 3118 11c0 00C0      		ldd r24,Y+13
 3119               		ldd r25,Y+14
 689:risspzho.c    **** 		{
 690:risspzho.c    **** 			OCR1A = 0;   					//wylacz PWM
 3120               	ovw r26,r24
 3121               		movw r24,r22
 3122 11c2 EAE4      		movw r22,r24
 3123 11c4 F0E0      		movw r24,r26
 3124 11c6 1182      		call __fixunssfsi
 3125 11c8 1082      		movw r26,r24
 691:risspzho.c    **** 			lcd_clrscr();  				//wyczysc LCD
 3126               	r24,r22
 3127               		std Y+6,r25
 3128 11ca 0E94 0000 		std Y+5,r24
 692:risspzho.c    **** 			lcd_puts("f_I_pom = ");
 3129               	mp .L157
 3130               	.L158:
 3131 11ce 80E0      		ldi r24,lo8(200)
 3132 11d0 90E0      		ldi r25,hi8(200)
 3133 11d2 0E94 0000 		std Y+4,r25
 693:risspzho.c    ****          wyswietl_float(f_I_pom); 	//wysweitle prad pomierzony
 3134               	Y+3,r24
 3135               	.LBB82:
 3136 11d6 8091 0000 	.LBB83:
 3138 11de A091 0000 	.Ltext32:
 3140 11e6 BC01      	.LM301:
 3141 11e8 CD01      		ldd r24,Y+3
 3142 11ea 0E94 0000 		ldd r25,Y+4
 3143 11ee 80E0      	/* #APP */
 3144 11f0 90E4      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 3145 11f2 ACE9      		1: sbiw r24,1
 3146 11f4 B5E4      		brne 1b
 3147 11f6 8B87      	 ;  0 "" 2
 3148 11f8 9C87      	/* #NOAPP */
 3149 11fa AD87      		std Y+4,r25
 3150 11fc BE87      		std Y+3,r24
 3151               	.LBE83:
 3152               	.LBE82:
 3154               	.Ltext33:
 3156               	.LM302:
 3157 11fe 20E0      		ldd r24,Y+5
 3158 1200 30E0      		ldd r25,Y+6
 3159 1202 4AEF      		sbiw r24,1
 3160 1204 54E4      		std Y+6,r25
 3161 1206 6B85      		std Y+5,r24
 3162 1208 7C85      	.L157:
 3164 120c 9E85      	.LM303:
 3165 120e 0E94 0000 		ldd r24,Y+5
 3166 1212 DC01      		ldd r25,Y+6
 3167 1214 CB01      		sbiw r24,0
 3168 1216 8F83      		brne .L158
 3169 1218 9887      		rjmp .L159
 3170 121a A987      	.L177:
 3172               	.LM304:
 3173               		ldd r22,Y+7
 3174 121e 20E0      		ldd r23,Y+8
 3175 1220 30E0      		ldd r24,Y+9
 3176 1222 40E8      		ldd r25,Y+10
 3177 1224 5FE3      		call __fixunssfsi
 3178 1226 6F81      		movw r26,r24
 3179 1228 7885      		movw r24,r22
 3180 122a 8985      		std Y+6,r25
 3181 122c 9A85      		std Y+5,r24
 3182 122e 0E94 0000 	.L154:
 3183 1232 8823      		ldd r24,Y+5
 3184 1234 04F4      		ldd r25,Y+6
 3185               		std Y+2,r25
 3186               		std Y+1,r24
 3187               	.LBB84:
 3188 1236 81E0      	.LBB85:
 3190 123a 9E83      	.Ltext34:
 3192 123e 00C0      	.LM305:
 3193               		ldd r24,Y+1
 3194               		ldd r25,Y+2
 3195               	/* #APP */
 3196 1240 20E0      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 3197 1242 3FEF      		1: sbiw r24,1
 3198 1244 4FE7      		brne 1b
 3199 1246 57E4      	 ;  0 "" 2
 3200 1248 6F81      	/* #NOAPP */
 3201 124a 7885      		std Y+2,r25
 3202 124c 8985      		std Y+1,r24
 3203 124e 9A85      	.L159:
 3204 1250 0E94 0000 	.LBE85:
 3205 1254 1816      	.LBE84:
 3206 1256 04F4      	.LBE81:
 3207               	.LBE80:
 3209               	.Ltext35:
 3211 125a 30E0      	.LM306:
 3212 125c 40E2      		ldi r24,lo8(1)
 3213 125e 51E4      		ldi r25,hi8(1)
 3214 1260 6B85      		std Y+30,r25
 3215 1262 7C85      		std Y+29,r24
 3216 1264 8D85      		rjmp .L160
 3217 1266 9E85      	.L175:
 3219 126c DC01      	.LM307:
 3220 126e CB01      		lds r14,suma
 3221 1270 BC01      		lds r15,(suma)+1
 3222 1272 CD01      		lds r16,(suma)+2
 3223 1274 0E94 0000 		lds r17,(suma)+3
 3224 1278 DC01      		lds r24,f_I_pom
 3225 127a CB01      		lds r25,(f_I_pom)+1
 3226 127c 9E83      		lds r26,(f_I_pom)+2
 3227 127e 8D83      		lds r27,(f_I_pom)+3
 3228 1280 00C0      		movw r18,r24
 3229               		movw r20,r26
 3230 1282 88EC      		movw r24,r16
 3231 1284 90E0      		movw r22,r14
 3232 1286 9C83      		call __addsf3
 3233 1288 8B83      		movw r26,r24
 3234               		movw r24,r22
 3235               		sts suma,r24
 3236               		sts (suma)+1,r25
 3237               		sts (suma)+2,r26
 3238               		sts (suma)+3,r27
 3240 128a 8B81      	.LM308:
 3241 128c 9C81      		lds r24,licz
 3242               		lds r25,(licz)+1
 3243               		ldi r18,hi8(500)
 3244 128e 0197      		cpi r24,lo8(500)
 3245 1290 01F4      		cpc r25,r18
 3246               		breq .+2
 3247               		rjmp .L161
 3249 1294 8B83      	.LM309:
 3250               		call lcd_clrscr
 3252               	.LM310:
 3253               		ldi r24,lo8(.LC15)
 3254               		ldi r25,hi8(.LC15)
 3255               		call lcd_puts
 3257 1298 9E81      	.LM311:
 3258 129a 0197      		lds r24,ui_Ir_ogr
 3259 129c 9E83      		lds r25,(ui_Ir_ogr)+1
 3260 129e 8D83      		call Prad_Zadany
 3261               		movw r26,r24
 3262               		movw r24,r22
 3263               		movw r22,r24
 3264 12a0 8D81      		movw r24,r26
 3265 12a2 9E81      		call wyswietl_float
 3267 12a6 01F4      	.LM312:
 3268 12a8 00C0      		ldi r24,lo8(.LC11)
 3269               		ldi r25,hi8(.LC11)
 3270               		call lcd_puts
 3272 12aa 6F81      	.LM313:
 3273 12ac 7885      		lds r24,suma
 3274 12ae 8985      		lds r25,(suma)+1
 3275 12b0 9A85      		lds r26,(suma)+2
 3276 12b2 0E94 0000 		lds r27,(suma)+3
 3277 12b6 DC01      		ldi r18,lo8(0x43fa0000)
 3278 12b8 CB01      		ldi r19,hi8(0x43fa0000)
 3279 12ba 9E83      		ldi r20,hlo8(0x43fa0000)
 3280 12bc 8D83      		ldi r21,hhi8(0x43fa0000)
 3281               		movw r22,r24
 3282 12be 8D81      		movw r24,r26
 3283 12c0 9E81      		call __divsf3
 3284 12c2 9A83      		movw r26,r24
 3285 12c4 8983      		movw r24,r22
 3286               		sts suma,r24
 3287               		sts (suma)+1,r25
 3288               		sts (suma)+2,r26
 3289               		sts (suma)+3,r27
 3291               	.LM314:
 3292 12c6 8981      		ldi r24,lo8(.LC16)
 3293 12c8 9A81      		ldi r25,hi8(.LC16)
 3294               		call lcd_puts
 3296 12ca 0197      	.LM315:
 3297 12cc 01F4      		lds r24,suma
 3298               		lds r25,(suma)+1
 3299               		lds r26,(suma)+2
 3300 12ce 9A83      		lds r27,(suma)+3
 3301 12d0 8983      		movw r22,r24
 3302               		movw r24,r26
 3303               		call wyswietl_float
 3305               	.LM316:
 3306               		ldi r24,lo8(.LC11)
 3307               		ldi r25,hi8(.LC11)
 3308               		call lcd_puts
 694:risspzho.c    ****          _delay_ms(5000);				//opoznienie wyswietlania komunikatu
 695:risspzho.c    **** 
 696:risspzho.c    **** 			return 1;
 3309               	hlo8(0x0)
 3310               		ldi r27,hhi8(0x0)
 3311 12d2 81E0      		sts suma,r24
 3312 12d4 90E0      		sts (suma)+1,r25
 3313 12d6 9E8F      		sts (suma)+2,r26
 3314 12d8 8D8F      		sts (suma)+3,r27
 3315 12da 00C0      	.L161:
 697:risspzho.c    **** 		}
 698:risspzho.c    **** 		
 699:risspzho.c    **** 		suma += f_I_pom;
 3317               		lds r18,f_ki_r
 3318               		lds r19,(f_ki_r)+1
 3319 12dc E090 0000 		lds r20,(f_ki_r)+2
 3320 12e0 F090 0000 		lds r21,(f_ki_r)+3
 3321 12e4 0091 0000 		lds r8,f_kp_r
 3322 12e8 1091 0000 		lds r9,(f_kp_r)+1
 3323 12ec 8091 0000 		lds r10,(f_kp_r)+2
 3324 12f0 9091 0000 		lds r11,(f_kp_r)+3
 3325 12f4 A091 0000 		lds r4,f_I_pom
 3326 12f8 B091 0000 		lds r5,(f_I_pom)+1
 3327 12fc 9C01      		lds r6,(f_I_pom)+2
 3328 12fe AD01      		lds r7,(f_I_pom)+3
 3329 1300 C801      		lds r24,ui_Ir_ogr
 3330 1302 B701      		lds r25,(ui_Ir_ogr)+1
 3331 1304 0E94 0000 		movw r12,r18
 3332 1308 DC01      		movw r14,r20
 3333 130a CB01      		movw r18,r10
 3334 130c 8093 0000 		movw r16,r8
 3335 1310 9093 0000 		movw r22,r6
 3336 1314 A093 0000 		movw r20,r4
 3337 1318 B093 0000 		call Regulator_PI
 700:risspzho.c    **** 		
 701:risspzho.c    **** 		if(licz == 500)
 3338               	24,r22
 3339               		sts f_I_pwm,r24
 3340 131c 8091 0000 		sts (f_I_pwm)+1,r25
 3341 1320 9091 0000 		sts (f_I_pwm)+2,r26
 3342 1324 21E0      		sts (f_I_pwm)+3,r27
 3344 1328 9207      	.LM320:
 3345 132a 01F0      		lds r24,f_I_pwm
 3346 132c 00C0      		lds r25,(f_I_pwm)+1
 702:risspzho.c    **** 		{
 703:risspzho.c    **** 
 704:risspzho.c    **** 			lcd_clrscr();
 3347               	(f_I_pwm)+2
 3348               		lds r27,(f_I_pwm)+3
 3349 132e 0E94 0000 		ldi r18,lo8(0x0)
 705:risspzho.c    ****          lcd_puts("Izad = ");
 3350               	i r19,hi8(0x0)
 3351               		ldi r20,hlo8(0x0)
 3352 1332 80E0      		ldi r21,hhi8(0x0)
 3353 1334 90E0      		movw r22,r24
 3354 1336 0E94 0000 		movw r24,r26
 706:risspzho.c    **** 
 707:risspzho.c    **** 			wyswietl_float(Prad_Zadany(ui_Ir_ogr));
 3355               	 __ltsf2
 3356               		tst r24
 3357 133a 8091 0000 		brge .L162
 3358 133e 9091 0000 	.L172:
 3360 1346 DC01      	.LM321:
 3361 1348 CB01      		ldi r24,lo8(0x0)
 3362 134a BC01      		ldi r25,hi8(0x0)
 3363 134c CD01      		ldi r26,hlo8(0x0)
 3364 134e 0E94 0000 		ldi r27,hhi8(0x0)
 708:risspzho.c    **** //			wyswietl_float(4.5);
 709:risspzho.c    **** //		(*wskf_w_float)((*wskf_P_Zad)(ui_Ir_ogr));
 710:risspzho.c    **** //			(*wskf_w_float)(Prad_Zadany(ui_Ir_ogr));
 711:risspzho.c    **** 			
 712:risspzho.c    **** 			lcd_puts(" A\n");
 3365               	wm,r24
 3366               		sts (f_I_pwm)+1,r25
 3367 1352 80E0      		sts (f_I_pwm)+2,r26
 3368 1354 90E0      		sts (f_I_pwm)+3,r27
 3369 1356 0E94 0000 	.L162:
 713:risspzho.c    **** 			
 714:risspzho.c    **** 			suma = suma/500;
 3370               	bn	68,0,736,.LM322-.LFBB10
 3371               	.LM322:
 3372 135a 8091 0000 		lds r24,f_I_pwm
 3373 135e 9091 0000 		lds r25,(f_I_pwm)+1
 3374 1362 A091 0000 		lds r26,(f_I_pwm)+2
 3375 1366 B091 0000 		lds r27,(f_I_pwm)+3
 3376 136a 20E0      		ldi r18,lo8(0x42c80000)
 3377 136c 30E0      		ldi r19,hi8(0x42c80000)
 3378 136e 4AEF      		ldi r20,hlo8(0x42c80000)
 3379 1370 53E4      		ldi r21,hhi8(0x42c80000)
 3380 1372 BC01      		movw r22,r24
 3381 1374 CD01      		movw r24,r26
 3382 1376 0E94 0000 		call __mulsf3
 3383 137a DC01      		movw r26,r24
 3384 137c CB01      		movw r24,r22
 3385 137e 8093 0000 		sts f_I_pwm,r24
 3386 1382 9093 0000 		sts (f_I_pwm)+1,r25
 3387 1386 A093 0000 		sts (f_I_pwm)+2,r26
 3388 138a B093 0000 		sts (f_I_pwm)+3,r27
 715:risspzho.c    **** 
 716:risspzho.c    **** 			lcd_puts("Ipom = ");
 3389               	M323-.LFBB10
 3390               	.LM323:
 3391 138e 80E0      		lds r24,f_I_pwm
 3392 1390 90E0      		lds r25,(f_I_pwm)+1
 3393 1392 0E94 0000 		lds r26,(f_I_pwm)+2
 717:risspzho.c    **** 			
 718:risspzho.c    **** 			wyswietl_float(suma);
 3394               	r27,(f_I_pwm)+3
 3395               		ldi r18,lo8(0x3f000000)
 3396 1396 8091 0000 		ldi r19,hi8(0x3f000000)
 3397 139a 9091 0000 		ldi r20,hlo8(0x3f000000)
 3398 139e A091 0000 		ldi r21,hhi8(0x3f000000)
 3399 13a2 B091 0000 		movw r22,r24
 3400 13a6 BC01      		movw r24,r26
 3401 13a8 CD01      		call __addsf3
 3402 13aa 0E94 0000 		movw r26,r24
 719:risspzho.c    **** //			(*wskf_w_float)(suma);
 720:risspzho.c    **** 
 721:risspzho.c    **** 			lcd_puts(" A\n");
 3403               	,r22
 3404               		sts f_I_pwm,r24
 3405 13ae 80E0      		sts (f_I_pwm)+1,r25
 3406 13b0 90E0      		sts (f_I_pwm)+2,r26
 3407 13b2 0E94 0000 		sts (f_I_pwm)+3,r27
 722:risspzho.c    **** 			
 723:risspzho.c    **** 			licz = 0;
 3408               	bn	68,0,739,.LM324-.LFBB10
 3409               	.LM324:
 3410 13b6 1092 0000 		lds r24,f_I_pwm
 3411 13ba 1092 0000 		lds r25,(f_I_pwm)+1
 724:risspzho.c    **** 			suma = 0;
 3412               	 r26,(f_I_pwm)+2
 3413               		lds r27,(f_I_pwm)+3
 3414 13be 80E0      		movw r22,r24
 3415 13c0 90E0      		movw r24,r26
 3416 13c2 A0E0      		call __fixunssfsi
 3417 13c4 B0E0      		movw r26,r24
 3418 13c6 8093 0000 		movw r24,r22
 3419 13ca 9093 0000 		sts (ui_PWM)+1,r25
 3420 13ce A093 0000 		sts ui_PWM,r24
 3422               	.LM325:
 725:risspzho.c    **** 			
 726:risspzho.c    **** 		}
 727:risspzho.c    **** 		
 728:risspzho.c    **** 		f_I_pwm = Regulator_PI(ui_Ir_ogr, f_I_pom, f_kp_r, f_ki_r);
 3423               	8(74)
 3424               		ldi r31,hi8(74)
 3425 13d6 2091 0000 		lds r24,ui_PWM
 3426 13da 3091 0000 		lds r25,(ui_PWM)+1
 3427 13de 4091 0000 		std Z+1,r25
 3428 13e2 5091 0000 		st Z,r24
 3430 13ea 9090 0000 	.LM326:
 3431 13ee A090 0000 		lds r24,licz
 3432 13f2 B090 0000 		lds r25,(licz)+1
 3433 13f6 4090 0000 		adiw r24,1
 3434 13fa 5090 0000 		sts (licz)+1,r25
 3435 13fe 6090 0000 		sts licz,r24
 3436 1402 7090 0000 	.L149:
 3438 140a 9091 0000 	.LM327:
 3439 140e 6901      		ldi r30,lo8(48)
 3440 1410 7A01      		ldi r31,hi8(48)
 3441 1412 9501      		ld r24,Z
 3442 1414 8401      		mov r24,r24
 3443 1416 B301      		ldi r25,lo8(0)
 3444 1418 A201      		andi r24,lo8(1)
 3445 141a 0E94 0000 		andi r25,hi8(1)
 3446 141e DC01      		mov r25,r24
 3447 1420 CB01      		ldi r24,lo8(1)
 3448 1422 8093 0000 		eor r24,r25
 3449 1426 9093 0000 		tst r24
 3450 142a A093 0000 		brne .L164
 3451 142e B093 0000 		ldi r30,lo8(48)
 729:risspzho.c    **** //		f_I_pwm = (*wskf_R_PI)(ui_Ir_ogr, f_I_pom, f_kp_r, f_ki_r);
 730:risspzho.c    **** 		
 731:risspzho.c    **** 		if(f_I_pwm < 0)
 3452               	ov r24,r24
 3453               		ldi r25,lo8(0)
 3454 1432 8091 0000 		andi r24,lo8(2)
 3455 1436 9091 0000 		andi r25,hi8(2)
 3456 143a A091 0000 		sbiw r24,0
 3457 143e B091 0000 		brne .+2
 3458 1442 20E0      		rjmp .L165
 3459 1444 30E0      	.L164:
 3461 1448 50E0      	.LM328:
 3462 144a BC01      		std Y+30,__zero_reg__
 3463 144c CD01      		std Y+29,__zero_reg__
 3464 144e 0E94 0000 	.L160:
 3465 1452 8823      		ldd r24,Y+29
 3466 1454 04F4      		ldd r25,Y+30
 3467               	/* epilogue start */
 732:risspzho.c    **** 		{
 733:risspzho.c    **** 			f_I_pwm = 0;
 3468               	,.LM329-.LFBB10
 3469               	.LM329:
 3470 1456 80E0      		adiw r28,30
 3471 1458 90E0      		in __tmp_reg__,__SREG__
 3472 145a A0E0      		cli
 3473 145c B0E0      		out __SP_H__,r29
 3474 145e 8093 0000 		out __SREG__,__tmp_reg__
 3475 1462 9093 0000 		out __SP_L__,r28
 3476 1466 A093 0000 		pop r28
 3477 146a B093 0000 		pop r29
 3478               		pop r17
 734:risspzho.c    **** 		}
 735:risspzho.c    **** 		
 736:risspzho.c    **** 		f_I_pwm *= 100;
 3479               	op r15
 3480               		pop r14
 3481 146e 8091 0000 		pop r13
 3482 1472 9091 0000 		pop r12
 3483 1476 A091 0000 		pop r11
 3484 147a B091 0000 		pop r10
 3485 147e 20E0      		pop r9
 3486 1480 30E0      		pop r8
 3487 1482 48EC      		pop r7
 3488 1484 52E4      		pop r6
 3489 1486 BC01      		pop r5
 3490 1488 CD01      		pop r4
 3491 148a 0E94 0000 		ret
 3493 1490 CB01      	.Lscope10:
 3494 1492 8093 0000 		.data
 3495 1496 9093 0000 	.LC17:
 3496 149a A093 0000 		.string	"    HAMOWANIE"
 3497 149e B093 0000 		.text
 737:risspzho.c    **** 		f_I_pwm += 0.5;
 3498               	F(0,1)",36,0,0,Hamowanie
 3499               	.global	Hamowanie
 3501 14a6 9091 0000 	Hamowanie:
 3503 14ae B091 0000 	.LM330:
 3504 14b2 20E0      	.LFBB11:
 3505 14b4 30E0      		push r4
 3506 14b6 40E0      		push r5
 3507 14b8 5FE3      		push r6
 3508 14ba BC01      		push r7
 3509 14bc CD01      		push r8
 3510 14be 0E94 0000 		push r9
 3511 14c2 DC01      		push r10
 3512 14c4 CB01      		push r11
 3513 14c6 8093 0000 		push r12
 3514 14ca 9093 0000 		push r13
 3515 14ce A093 0000 		push r14
 3516 14d2 B093 0000 		push r15
 738:risspzho.c    **** 		
 739:risspzho.c    **** 		ui_PWM = (unsigned int)f_I_pwm;
 3517               	
 3518               		push r29
 3519 14d6 8091 0000 		push r28
 3520 14da 9091 0000 		in r28,__SP_L__
 3521 14de A091 0000 		in r29,__SP_H__
 3522 14e2 B091 0000 		sbiw r28,16
 3523 14e6 BC01      		in __tmp_reg__,__SREG__
 3524 14e8 CD01      		cli
 3525 14ea 0E94 0000 		out __SP_H__,r29
 3526 14ee DC01      		out __SREG__,__tmp_reg__
 3527 14f0 CB01      		out __SP_L__,r28
 3528 14f2 9093 0000 	/* prologue: function */
 3529 14f6 8093 0000 	/* frame size = 16 */
 740:risspzho.c    **** 		
 741:risspzho.c    **** 		OCR1A = ui_PWM;
 3530               	,755,.LM331-.LFBB11
 3531               	.LM331:
 3532 14fa EAE4      		ldi r24,lo8(0x0)
 3533 14fc F0E0      		ldi r25,hi8(0x0)
 3534 14fe 8091 0000 		ldi r26,hlo8(0x0)
 3535 1502 9091 0000 		ldi r27,hhi8(0x0)
 3536 1506 9183      		sts f_S,r24
 3537 1508 8083      		sts (f_S)+1,r25
 742:risspzho.c    **** 	
 743:risspzho.c    **** 		licz++;
 3538               	S)+2,r26
 3539               		sts (f_S)+3,r27
 3541 150e 9091 0000 	.LM332:
 3542 1512 0196      		ldi r24,lo8(0x0)
 3543 1514 9093 0000 		ldi r25,hi8(0x0)
 3544 1518 8093 0000 		ldi r26,hlo8(0x0)
 3545               		ldi r27,hhi8(0x0)
 3546               		sts f_I_1,r24
 3547               		sts (f_I_1)+1,r25
 3548 151c E0E3      		sts (f_I_1)+2,r26
 3549 151e F0E0      		sts (f_I_1)+3,r27
 3551 1522 882F      	.LM333:
 3552 1524 90E0      		ldi r24,lo8(0x0)
 3553 1526 8170      		ldi r25,hi8(0x0)
 3554 1528 9070      		ldi r26,hlo8(0x0)
 3555 152a 982F      		ldi r27,hhi8(0x0)
 3556 152c 81E0      		sts f_Ie_1,r24
 3557 152e 8927      		sts (f_Ie_1)+1,r25
 3558 1530 8823      		sts (f_Ie_1)+2,r26
 3559 1532 01F4      		sts (f_Ie_1)+3,r27
 3561 1536 F0E0      	.LM334:
 3562 1538 8081      		call lcd_clrscr
 3564 153c 90E0      	.LM335:
 3565 153e 8270      		ldi r24,lo8(.LC17)
 3566 1540 9070      		ldi r25,hi8(.LC17)
 3567 1542 0097      		call lcd_puts
 3569 1546 00C0      	.LM336:
 3570               		ldi r26,lo8(50)
 744:risspzho.c    **** 			
 745:risspzho.c    **** 	}
 746:risspzho.c    **** 	
 747:risspzho.c    **** 	return 0;
 3571               	
 3572               		ldi r31,hi8(50)
 3573 1548 1E8E      		ld r24,Z
 3574 154a 1D8E      		andi r24,lo8(-17)
 3575               		st X,r24
 3576 154c 8D8D      		ldi r24,lo8(0x43480000)
 3577 154e 9E8D      		ldi r25,hi8(0x43480000)
 3578               		ldi r26,hlo8(0x43480000)
 748:risspzho.c    **** 	
 749:risspzho.c    **** }
 3579               	7,hhi8(0x43480000)
 3580               		std Y+11,r24
 3581 1550 6E96      		std Y+12,r25
 3582 1552 0FB6      		std Y+13,r26
 3583 1554 F894      		std Y+14,r27
 3584 1556 DEBF      	.LBB92:
 3585 1558 0FBE      	.LBB93:
 3587 155c CF91      	.Ltext36:
 3589 1560 1F91      	.LM337:
 3590 1562 0F91      		ldi r18,lo8(0x44fa0000)
 3591 1564 FF90      		ldi r19,hi8(0x44fa0000)
 3592 1566 EF90      		ldi r20,hlo8(0x44fa0000)
 3593 1568 DF90      		ldi r21,hhi8(0x44fa0000)
 3594 156a CF90      		ldd r22,Y+11
 3595 156c BF90      		ldd r23,Y+12
 3596 156e AF90      		ldd r24,Y+13
 3597 1570 9F90      		ldd r25,Y+14
 3598 1572 8F90      		call __mulsf3
 3599 1574 7F90      		movw r26,r24
 3600 1576 6F90      		movw r24,r22
 3601 1578 5F90      		std Y+7,r24
 3602 157a 4F90      		std Y+8,r25
 3603 157c 0895      		std Y+9,r26
 3604               		std Y+10,r27
 3606               	.LM338:
 3607               		ldi r18,lo8(0x3f800000)
 3608 00c7 2020 2020 		ldi r19,hi8(0x3f800000)
 3608      4841 4D4F 
 3608      5741 4E49 
 3608      4500 
 3609               		ldi r20,hlo8(0x3f800000)
 3610               		ldi r21,hhi8(0x3f800000)
 3611               		ldd r22,Y+7
 3612               		ldd r23,Y+8
 3613               		ldd r24,Y+9
 750:risspzho.c    **** 
 751:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 752:risspzho.c    **** 
 753:risspzho.c    **** int Hamowanie(void)
 754:risspzho.c    **** {
 3614               	4
 3615               		brge .L202
 3616               	.L198:
 3618 1580 5F92      	.LM339:
 3619 1582 6F92      		ldi r24,lo8(1)
 3620 1584 7F92      		ldi r25,hi8(1)
 3621 1586 8F92      		std Y+6,r25
 3622 1588 9F92      		std Y+5,r24
 3623 158a AF92      		rjmp .L181
 3624 158c BF92      	.L202:
 3626 1590 DF92      	.LM340:
 3627 1592 EF92      		ldi r18,lo8(0x477fff00)
 3628 1594 FF92      		ldi r19,hi8(0x477fff00)
 3629 1596 0F93      		ldi r20,hlo8(0x477fff00)
 3630 1598 1F93      		ldi r21,hhi8(0x477fff00)
 3631 159a DF93      		ldd r22,Y+7
 3632 159c CF93      		ldd r23,Y+8
 3633 159e CDB7      		ldd r24,Y+9
 3634 15a0 DEB7      		ldd r25,Y+10
 3635 15a2 6097      		call __gtsf2
 3636 15a4 0FB6      		cp __zero_reg__,r24
 3637 15a6 F894      		brge .L203
 3638 15a8 DEBF      	.L199:
 3640 15ac CDBF      	.LM341:
 3641               		ldi r18,lo8(0x41200000)
 3642               		ldi r19,hi8(0x41200000)
 755:risspzho.c    **** 	f_S = 0;
 3643               	i r21,hhi8(0x41200000)
 3644               		ldd r22,Y+11
 3645 15ae 80E0      		ldd r23,Y+12
 3646 15b0 90E0      		ldd r24,Y+13
 3647 15b2 A0E0      		ldd r25,Y+14
 3648 15b4 B0E0      		call __mulsf3
 3649 15b6 8093 0000 		movw r26,r24
 3650 15ba 9093 0000 		movw r24,r22
 3651 15be A093 0000 		movw r22,r24
 3652 15c2 B093 0000 		movw r24,r26
 756:risspzho.c    **** 	f_I_1 = 0;
 3653               	xunssfsi
 3654               		movw r26,r24
 3655 15c6 80E0      		movw r24,r22
 3656 15c8 90E0      		std Y+6,r25
 3657 15ca A0E0      		std Y+5,r24
 3658 15cc B0E0      		rjmp .L184
 3659 15ce 8093 0000 	.L185:
 3660 15d2 9093 0000 		ldi r24,lo8(200)
 3661 15d6 A093 0000 		ldi r25,hi8(200)
 3662 15da B093 0000 		std Y+4,r25
 757:risspzho.c    **** 	f_Ie_1 = 0;
 3663               	24
 3664               	.LBB94:
 3665 15de 80E0      	.LBB95:
 3667 15e2 A0E0      	.Ltext37:
 3669 15e6 8093 0000 	.LM342:
 3670 15ea 9093 0000 		ldd r24,Y+3
 3671 15ee A093 0000 		ldd r25,Y+4
 3672 15f2 B093 0000 	/* #APP */
 758:risspzho.c    **** 	
 759:risspzho.c    **** 	lcd_clrscr();
 3673               	:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 3674               		1: sbiw r24,1
 3675 15f6 0E94 0000 		brne 1b
 760:risspzho.c    **** 	lcd_puts("    HAMOWANIE");
 3676               	 0 "" 2
 3677               	/* #NOAPP */
 3678 15fa 80E0      		std Y+4,r25
 3679 15fc 90E0      		std Y+3,r24
 3680 15fe 0E94 0000 	.LBE95:
 761:risspzho.c    **** 	
 762:risspzho.c    **** 	PORTD &= ~_BV(PORTD4);				// Wylaczenie T2
 3681               	4:
 3683 1602 A2E3      	.Ltext38:
 3685 1606 E2E3      	.LM343:
 3686 1608 F0E0      		ldd r24,Y+5
 3687 160a 8081      		ldd r25,Y+6
 3688 160c 8F7E      		sbiw r24,1
 3689 160e 8C93      		std Y+6,r25
 3690 1610 80E0      		std Y+5,r24
 3691 1612 90E0      	.L184:
 3693 1616 B3E4      	.LM344:
 3694 1618 8B87      		ldd r24,Y+5
 3695 161a 9C87      		ldd r25,Y+6
 3696 161c AD87      		sbiw r24,0
 3697 161e BE87      		brne .L185
 3698               		rjmp .L187
 3699               	.L203:
 3701               	.LM345:
 3702               		ldd r22,Y+7
 3703               		ldd r23,Y+8
 3704 1620 20E0      		ldd r24,Y+9
 3705 1622 30E0      		ldd r25,Y+10
 3706 1624 4AEF      		call __fixunssfsi
 3707 1626 54E4      		movw r26,r24
 3708 1628 6B85      		movw r24,r22
 3709 162a 7C85      		std Y+6,r25
 3710 162c 8D85      		std Y+5,r24
 3711 162e 9E85      	.L181:
 3712 1630 0E94 0000 		ldd r24,Y+5
 3713 1634 DC01      		ldd r25,Y+6
 3714 1636 CB01      		std Y+2,r25
 3715 1638 8F83      		std Y+1,r24
 3716 163a 9887      	.LBB96:
 3717 163c A987      	.LBB97:
 3719               	.Ltext39:
 3721 1640 20E0      	.LM346:
 3722 1642 30E0      		ldd r24,Y+1
 3723 1644 40E8      		ldd r25,Y+2
 3724 1646 5FE3      	/* #APP */
 3725 1648 6F81      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 3726 164a 7885      		1: sbiw r24,1
 3727 164c 8985      		brne 1b
 3728 164e 9A85      	 ;  0 "" 2
 3729 1650 0E94 0000 	/* #NOAPP */
 3730 1654 8823      		std Y+2,r25
 3731 1656 04F4      		std Y+1,r24
 3732               	.L187:
 3733               	.LBE97:
 3734               	.LBE96:
 3735 1658 81E0      	.LBE93:
 3736 165a 90E0      	.LBE92:
 3738 165e 8D83      	.Ltext40:
 3740               	.LM347:
 3741               		call Prad_Pomierzony
 3742               		movw r26,r24
 3743 1662 20E0      		movw r24,r22
 3744 1664 3FEF      		ldi r18,lo8(0x0)
 3745 1666 4FE7      		ldi r19,hi8(0x0)
 3746 1668 57E4      		ldi r20,hlo8(0x0)
 3747 166a 6F81      		ldi r21,hhi8(0x0)
 3748 166c 7885      		movw r22,r24
 3749 166e 8985      		movw r24,r26
 3750 1670 9A85      		call __nesf2
 3751 1672 0E94 0000 		tst r24
 3752 1676 1816      		brne .L187
 3754               	.LM348:
 3755               		ldi r26,lo8(50)
 3756               		ldi r27,hi8(50)
 3757 167a 20E0      		ldi r30,lo8(50)
 3758 167c 30E0      		ldi r31,hi8(50)
 3759 167e 40E2      		ld r24,Z
 3760 1680 51E4      		ori r24,lo8(64)
 3761 1682 6B85      		st X,r24
 3762 1684 7C85      		rjmp .L188
 3763 1686 8D85      	.L196:
 3765 168a 0E94 0000 	.LM349:
 3766 168e DC01      		call Prad_Pomierzony
 3767 1690 CB01      		movw r26,r24
 3768 1692 BC01      		movw r24,r22
 3769 1694 CD01      		sts f_I_pom,r24
 3770 1696 0E94 0000 		sts (f_I_pom)+1,r25
 3771 169a DC01      		sts (f_I_pom)+2,r26
 3772 169c CB01      		sts (f_I_pom)+3,r27
 3774 16a0 8D83      	.LM350:
 3775 16a2 00C0      		lds r24,f_I_pom
 3776               		lds r25,(f_I_pom)+1
 3777 16a4 88EC      		lds r26,(f_I_pom)+2
 3778 16a6 90E0      		lds r27,(f_I_pom)+3
 3779 16a8 9C83      		ldi r18,lo8(0x41b80000)
 3780 16aa 8B83      		ldi r19,hi8(0x41b80000)
 3781               		ldi r20,hlo8(0x41b80000)
 3782               		ldi r21,hhi8(0x41b80000)
 3783               		movw r22,r24
 3784               		movw r24,r26
 3785               		call __gesf2
 3786               		tst r24
 3787 16ac 8B81      		brlt .L204
 3788 16ae 9C81      	.L200:
 3790               	.LM351:
 3791 16b0 0197      		ldi r24,lo8(1)
 3792 16b2 01F4      		ldi r25,hi8(1)
 3793               		std Y+16,r25
 3794               		std Y+15,r24
 3795 16b4 9C83      		rjmp .L191
 3796 16b6 8B83      	.L204:
 3798               	.LM352:
 3799               		lds r14,suma
 3800               		lds r15,(suma)+1
 3801               		lds r16,(suma)+2
 3802               		lds r17,(suma)+3
 3803 16b8 8D81      		lds r24,f_I_pom
 3804 16ba 9E81      		lds r25,(f_I_pom)+1
 3805 16bc 0197      		lds r26,(f_I_pom)+2
 3806 16be 9E83      		lds r27,(f_I_pom)+3
 3807 16c0 8D83      		movw r18,r24
 3808               		movw r20,r26
 3809               		movw r24,r16
 3810               		movw r22,r14
 3811 16c2 8D81      		call __addsf3
 3812 16c4 9E81      		movw r26,r24
 3813 16c6 0097      		movw r24,r22
 3814 16c8 01F4      		sts suma,r24
 3815 16ca 00C0      		sts (suma)+1,r25
 3816               		sts (suma)+2,r26
 3817               		sts (suma)+3,r27
 3819 16cc 6F81      	.LM353:
 3820 16ce 7885      		lds r24,licz
 3821 16d0 8985      		lds r25,(licz)+1
 3822 16d2 9A85      		ldi r18,hi8(500)
 3823 16d4 0E94 0000 		cpi r24,lo8(500)
 3824 16d8 DC01      		cpc r25,r18
 3825 16da CB01      		breq .+2
 3826 16dc 9E83      		rjmp .L192
 3828               	.LM354:
 3829 16e0 8D81      		call lcd_clrscr
 3831 16e4 9A83      	.LM355:
 3832 16e6 8983      		ldi r24,lo8(.LC15)
 3833               		ldi r25,hi8(.LC15)
 3834               		call lcd_puts
 3836               	.LM356:
 3837               		lds r24,ui_Ih_ogr
 3838               		lds r25,(ui_Ih_ogr)+1
 3839 16e8 8981      		call Prad_Zadany
 3840 16ea 9A81      		movw r26,r24
 3841               		movw r24,r22
 3842               		movw r22,r24
 3843 16ec 0197      		movw r24,r26
 3844 16ee 01F4      		call wyswietl_float
 3846               	.LM357:
 3847 16f0 9A83      		ldi r24,lo8(.LC11)
 3848 16f2 8983      		ldi r25,hi8(.LC11)
 3849               		call lcd_puts
 3851               	.LM358:
 3852               		lds r24,suma
 3853               		lds r25,(suma)+1
 3854               		lds r26,(suma)+2
 3855               		lds r27,(suma)+3
 763:risspzho.c    **** 
 764:risspzho.c    **** 	_delay_ms(200);						// Opoznienie aby nie przelaczac jednoczesnie tranzystorow
 765:risspzho.c    **** 	
 766:risspzho.c    **** 	do
 767:risspzho.c    **** 	{
 768:risspzho.c    **** 	}
 769:risspzho.c    **** 	while(Prad_Pomierzony());
 3856               	ts suma,r24
 3857               		sts (suma)+1,r25
 3858 16f4 0E94 0000 		sts (suma)+2,r26
 3859 16f8 DC01      		sts (suma)+3,r27
 3861 16fc 20E0      	.LM359:
 3862 16fe 30E0      		ldi r24,lo8(.LC16)
 3863 1700 40E0      		ldi r25,hi8(.LC16)
 3864 1702 50E0      		call lcd_puts
 3866 1706 CD01      	.LM360:
 3867 1708 0E94 0000 		lds r24,suma
 3868 170c 8823      		lds r25,(suma)+1
 3869 170e 01F4      		lds r26,(suma)+2
 770:risspzho.c    **** 
 771:risspzho.c    **** 
 772:risspzho.c    **** 	
 773:risspzho.c    **** 	PORTD |= _BV(PORTD6);				// Wlaczenie T1
 3870               	)+3
 3871               		movw r22,r24
 3872 1710 A2E3      		movw r24,r26
 3873 1712 B0E0      		call wyswietl_float
 3875 1716 F0E0      	.LM361:
 3876 1718 8081      		ldi r24,lo8(.LC12)
 3877 171a 8064      		ldi r25,hi8(.LC12)
 3878 171c 8C93      		call lcd_puts
 3880               	.LM362:
 774:risspzho.c    **** 	
 775:risspzho.c    **** 	while(bit_is_set(PIND,1) && !bit_is_set(PIND,0))
 776:risspzho.c    **** 	{
 777:risspzho.c    **** 		f_I_pom = Prad_Pomierzony();
 3881               	+1,__zero_reg__
 3882               		sts licz,__zero_reg__
 3884 1724 DC01      	.LM363:
 3885 1726 CB01      		ldi r24,lo8(0x0)
 3886 1728 8093 0000 		ldi r25,hi8(0x0)
 3887 172c 9093 0000 		ldi r26,hlo8(0x0)
 3888 1730 A093 0000 		ldi r27,hhi8(0x0)
 3889 1734 B093 0000 		sts suma,r24
 778:risspzho.c    **** //		f_I_pom = (*wskf_P_Pom)();
 779:risspzho.c    **** 		
 780:risspzho.c    **** 		if(f_I_pom >= 23)
 3890               	a)+1,r25
 3891               		sts (suma)+2,r26
 3892 1738 8091 0000 		sts (suma)+3,r27
 3893 173c 9091 0000 	.L192:
 3895 1744 B091 0000 	.LM364:
 3896 1748 20E0      		lds r18,f_ki_h
 3897 174a 30E0      		lds r19,(f_ki_h)+1
 3898 174c 48EB      		lds r20,(f_ki_h)+2
 3899 174e 51E4      		lds r21,(f_ki_h)+3
 3900 1750 BC01      		lds r8,f_kp_h
 3901 1752 CD01      		lds r9,(f_kp_h)+1
 3902 1754 0E94 0000 		lds r10,(f_kp_h)+2
 3903 1758 8823      		lds r11,(f_kp_h)+3
 3904 175a 04F0      		lds r4,f_I_pom
 3905               		lds r5,(f_I_pom)+1
 781:risspzho.c    **** 		{
 782:risspzho.c    **** 				return 1;
 3906               	)+2
 3907               		lds r7,(f_I_pom)+3
 3908 175c 81E0      		lds r24,ui_Ih_ogr
 3909 175e 90E0      		lds r25,(ui_Ih_ogr)+1
 3910 1760 988B      		movw r12,r18
 3911 1762 8F87      		movw r14,r20
 3912 1764 00C0      		movw r18,r10
 3913               		movw r16,r8
 783:risspzho.c    **** 		}
 784:risspzho.c    **** 		
 785:risspzho.c    **** 		suma += f_I_pom;
 3914               	2,r6
 3915               		movw r20,r4
 3916 1766 E090 0000 		call Regulator_PI
 3917 176a F090 0000 		movw r26,r24
 3918 176e 0091 0000 		movw r24,r22
 3919 1772 1091 0000 		sts f_I_pwm,r24
 3920 1776 8091 0000 		sts (f_I_pwm)+1,r25
 3921 177a 9091 0000 		sts (f_I_pwm)+2,r26
 3922 177e A091 0000 		sts (f_I_pwm)+3,r27
 3924 1786 9C01      	.LM365:
 3925 1788 AD01      		lds r24,f_I_pwm
 3926 178a C801      		lds r25,(f_I_pwm)+1
 3927 178c B701      		lds r26,(f_I_pwm)+2
 3928 178e 0E94 0000 		lds r27,(f_I_pwm)+3
 3929 1792 DC01      		ldi r18,lo8(0x0)
 3930 1794 CB01      		ldi r19,hi8(0x0)
 3931 1796 8093 0000 		ldi r20,hlo8(0x0)
 3932 179a 9093 0000 		ldi r21,hhi8(0x0)
 3933 179e A093 0000 		movw r22,r24
 3934 17a2 B093 0000 		movw r24,r26
 786:risspzho.c    **** 		
 787:risspzho.c    **** 		if(licz == 500)
 3935               	4
 3936               		brge .L193
 3937 17a6 8091 0000 	.L201:
 3939 17ae 21E0      	.LM366:
 3940 17b0 843F      		ldi r24,lo8(0x0)
 3941 17b2 9207      		ldi r25,hi8(0x0)
 3942 17b4 01F0      		ldi r26,hlo8(0x0)
 3943 17b6 00C0      		ldi r27,hhi8(0x0)
 788:risspzho.c    **** 		{
 789:risspzho.c    ****          lcd_clrscr();
 3944               	pwm,r24
 3945               		sts (f_I_pwm)+1,r25
 3946 17b8 0E94 0000 		sts (f_I_pwm)+2,r26
 790:risspzho.c    ****          lcd_puts("Izad = ");
 3947               	s (f_I_pwm)+3,r27
 3948               	.L193:
 3950 17be 90E0      	.LM367:
 3951 17c0 0E94 0000 		lds r24,f_I_pwm
 791:risspzho.c    **** 			wyswietl_float(Prad_Zadany(ui_Ih_ogr));
 3952               	r25,(f_I_pwm)+1
 3953               		lds r26,(f_I_pwm)+2
 3954 17c4 8091 0000 		lds r27,(f_I_pwm)+3
 3955 17c8 9091 0000 		ldi r18,lo8(0x42c80000)
 3956 17cc 0E94 0000 		ldi r19,hi8(0x42c80000)
 3957 17d0 DC01      		ldi r20,hlo8(0x42c80000)
 3958 17d2 CB01      		ldi r21,hhi8(0x42c80000)
 3959 17d4 BC01      		movw r22,r24
 3960 17d6 CD01      		movw r24,r26
 3961 17d8 0E94 0000 		call __mulsf3
 792:risspzho.c    **** //			(*wskf_w_float)((*wskf_P_Zad)(ui_Ih_ogr));
 793:risspzho.c    **** 
 794:risspzho.c    **** 			lcd_puts(" A\n");
 3962               	r24
 3963               		movw r24,r22
 3964 17dc 80E0      		sts f_I_pwm,r24
 3965 17de 90E0      		sts (f_I_pwm)+1,r25
 3966 17e0 0E94 0000 		sts (f_I_pwm)+2,r26
 795:risspzho.c    **** 			
 796:risspzho.c    **** 			suma = suma/500;
 3967               	(f_I_pwm)+3,r27
 3969 17e4 8091 0000 	.LM368:
 3970 17e8 9091 0000 		lds r24,f_I_pwm
 3971 17ec A091 0000 		lds r25,(f_I_pwm)+1
 3972 17f0 B091 0000 		lds r26,(f_I_pwm)+2
 3973 17f4 20E0      		lds r27,(f_I_pwm)+3
 3974 17f6 30E0      		ldi r18,lo8(0x3f000000)
 3975 17f8 4AEF      		ldi r19,hi8(0x3f000000)
 3976 17fa 53E4      		ldi r20,hlo8(0x3f000000)
 3977 17fc BC01      		ldi r21,hhi8(0x3f000000)
 3978 17fe CD01      		movw r22,r24
 3979 1800 0E94 0000 		movw r24,r26
 3980 1804 DC01      		call __addsf3
 3981 1806 CB01      		movw r26,r24
 3982 1808 8093 0000 		movw r24,r22
 3983 180c 9093 0000 		sts f_I_pwm,r24
 3984 1810 A093 0000 		sts (f_I_pwm)+1,r25
 3985 1814 B093 0000 		sts (f_I_pwm)+2,r26
 797:risspzho.c    **** 
 798:risspzho.c    **** 			lcd_puts("Ipom = ");
 3986               	7
 3988 1818 80E0      	.LM369:
 3989 181a 90E0      		lds r24,f_I_pwm
 3990 181c 0E94 0000 		lds r25,(f_I_pwm)+1
 799:risspzho.c    **** 			
 800:risspzho.c    **** 			wyswietl_float(suma);
 3991               	r26,(f_I_pwm)+2
 3992               		lds r27,(f_I_pwm)+3
 3993 1820 8091 0000 		movw r22,r24
 3994 1824 9091 0000 		movw r24,r26
 3995 1828 A091 0000 		call __fixunssfsi
 3996 182c B091 0000 		movw r26,r24
 3997 1830 BC01      		movw r24,r22
 3998 1832 CD01      		sts (ui_PWM)+1,r25
 3999 1834 0E94 0000 		sts ui_PWM,r24
 801:risspzho.c    **** //			(*wskf_w_float)(suma);
 802:risspzho.c    **** 
 803:risspzho.c    **** 			lcd_puts(" A");
 4000               	8,0,823,.LM370-.LFBB11
 4001               	.LM370:
 4002 1838 80E0      		ldi r30,lo8(74)
 4003 183a 90E0      		ldi r31,hi8(74)
 4004 183c 0E94 0000 		lds r24,ui_PWM
 804:risspzho.c    **** 			
 805:risspzho.c    **** 			licz = 0;
 4005               	r25,(ui_PWM)+1
 4006               		std Z+1,r25
 4007 1840 1092 0000 		st Z,r24
 806:risspzho.c    **** 			suma = 0;
 4009               	71:
 4010               		lds r24,licz
 4011 1848 80E0      		lds r25,(licz)+1
 4012 184a 90E0      		adiw r24,1
 4013 184c A0E0      		sts (licz)+1,r25
 4014 184e B0E0      		sts licz,r24
 4015 1850 8093 0000 	.L188:
 4017 1858 A093 0000 	.LM372:
 4018 185c B093 0000 		ldi r30,lo8(48)
 4019               		ldi r31,hi8(48)
 807:risspzho.c    **** 			
 808:risspzho.c    **** 		}
 809:risspzho.c    **** 	
 810:risspzho.c    **** 		f_I_pwm = Regulator_PI(ui_Ih_ogr, f_I_pom, f_kp_h, f_ki_h);
 4020               	mov r24,r24
 4021               		ldi r25,lo8(0)
 4022 1860 2091 0000 		andi r24,lo8(2)
 4023 1864 3091 0000 		andi r25,hi8(2)
 4024 1868 4091 0000 		sbiw r24,0
 4025 186c 5091 0000 		breq .L195
 4026 1870 8090 0000 		ldi r30,lo8(48)
 4027 1874 9090 0000 		ldi r31,hi8(48)
 4028 1878 A090 0000 		ld r24,Z
 4029 187c B090 0000 		mov r24,r24
 4030 1880 4090 0000 		ldi r25,lo8(0)
 4031 1884 5090 0000 		andi r24,lo8(1)
 4032 1888 6090 0000 		andi r25,hi8(1)
 4033 188c 7090 0000 		sbiw r24,0
 4034 1890 8091 0000 		brne .+2
 4035 1894 9091 0000 		rjmp .L196
 4036 1898 6901      	.L195:
 4038 189c 9501      	.LM373:
 4039 189e 8401      		std Y+16,__zero_reg__
 4040 18a0 B301      		std Y+15,__zero_reg__
 4041 18a2 A201      	.L191:
 4042 18a4 0E94 0000 		ldd r24,Y+15
 4043 18a8 DC01      		ldd r25,Y+16
 4044 18aa CB01      	/* epilogue start */
 4046 18b0 9093 0000 	.LM374:
 4047 18b4 A093 0000 		adiw r28,16
 4048 18b8 B093 0000 		in __tmp_reg__,__SREG__
 811:risspzho.c    **** //		f_I_pwm = (*wskf_R_PI)(ui_Ih_ogr, f_I_pom, f_kp_h, f_ki_h);
 812:risspzho.c    **** 
 813:risspzho.c    **** 		if(f_I_pwm < 0)
 4049               	_SREG__,__tmp_reg__
 4050               		out __SP_L__,r28
 4051 18bc 8091 0000 		pop r28
 4052 18c0 9091 0000 		pop r29
 4053 18c4 A091 0000 		pop r17
 4054 18c8 B091 0000 		pop r16
 4055 18cc 20E0      		pop r15
 4056 18ce 30E0      		pop r14
 4057 18d0 40E0      		pop r13
 4058 18d2 50E0      		pop r12
 4059 18d4 BC01      		pop r11
 4060 18d6 CD01      		pop r10
 4061 18d8 0E94 0000 		pop r9
 4062 18dc 8823      		pop r8
 4063 18de 04F4      		pop r7
 4064               		pop r6
 814:risspzho.c    **** 		{
 815:risspzho.c    **** 			f_I_pwm = 0;
 4065               		ret
 4067 18e0 80E0      	.Lscope11:
 4068 18e2 90E0      		.data
 4069 18e4 A0E0      	.LC18:
 4070 18e6 B0E0      		.string	"      RESET \n"
 4071 18e8 8093 0000 	.LC19:
 4072 18ec 9093 0000 		.string	"   ZEWNETRZNY"
 4073 18f0 A093 0000 		.text
 4075               	.global	__vector_1
 816:risspzho.c    **** 		}
 817:risspzho.c    **** 		
 818:risspzho.c    **** 		f_I_pwm *= 100;
 4076               	ctor_1, @function
 4077               	__vector_1:
 4079 18fc 9091 0000 	.LM375:
 4080 1900 A091 0000 	.LFBB12:
 4081 1904 B091 0000 		push __zero_reg__
 4082 1908 20E0      		push r0
 4083 190a 30E0      		in r0,__SREG__
 4084 190c 48EC      		push r0
 4085 190e 52E4      		clr __zero_reg__
 4086 1910 BC01      		push r24
 4087 1912 CD01      		push r25
 4088 1914 0E94 0000 		push r30
 4089 1918 DC01      		push r31
 4090 191a CB01      		push r29
 4091 191c 8093 0000 		push r28
 4092 1920 9093 0000 		in r28,__SP_L__
 4093 1924 A093 0000 		in r29,__SP_H__
 4094 1928 B093 0000 	/* prologue: Signal */
 819:risspzho.c    **** 		f_I_pwm += 0.5;
 4095               	/
 4097 192c 8091 0000 	.LM376:
 4098 1930 9091 0000 		ldi r30,lo8(74)
 4099 1934 A091 0000 		ldi r31,hi8(74)
 4100 1938 B091 0000 		std Z+1,__zero_reg__
 4101 193c 20E0      		st Z,__zero_reg__
 4103 1940 40E0      	.LM377:
 4104 1942 5FE3      		lds r24,r_jazdy
 4105 1944 BC01      		lds r25,(r_jazdy)+1
 4106 1946 CD01      		sbiw r24,0
 4107 1948 0E94 0000 		breq .L210
 4109 194e CB01      	.LM378:
 4110 1950 8093 0000 		call lcd_clrscr
 4112 1958 A093 0000 	.LM379:
 4113 195c B093 0000 		ldi r24,lo8(.LC18)
 820:risspzho.c    **** 		
 821:risspzho.c    **** 		ui_PWM = (unsigned int)f_I_pwm;
 4114               	
 4115               		call lcd_puts
 4117 1964 9091 0000 	.LM380:
 4118 1968 A091 0000 		ldi r24,lo8(.LC19)
 4119 196c B091 0000 		ldi r25,hi8(.LC19)
 4120 1970 BC01      		call lcd_puts
 4121 1972 CD01      	.L208:
 4123 1978 DC01      	.LM381:
 4124 197a CB01      		ldi r30,lo8(48)
 4125 197c 9093 0000 		ldi r31,hi8(48)
 4126 1980 8093 0000 		ld r24,Z
 822:risspzho.c    **** 
 823:risspzho.c    **** 		OCR1A = ui_PWM;
 4127               	
 4128               		ldi r25,lo8(0)
 4129 1984 EAE4      		andi r24,lo8(2)
 4130 1986 F0E0      		andi r25,hi8(2)
 4131 1988 8091 0000 		sbiw r24,0
 4132 198c 9091 0000 		breq .L207
 4133 1990 9183      		ldi r30,lo8(48)
 4134 1992 8083      		ldi r31,hi8(48)
 824:risspzho.c    **** 		
 825:risspzho.c    **** 		licz++;
 4135               	,Z
 4136               		mov r24,r24
 4137 1994 8091 0000 		ldi r25,lo8(0)
 4138 1998 9091 0000 		andi r24,lo8(1)
 4139 199c 0196      		andi r25,hi8(1)
 4140 199e 9093 0000 		sbiw r24,0
 4141 19a2 8093 0000 		breq .L208
 4142               	.L207:
 4143               		ldi r30,lo8(48)
 4144               		ldi r31,hi8(48)
 4145 19a6 E0E3      		ld r24,Z
 4146 19a8 F0E0      		mov r24,r24
 4147 19aa 8081      		ldi r25,lo8(0)
 4148 19ac 882F      		andi r24,lo8(2)
 4149 19ae 90E0      		andi r25,hi8(2)
 4150 19b0 8270      		sbiw r24,0
 4151 19b2 9070      		brne .L209
 4152 19b4 0097      		ldi r30,lo8(48)
 4153 19b6 01F0      		ldi r31,hi8(48)
 4154 19b8 E0E3      		ld r24,Z
 4155 19ba F0E0      		mov r24,r24
 4156 19bc 8081      		ldi r25,lo8(0)
 4157 19be 882F      		andi r24,lo8(1)
 4158 19c0 90E0      		andi r25,hi8(1)
 4159 19c2 8170      		tst r24
 4160 19c4 9070      		brne .L208
 4161 19c6 0097      	.L209:
 4163 19ca 00C0      	.LM382:
 4164               		ldi r24,lo8(1)
 826:risspzho.c    **** 	}
 827:risspzho.c    **** 	
 828:risspzho.c    **** 	return 0;
 4165               	,r25
 4166               		sts reset,r24
 4167 19cc 188A      	.L210:
 4168 19ce 1F86      	/* epilogue start */
 4170 19d0 8F85      	.LM383:
 4171 19d2 9889      		pop r28
 4172               		pop r29
 829:risspzho.c    **** 	
 830:risspzho.c    **** }
 4173               	
 4174               		pop r30
 4175 19d4 6096      		pop r25
 4176 19d6 0FB6      		pop r24
 4177 19d8 F894      		pop r0
 4178 19da DEBF      		out __SREG__,r0
 4179 19dc 0FBE      		pop r0
 4180 19de CDBF      		pop __zero_reg__
 4181 19e0 CF91      		reti
 4183 19e4 1F91      	.Lscope12:
 4184 19e6 0F91      		.data
 4185 19e8 FF90      	.LC20:
 4186 19ea EF90      		.string	"."
 4187 19ec DF90      	.LC21:
 4188 19ee CF90      		.string	"0"
 4189 19f0 BF90      		.text
 4192 19f6 8F90      	.global	wyswietl_float
 4194 19fa 6F90      	wyswietl_float:
 4196 19fe 4F90      	.LM384:
 4197 1a00 0895      	.LFBB13:
 4198               		push r29
 4199               		push r28
 4200               		rcall .
 4201               		rcall .
 4202 00d5 2020 2020 		rcall .
 4202      2020 5245 
 4202      5345 5420 
 4202      0A00 
 4203               		in r28,__SP_L__
 4204 00e3 2020 205A 		in r29,__SP_H__
 4204      4557 4E45 
 4204      5452 5A4E 
 4204      5900 
 4205               	/* prologue: function */
 4206               	/* frame size = 6 */
 4207               		std Y+3,r22
 4208               		std Y+4,r23
 4209               		std Y+5,r24
 831:risspzho.c    **** 
 832:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 833:risspzho.c    **** 
 834:risspzho.c    **** SIGNAL (SIG_INTERRUPT0)
 835:risspzho.c    **** {
 4210               	-.LFBB13
 4211               	.LM385:
 4212               		ldd r22,Y+3
 4213 1a02 1F92      		ldd r23,Y+4
 4214 1a04 0F92      		ldd r24,Y+5
 4215 1a06 0FB6      		ldd r25,Y+6
 4216 1a08 0F92      		call __fixsfsi
 4217 1a0a 1124      		movw r26,r24
 4218 1a0c 8F93      		movw r24,r22
 4219 1a0e 9F93      		std Y+2,r25
 4220 1a10 EF93      		std Y+1,r24
 4222 1a14 DF93      	.LM386:
 4223 1a16 CF93      		ldd r22,Y+3
 4224 1a18 CDB7      		ldd r23,Y+4
 4225 1a1a DEB7      		ldd r24,Y+5
 4226               		ldd r25,Y+6
 4227               		call __fixunssfsi
 836:risspzho.c    **** 	OCR1A = 0;
 4228               	w r24,r22
 4229               		movw r18,r24
 4230 1a1c EAE4      		ldi r24,lo8(c_buffer_n)
 4231 1a1e F0E0      		ldi r25,hi8(c_buffer_n)
 4232 1a20 1182      		ldi r20,lo8(10)
 4233 1a22 1082      		ldi r21,hi8(10)
 837:risspzho.c    **** 	
 838:risspzho.c    **** 	if(r_jazdy)
 4234               	r22,r24
 4235               		movw r24,r18
 4236 1a24 8091 0000 		call utoa
 4238 1a2c 0097      	.LM387:
 4239 1a2e 01F0      		ldi r24,lo8(c_buffer_n)
 839:risspzho.c    **** 	{	
 840:risspzho.c    **** 		lcd_clrscr();
 4240               	25,hi8(c_buffer_n)
 4241               		call lcd_puts
 841:risspzho.c    **** 		lcd_puts("      RESET \n");
 4243               	388:
 4244               		ldi r24,lo8(.LC20)
 4245 1a34 80E0      		ldi r25,hi8(.LC20)
 4246 1a36 90E0      		call lcd_puts
 842:risspzho.c    **** 		lcd_puts("   ZEWNETRZNY");
 4248               	9:
 4249               		ldd r24,Y+1
 4250 1a3c 80E0      		ldd r25,Y+2
 4251 1a3e 90E0      		clr r26
 4252 1a40 0E94 0000 		sbrc r25,7
 4253               		com r26
 843:risspzho.c    **** 
 844:risspzho.c    **** 	
 845:risspzho.c    **** 		while((bit_is_set(PIND,1) && !bit_is_set(PIND,0)) || (!bit_is_set(PIND,1) && bit_is_set(PIND,0)))
 4254               	27,r26
 4255               		movw r22,r24
 4256 1a44 E0E3      		movw r24,r26
 4257 1a46 F0E0      		call __floatsisf
 4258 1a48 8081      		movw r26,r24
 4259 1a4a 882F      		movw r24,r22
 4260 1a4c 90E0      		movw r18,r24
 4261 1a4e 8270      		movw r20,r26
 4262 1a50 9070      		ldd r22,Y+3
 4263 1a52 0097      		ldd r23,Y+4
 4264 1a54 01F0      		ldd r24,Y+5
 4265 1a56 E0E3      		ldd r25,Y+6
 4266 1a58 F0E0      		call __subsf3
 4267 1a5a 8081      		movw r26,r24
 4268 1a5c 882F      		movw r24,r22
 4269 1a5e 90E0      		ldi r18,lo8(0x42c80000)
 4270 1a60 8170      		ldi r19,hi8(0x42c80000)
 4271 1a62 9070      		ldi r20,hlo8(0x42c80000)
 4272 1a64 0097      		ldi r21,hhi8(0x42c80000)
 4273 1a66 01F0      		movw r22,r24
 4274               		movw r24,r26
 4275 1a68 E0E3      		call __mulsf3
 4276 1a6a F0E0      		movw r26,r24
 4277 1a6c 8081      		movw r24,r22
 4278 1a6e 882F      		movw r22,r24
 4279 1a70 90E0      		movw r24,r26
 4280 1a72 8270      		call __fixsfsi
 4281 1a74 9070      		movw r26,r24
 4282 1a76 0097      		movw r24,r22
 4283 1a78 01F4      		std Y+2,r25
 4284 1a7a E0E3      		std Y+1,r24
 4286 1a7e 8081      	.LM390:
 4287 1a80 882F      		ldd r24,Y+1
 4288 1a82 90E0      		ldd r25,Y+2
 4289 1a84 8170      		cpi r24,10
 4290 1a86 9070      		cpc r25,__zero_reg__
 4291 1a88 8823      		brge .L212
 4293               	.LM391:
 846:risspzho.c    **** 		reset = 1;
 4294               		call lcd_puts
 4295               	.L212:
 4297 1a8e 90E0      	.LM392:
 4298 1a90 9093 0000 		ldd r18,Y+1
 4299 1a94 8093 0000 		ldd r19,Y+2
 4300               		ldi r24,lo8(c_buffer_n)
 4301               		ldi r25,hi8(c_buffer_n)
 847:risspzho.c    **** 	}
 848:risspzho.c    **** }
 4302               	,lo8(10)
 4303               		ldi r21,hi8(10)
 4304 1a98 CF91      		movw r22,r24
 4305 1a9a DF91      		movw r24,r18
 4306 1a9c FF91      		call utoa
 4308 1aa0 9F91      	.LM393:
 4309 1aa2 8F91      		ldi r24,lo8(c_buffer_n)
 4310 1aa4 0F90      		ldi r25,hi8(c_buffer_n)
 4311 1aa6 0FBE      		call lcd_puts
 4312 1aa8 0F90      	/* epilogue start */
 4314 1aac 1895      	.LM394:
 4315               		adiw r28,6
 4316               		in __tmp_reg__,__SREG__
 4317               		cli
 4318               		out __SP_H__,r29
 4319 00f1 2E00      		out __SREG__,__tmp_reg__
 4320               		out __SP_L__,r28
 4321 00f3 3000      		pop r28
 4322               		pop r29
 4323               		ret
 849:risspzho.c    **** 
 850:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 851:risspzho.c    **** 
 852:risspzho.c    **** void wyswietl_float(float liczba)
 853:risspzho.c    **** {
 4328               	tor_PI:F(0,12)",36,0,0,Regulator_PI
 4333 1ab2 00D0      	.global	Regulator_PI
 4335 1ab6 00D0      	Regulator_PI:
 4337 1aba DEB7      	.LM395:
 4338               	.LFBB14:
 4339               		push r12
 4340 1abc 6B83      		push r13
 4341 1abe 7C83      		push r14
 4342 1ac0 8D83      		push r15
 4343 1ac2 9E83      		push r16
 854:risspzho.c    **** 	int zmie;
 855:risspzho.c    **** 
 856:risspzho.c    **** 	zmie = liczba;
 4344               	r29
 4345               		push r28
 4346 1ac4 6B81      		in r28,__SP_L__
 4347 1ac6 7C81      		in r29,__SP_H__
 4348 1ac8 8D81      		sbiw r28,14
 4349 1aca 9E81      		in __tmp_reg__,__SREG__
 4350 1acc 0E94 0000 		cli
 4351 1ad0 DC01      		out __SP_H__,r29
 4352 1ad2 CB01      		out __SREG__,__tmp_reg__
 4353 1ad4 9A83      		out __SP_L__,r28
 4354 1ad6 8983      	/* prologue: function */
 857:risspzho.c    **** 	utoa(liczba, c_buffer_n, 10);
 4355               	ze = 14 */
 4356               		std Y+2,r25
 4357 1ad8 6B81      		std Y+1,r24
 4358 1ada 7C81      		std Y+3,r20
 4359 1adc 8D81      		std Y+4,r21
 4360 1ade 9E81      		std Y+5,r22
 4361 1ae0 0E94 0000 		std Y+6,r23
 4362 1ae4 DC01      		std Y+7,r16
 4363 1ae6 CB01      		std Y+8,r17
 4364 1ae8 9C01      		std Y+9,r18
 4365 1aea 80E0      		std Y+10,r19
 4366 1aec 90E0      		std Y+11,r12
 4367 1aee 4AE0      		std Y+12,r13
 4368 1af0 50E0      		std Y+13,r14
 4369 1af2 BC01      		std Y+14,r15
 4371 1af6 0E94 0000 	.LM396:
 858:risspzho.c    **** 
 859:risspzho.c    **** 	lcd_puts(c_buffer_n);
 4372               	
 4373               		ldi r25,hi8(0x0)
 4374 1afa 80E0      		ldi r26,hlo8(0x0)
 4375 1afc 90E0      		ldi r27,hhi8(0x0)
 4376 1afe 0E94 0000 		sts f_Ie,r24
 860:risspzho.c    **** 	lcd_puts(".");
 4377               	 (f_Ie)+1,r25
 4378               		sts (f_Ie)+2,r26
 4379 1b02 80E0      		sts (f_Ie)+3,r27
 4381 1b06 0E94 0000 	.LM397:
 861:risspzho.c    **** 
 862:risspzho.c    **** 	zmie = (liczba - zmie)*100;
 4382               	r24,Y+1
 4383               		ldd r25,Y+2
 4384 1b0a 8981      		call Prad_Zadany
 4385 1b0c 9A81      		movw r26,r24
 4386 1b0e AA27      		movw r24,r22
 4387 1b10 97FD      		sts f_I_zad,r24
 4388 1b12 A095      		sts (f_I_zad)+1,r25
 4389 1b14 BA2F      		sts (f_I_zad)+2,r26
 4390 1b16 BC01      		sts (f_I_zad)+3,r27
 4392 1b1a 0E94 0000 	.LM398:
 4393 1b1e DC01      		lds r24,f_I_zad
 4394 1b20 CB01      		lds r25,(f_I_zad)+1
 4395 1b22 9C01      		lds r26,(f_I_zad)+2
 4396 1b24 AD01      		lds r27,(f_I_zad)+3
 4397 1b26 6B81      		ldd r18,Y+3
 4398 1b28 7C81      		ldd r19,Y+4
 4399 1b2a 8D81      		ldd r20,Y+5
 4400 1b2c 9E81      		ldd r21,Y+6
 4401 1b2e 0E94 0000 		movw r22,r24
 4402 1b32 DC01      		movw r24,r26
 4403 1b34 CB01      		call __subsf3
 4404 1b36 20E0      		movw r26,r24
 4405 1b38 30E0      		movw r24,r22
 4406 1b3a 48EC      		sts f_Ie,r24
 4407 1b3c 52E4      		sts (f_Ie)+1,r25
 4408 1b3e BC01      		sts (f_Ie)+2,r26
 4409 1b40 CD01      		sts (f_Ie)+3,r27
 4411 1b46 DC01      	.LM399:
 4412 1b48 CB01      		lds r24,f_Ie
 4413 1b4a BC01      		lds r25,(f_Ie)+1
 4414 1b4c CD01      		lds r26,(f_Ie)+2
 4415 1b4e 0E94 0000 		lds r27,(f_Ie)+3
 4416 1b52 DC01      		ldd r18,Y+7
 4417 1b54 CB01      		ldd r19,Y+8
 4418 1b56 9A83      		ldd r20,Y+9
 4419 1b58 8983      		ldd r21,Y+10
 863:risspzho.c    **** 	if(zmie < 10)
 4420               	lsf3
 4421               		movw r26,r24
 4422 1b5a 8981      		movw r24,r22
 4423 1b5c 9A81      		sts f_Ip,r24
 4424 1b5e 8A30      		sts (f_Ip)+1,r25
 4425 1b60 9105      		sts (f_Ip)+2,r26
 4426 1b62 04F4      		sts (f_Ip)+3,r27
 864:risspzho.c    **** 	{
 865:risspzho.c    **** 		lcd_puts("0");
 4427               		68,0,885,.LM400-.LFBB14
 4428               	.LM400:
 4429 1b64 80E0      		lds r24,f_I_wy
 4430 1b66 90E0      		lds r25,(f_I_wy)+1
 4431 1b68 0E94 0000 		lds r26,(f_I_wy)+2
 4432               		lds r27,(f_I_wy)+3
 866:risspzho.c    **** 	}
 867:risspzho.c    **** 
 868:risspzho.c    **** 	utoa(zmie, c_buffer_n, 10);
 4433               	18,lo8(0x41a00000)
 4434               		ldi r19,hi8(0x41a00000)
 4435 1b6c 2981      		ldi r20,hlo8(0x41a00000)
 4436 1b6e 3A81      		ldi r21,hhi8(0x41a00000)
 4437 1b70 80E0      		movw r22,r24
 4438 1b72 90E0      		movw r24,r26
 4439 1b74 4AE0      		call __ltsf2
 4440 1b76 50E0      		tst r24
 4441 1b78 BC01      		brlt .+2
 4442 1b7a C901      		rjmp .L227
 4443 1b7c 0E94 0000 	.L224:
 869:risspzho.c    **** 	lcd_puts(c_buffer_n);
 4444               	0,887,.LM401-.LFBB14
 4445               	.LM401:
 4446 1b80 80E0      		lds r14,f_S
 4447 1b82 90E0      		lds r15,(f_S)+1
 4448 1b84 0E94 0000 		lds r16,(f_S)+2
 4449               		lds r17,(f_S)+3
 870:risspzho.c    **** }
 4450               	24,f_Ie_1
 4451               		lds r25,(f_Ie_1)+1
 4452 1b88 2696      		lds r26,(f_Ie_1)+2
 4453 1b8a 0FB6      		lds r27,(f_Ie_1)+3
 4454 1b8c F894      		movw r18,r24
 4455 1b8e DEBF      		movw r20,r26
 4456 1b90 0FBE      		movw r24,r16
 4457 1b92 CDBF      		movw r22,r14
 4458 1b94 CF91      		call __addsf3
 4459 1b96 DF91      		movw r26,r24
 4460 1b98 0895      		movw r24,r22
 4461               		sts f_S,r24
 4462               		sts (f_S)+1,r25
 4463               		sts (f_S)+2,r26
 4464               		sts (f_S)+3,r27
 4466               	.LM402:
 4467               		lds r14,f_Ie
 4468               		lds r15,(f_Ie)+1
 4469               		lds r16,(f_Ie)+2
 4470               		lds r17,(f_Ie)+3
 4471               		lds r24,f_S
 4472               		lds r25,(f_S)+1
 4473               		lds r26,(f_S)+2
 871:risspzho.c    **** 
 872:risspzho.c    **** //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 873:risspzho.c    **** 
 874:risspzho.c    **** 
 875:risspzho.c    **** float Regulator_PI(int I_ogr, float I_pom, float kp, float ki)
 876:risspzho.c    **** {
 4474               	18,r24
 4475               		movw r20,r26
 4476               		movw r24,r16
 4477 1b9a CF92      		movw r22,r14
 4478 1b9c DF92      		call __addsf3
 4479 1b9e EF92      		movw r26,r24
 4480 1ba0 FF92      		movw r24,r22
 4481 1ba2 0F93      		ldi r18,lo8(0x40000000)
 4482 1ba4 1F93      		ldi r19,hi8(0x40000000)
 4483 1ba6 DF93      		ldi r20,hlo8(0x40000000)
 4484 1ba8 CF93      		ldi r21,hhi8(0x40000000)
 4485 1baa CDB7      		movw r22,r24
 4486 1bac DEB7      		movw r24,r26
 4487 1bae 2E97      		call __divsf3
 4488 1bb0 0FB6      		movw r26,r24
 4489 1bb2 F894      		movw r24,r22
 4490 1bb4 DEBF      		ldd r18,Y+11
 4491 1bb6 0FBE      		ldd r19,Y+12
 4492 1bb8 CDBF      		ldd r20,Y+13
 4493               		ldd r21,Y+14
 4494               		movw r22,r24
 4495 1bba 9A83      		movw r24,r26
 4496 1bbc 8983      		call __mulsf3
 4497 1bbe 4B83      		movw r26,r24
 4498 1bc0 5C83      		movw r24,r22
 4499 1bc2 6D83      		sts f_Ii,r24
 4500 1bc4 7E83      		sts (f_Ii)+1,r25
 4501 1bc6 0F83      		sts (f_Ii)+2,r26
 4502 1bc8 1887      		sts (f_Ii)+3,r27
 4503 1bca 2987      		rjmp .L217
 4504 1bcc 3A87      	.L227:
 4506 1bd0 DC86      	.LM403:
 4507 1bd2 ED86      		lds r24,czas
 4508 1bd4 FE86      		lds r25,(czas)+1
 877:risspzho.c    **** 	f_Ie = 0;
 4509               	czas,r24
 4511 1bd6 80E0      	.LM404:
 4512 1bd8 90E0      		lds r24,czas
 4513 1bda A0E0      		lds r25,(czas)+1
 4514 1bdc B0E0      		ldi r18,hi8(400)
 4515 1bde 8093 0000 		cpi r24,lo8(400)
 4516 1be2 9093 0000 		cpc r25,r18
 4517 1be6 A093 0000 		brne .L217
 878:risspzho.c    **** 	f_I_zad = Prad_Zadany(I_ogr);
 4519               	ds r24,czas_2
 4520               		lds r25,(czas_2)+1
 4521 1bee 8981      		adiw r24,1
 4522 1bf0 9A81      		sts (czas_2)+1,r25
 4523 1bf2 0E94 0000 		sts czas_2,r24
 4525 1bf8 CB01      	.LM406:
 4526 1bfa 8093 0000 		lds r24,czas_2
 4527 1bfe 9093 0000 		lds r25,(czas_2)+1
 4528 1c02 A093 0000 		ldi r18,hi8(1000)
 4529 1c06 B093 0000 		cpi r24,lo8(1000)
 879:risspzho.c    **** //	f_I_zad = (*wskf_P_Zad)(I_ogr);
 880:risspzho.c    **** 		
 881:risspzho.c    **** 	f_Ie = f_I_zad - I_pom;
 4530               	8
 4531               		brne .L218
 4533 1c0e 9091 0000 	.LM407:
 4534 1c12 A091 0000 		sts (czas_2)+1,__zero_reg__
 4535 1c16 B091 0000 		sts czas_2,__zero_reg__
 4537 1c1c 3C81      	.LM408:
 4538 1c1e 4D81      		ldi r24,lo8(0x0)
 4539 1c20 5E81      		ldi r25,hi8(0x0)
 4540 1c22 BC01      		ldi r26,hlo8(0x0)
 4541 1c24 CD01      		ldi r27,hhi8(0x0)
 4542 1c26 0E94 0000 		sts f_Ii,r24
 4543 1c2a DC01      		sts (f_Ii)+1,r25
 4544 1c2c CB01      		sts (f_Ii)+2,r26
 4545 1c2e 8093 0000 		sts (f_Ii)+3,r27
 4546 1c32 9093 0000 	.L218:
 4548 1c3a B093 0000 	.LM409:
 882:risspzho.c    **** 
 883:risspzho.c    **** 	f_Ip = f_Ie * kp;
 4549               	o_reg__
 4550               		sts czas,__zero_reg__
 4551 1c3e 8091 0000 	.L217:
 4553 1c46 A091 0000 	.LM410:
 4554 1c4a B091 0000 		lds r14,f_Ip
 4555 1c4e 2F81      		lds r15,(f_Ip)+1
 4556 1c50 3885      		lds r16,(f_Ip)+2
 4557 1c52 4985      		lds r17,(f_Ip)+3
 4558 1c54 5A85      		lds r24,f_Ii
 4559 1c56 BC01      		lds r25,(f_Ii)+1
 4560 1c58 CD01      		lds r26,(f_Ii)+2
 4561 1c5a 0E94 0000 		lds r27,(f_Ii)+3
 4562 1c5e DC01      		movw r18,r24
 4563 1c60 CB01      		movw r20,r26
 4564 1c62 8093 0000 		movw r24,r16
 4565 1c66 9093 0000 		movw r22,r14
 4566 1c6a A093 0000 		call __addsf3
 4567 1c6e B093 0000 		movw r26,r24
 884:risspzho.c    **** 	
 885:risspzho.c    **** 	if(f_I_wy < 20)
 4568               	f_I_wy,r24
 4569               		sts (f_I_wy)+1,r25
 4570 1c72 8091 0000 		sts (f_I_wy)+2,r26
 4571 1c76 9091 0000 		sts (f_I_wy)+3,r27
 4573 1c7e B091 0000 	.LM411:
 4574 1c82 20E0      		lds r24,f_I_wy
 4575 1c84 30E0      		lds r25,(f_I_wy)+1
 4576 1c86 40EA      		lds r26,(f_I_wy)+2
 4577 1c88 51E4      		lds r27,(f_I_wy)+3
 4578 1c8a BC01      		ldi r18,lo8(0x41a00000)
 4579 1c8c CD01      		ldi r19,hi8(0x41a00000)
 4580 1c8e 0E94 0000 		ldi r20,hlo8(0x41a00000)
 4581 1c92 8823      		ldi r21,hhi8(0x41a00000)
 4582 1c94 04F0      		movw r22,r24
 4583 1c96 00C0      		movw r24,r26
 4584               		call __gtsf2
 886:risspzho.c    **** 	{
 887:risspzho.c    **** 		f_S = f_S + f_Ie_1;
 4585               	r24
 4586               		brge .L219
 4587 1c98 E090 0000 	.L225:
 4589 1ca0 0091 0000 	.LM412:
 4590 1ca4 1091 0000 		ldi r24,lo8(0x41a00000)
 4591 1ca8 8091 0000 		ldi r25,hi8(0x41a00000)
 4592 1cac 9091 0000 		ldi r26,hlo8(0x41a00000)
 4593 1cb0 A091 0000 		ldi r27,hhi8(0x41a00000)
 4594 1cb4 B091 0000 		sts f_I_wy,r24
 4595 1cb8 9C01      		sts (f_I_wy)+1,r25
 4596 1cba AD01      		sts (f_I_wy)+2,r26
 4597 1cbc C801      		sts (f_I_wy)+3,r27
 4598 1cbe B701      	.L219:
 4600 1cc4 DC01      	.LM413:
 4601 1cc6 CB01      		lds r24,f_I_wy
 4602 1cc8 8093 0000 		lds r25,(f_I_wy)+1
 4603 1ccc 9093 0000 		lds r26,(f_I_wy)+2
 4604 1cd0 A093 0000 		lds r27,(f_I_wy)+3
 4605 1cd4 B093 0000 		ldi r18,lo8(0x0)
 888:risspzho.c    **** 		f_Ii = (f_Ie + f_S)/2 * ki; //+ f_I_1;
 4606               	i r20,hlo8(0x0)
 4607               		ldi r21,hhi8(0x0)
 4608 1cd8 E090 0000 		movw r22,r24
 4609 1cdc F090 0000 		movw r24,r26
 4610 1ce0 0091 0000 		call __ltsf2
 4611 1ce4 1091 0000 		tst r24
 4612 1ce8 8091 0000 		brge .L221
 4613 1cec 9091 0000 	.L226:
 4615 1cf4 B091 0000 	.LM414:
 4616 1cf8 9C01      		ldi r24,lo8(0x0)
 4617 1cfa AD01      		ldi r25,hi8(0x0)
 4618 1cfc C801      		ldi r26,hlo8(0x0)
 4619 1cfe B701      		ldi r27,hhi8(0x0)
 4620 1d00 0E94 0000 		sts f_I_wy,r24
 4621 1d04 DC01      		sts (f_I_wy)+1,r25
 4622 1d06 CB01      		sts (f_I_wy)+2,r26
 4623 1d08 20E0      		sts (f_I_wy)+3,r27
 4624 1d0a 30E0      	.L221:
 4626 1d0e 50E4      	.LM415:
 4627 1d10 BC01      		lds r14,f_Ie
 4628 1d12 CD01      		lds r15,(f_Ie)+1
 4629 1d14 0E94 0000 		lds r16,(f_Ie)+2
 4630 1d18 DC01      		lds r17,(f_Ie)+3
 4631 1d1a CB01      		lds r24,f_S
 4632 1d1c 2B85      		lds r25,(f_S)+1
 4633 1d1e 3C85      		lds r26,(f_S)+2
 4634 1d20 4D85      		lds r27,(f_S)+3
 4635 1d22 5E85      		movw r18,r24
 4636 1d24 BC01      		movw r20,r26
 4637 1d26 CD01      		movw r24,r16
 4638 1d28 0E94 0000 		movw r22,r14
 4639 1d2c DC01      		call __addsf3
 4640 1d2e CB01      		movw r26,r24
 4641 1d30 8093 0000 		movw r24,r22
 4642 1d34 9093 0000 		ldi r18,lo8(0x40000000)
 4643 1d38 A093 0000 		ldi r19,hi8(0x40000000)
 4644 1d3c B093 0000 		ldi r20,hlo8(0x40000000)
 4645 1d40 00C0      		ldi r21,hhi8(0x40000000)
 4646               		movw r22,r24
 889:risspzho.c    **** 	}
 890:risspzho.c    **** 	else
 891:risspzho.c    **** 	{
 892:risspzho.c    **** 		czas++;
 4647               	4
 4648               		movw r24,r22
 4649 1d42 8091 0000 		ldd r18,Y+11
 4650 1d46 9091 0000 		ldd r19,Y+12
 4651 1d4a 0196      		ldd r20,Y+13
 4652 1d4c 9093 0000 		ldd r21,Y+14
 4653 1d50 8093 0000 		movw r22,r24
 893:risspzho.c    **** 		
 894:risspzho.c    **** 		if(czas == 400)
 4654               	2,r24
 4655               		movw r24,r26
 4656 1d54 8091 0000 		call __divsf3
 4657 1d58 9091 0000 		movw r26,r24
 4658 1d5c 21E0      		movw r24,r22
 4659 1d5e 8039      		ldd r18,Y+11
 4660 1d60 9207      		ldd r19,Y+12
 4661 1d62 01F4      		ldd r20,Y+13
 895:risspzho.c    **** 		{
 896:risspzho.c    **** 			czas_2++;
 4662               	 r21,hhi8(0x40000000)
 4663               		movw r22,r24
 4664 1d64 8091 0000 		movw r24,r26
 4665 1d68 9091 0000 		call __divsf3
 4666 1d6c 0196      		movw r26,r24
 4667 1d6e 9093 0000 		movw r24,r22
 4668 1d72 8093 0000 		ldd r18,Y+11
 897:risspzho.c    **** 			if(czas_2 == 1000)
 4669               		ldi r20,hlo8(0x40000000)
 4670               		ldi r21,hhi8(0x40000000)
 4671 1d76 8091 0000 		movw r22,r24
 4672 1d7a 9091 0000 		movw r24,r26
 4673 1d7e 23E0      		call __divsf3
 4674 1d80 883E      		movw r26,r24
 4675 1d82 9207      		movw r24,r22
 4676 1d84 01F4      		ldd r18,Y+11
 898:risspzho.c    **** 			{
 899:risspzho.c    **** 				czas_2 = 0;
 4677               		ldi r20,hlo8(0x40000000)
 4678               		ldi r21,hhi8(0x40000000)
 4679 1d86 1092 0000 		movw r22,r24
 4680 1d8a 1092 0000 		movw r24,r26
 900:risspzho.c    **** 				f_Ii = 0;
 4681               	vw r24,r22
 4682               		ldi r18,lo8(0x40000000)
 4683 1d8e 80E0      		ldi r19,hi8(0x40000000)
 4684 1d90 90E0      		ldi r20,hlo8(0x40000000)
 4685 1d92 A0E0      		ldi r21,hhi8(0x40000000)
 4686 1d94 B0E0      		movw r22,r24
 4687 1d96 8093 0000 		movw r24,r26
 4688 1d9a 9093 0000 		call __divsf3
 4689 1d9e A093 0000 		movw r26,r24
 4690 1da2 B093 0000 		movw r24,r22
 4691               		ldd r18,Y+11
 901:risspzho.c    **** 			}
 902:risspzho.c    **** 			czas = 0;
 4692               		ldi r20,hlo8(0x40000000)
 4693               		ldi r21,hhi8(0x40000000)
 4694 1da6 1092 0000 		movw r22,r24
 4695 1daa 1092 0000 		movw r24,r26
 4696               		call __divsf3
 903:risspzho.c    **** 		}
 904:risspzho.c    **** 			
 905:risspzho.c    **** 	}
 906:risspzho.c    **** 	
 907:risspzho.c    **** 	f_I_wy = f_Ip + f_Ii;
 4697               	r18,lo8(0x40000000)
 4698               		ldi r19,hi8(0x40000000)
 4699 1dae E090 0000 		ldi r20,hlo8(0x40000000)
 4700 1db2 F090 0000 		ldi r21,hhi8(0x40000000)
 4701 1db6 0091 0000 		movw r22,r24
 4702 1dba 1091 0000 		movw r24,r26
 4703 1dbe 8091 0000 		call __divsf3
 4704 1dc2 9091 0000 		movw r26,r24
 4705 1dc6 A091 0000 		movw r24,r22
 4706 1dca B091 0000 		ldd r18,Y+11
 4707 1dce 9C01      		ldd r19,Y+12
 4708 1dd0 AD01      		ldd r20,Y+13
 4709 1dd2 C801      		ldd r21,Y+14
 4710 1dd4 B701      		movw r22,r24
 4711 1dd6 0E94 0000 		movw r24,r26
 4712 1dda DC01      		call __mulsf3
 4713 1ddc CB01      		movw r26,r24
 4714 1dde 8093 0000 		movw r24,r22
 4715 1de2 9093 0000 		sts f_I_1,r24
 4716 1de6 A093 0000 		sts (f_I_1)+1,r25
 4717 1dea B093 0000 		sts (f_I_1)+2,r26
 908:risspzho.c    **** 	
 909:risspzho.c    **** 	if(f_I_wy > 20)
 4718               	4
 4719               		movw r22,r24
 4720 1dee 8091 0000 		movw r24,r26
 4721 1df2 9091 0000 		call __mulsf3
 4722 1df6 A091 0000 		movw r26,r24
 4723 1dfa B091 0000 		movw r24,r22
 4724 1dfe 20E0      		sts f_I_1,r24
 4725 1e00 30E0      		sts (f_I_1)+1,r25
 4726 1e02 40EA      		sts (f_I_1)+2,r26
 4727 1e04 51E4      		sts (f_I_1)+3,r27
 4729 1e08 CD01      	.LM416:
 4730 1e0a 0E94 0000 		lds r24,f_Ie
 4731 1e0e 1816      		lds r25,(f_Ie)+1
 4732 1e10 04F4      		lds r26,(f_Ie)+2
 4733               		lds r27,(f_Ie)+3
 910:risspzho.c    **** 	{
 911:risspzho.c    **** 		f_I_wy = 20;
 4734               	I_1)+3,r27
 4736 1e12 80E0      	.LM416:
 4737 1e14 90E0      		lds r24,f_Ie
 4738 1e16 A0EA      		lds r25,(f_Ie)+1
 4739 1e18 B1E4      		lds r26,(f_Ie)+2
 4740 1e1a 8093 0000 		lds r27,(f_Ie)+3
 4741 1e1e 9093 0000 		sts f_Ie_1,r24
 4742 1e22 A093 0000 		sts (f_Ie_1)+1,r25
 4743 1e26 B093 0000 		sts (f_Ie_1)+2,r26
 4744               		sts (f_Ie_1)+3,r27
 912:risspzho.c    **** 	}
 913:risspzho.c    **** 	
 914:risspzho.c    **** 	if(f_I_wy < 0)
 4745               	+1
 4746               		lds r26,(f_Ie)+2
 4747 1e2a 8091 0000 		lds r27,(f_Ie)+3
 4748 1e2e 9091 0000 		sts f_Ie_1,r24
 4749 1e32 A091 0000 		sts (f_Ie_1)+1,r25
 4750 1e36 B091 0000 		sts (f_Ie_1)+2,r26
 4751 1e3a 20E0      		sts (f_Ie_1)+3,r27
 4753 1e3e 40E0      	.LM417:
 4754 1e40 50E0      		lds r24,f_I_wy
 4755 1e42 BC01      		lds r25,(f_I_wy)+1
 4756 1e44 CD01      		lds r26,(f_I_wy)+2
 4757 1e46 0E94 0000 		lds r27,(f_I_wy)+3
 4759 1e4c 04F4      	.LM418:
 4760               		movw r22,r24
 915:risspzho.c    **** 	{
 916:risspzho.c    **** 		f_I_wy = 0;
 4761               	,(f_I_wy)+1
 4762               		lds r26,(f_I_wy)+2
 4763 1e4e 80E0      		lds r27,(f_I_wy)+3
 4765 1e52 A0E0      	.LM418:
 4766 1e54 B0E0      		movw r22,r24
 4767 1e56 8093 0000 		movw r24,r26
 4768 1e5a 9093 0000 	/* epilogue start */
 4769 1e5e A093 0000 		adiw r28,14
 4770 1e62 B093 0000 		in __tmp_reg__,__SREG__
 4771               		cli
 917:risspzho.c    **** 	}
 918:risspzho.c    **** 	
 919:risspzho.c    **** 	f_I_1 = (f_Ie + f_S)/2 * ki;
 4772               	
 4773               	.LM418:
 4774 1e66 E090 0000 		movw r22,r24
 4775 1e6a F090 0000 		movw r24,r26
 4776 1e6e 0091 0000 	/* epilogue start */
 4777 1e72 1091 0000 		adiw r28,14
 4778 1e76 8091 0000 		in __tmp_reg__,__SREG__
 4779 1e7a 9091 0000 		cli
 4780 1e7e A091 0000 		out __SP_H__,r29
 4781 1e82 B091 0000 		out __SREG__,__tmp_reg__
 4782 1e86 9C01      		out __SP_L__,r28
 4783 1e88 AD01      		pop r28
 4784 1e8a C801      		pop r29
 4785 1e8c B701      		pop r17
 4786 1e8e 0E94 0000 		pop r16
 4787 1e92 DC01      		pop r15
 4788 1e94 CB01      		pop r14
 4789 1e96 20E0      		pop r13
 4790 1e98 30E0      		pop r12
 4791 1e9a 40E0      		ret
 4793 1e9e BC01      	.Lscope14:
 4794 1ea0 CD01      		.comm uc_l_obiegow,1,1
 4795 1ea2 0E94 0000 		.comm uc_kolumna,1,1
 4796 1ea6 DC01      		.comm uc_l_spowalniajacy,1,1
 4797 1ea8 CB01      		.comm uc_nr_przycisku,1,1
 4798 1eaa 2B85      		.comm ui_liczba_w,2,1
 4799 1eac 3C85      		.comm c_buffer_n,5,1
 4800 1eae 4D85      		.comm i_war_wy,2,1
 4801 1eb0 5E85      		.comm i_war_cof,2,1
 4802 1eb2 BC01      		.comm ui_Ir_ogr,2,1
 4803 1eb4 CD01      		.comm ui_Ih_ogr,2,1
 4804 1eb6 0E94 0000 		.comm f_I_pom,4,1
 4805 1eba DC01      		.comm blad,2,1
 4806 1ebc CB01      		.comm war_przejscia,2,1
 4807 1ebe 8093 0000 		.comm reset,2,1
 4808 1ec2 9093 0000 		.comm f_Ie,4,1
 4809 1ec6 A093 0000 		.comm f_I_zad,4,1
 4810 1eca B093 0000 		.comm f_S,4,1
 920:risspzho.c    **** 	
 921:risspzho.c    **** 	f_Ie_1 = f_Ie;
 4811               	,1
 4812               		.comm reset,2,1
 4813 1ece 8091 0000 		.comm f_Ie,4,1
 4814 1ed2 9091 0000 		.comm f_I_zad,4,1
 4815 1ed6 A091 0000 		.comm f_S,4,1
 4816 1eda B091 0000 		.comm f_Ie_1,4,1
 4817 1ede 8093 0000 		.comm f_I_1,4,1
 4818 1ee2 9093 0000 		.comm f_Innt,4,1
 4819 1ee6 A093 0000 		.comm f_Ii,4,1
 4820 1eea B093 0000 		.comm f_Ip,4,1
 922:risspzho.c    **** 	
 923:risspzho.c    **** 	return (f_I_wy);
 4821               	comm f_I_1,4,1
 4822               		.comm f_Innt,4,1
 4823 1eee 8091 0000 		.comm f_Ii,4,1
 4824 1ef2 9091 0000 		.comm f_Ip,4,1
 4825 1ef6 A091 0000 		.comm f_I_wy,4,1
 4826 1efa B091 0000 		.comm ui_PWM,2,1
 924:risspzho.c    **** }
 4827               	m f_Ii,4,1
 4828               		.comm f_Ip,4,1
 4829 1efe BC01      		.comm f_I_wy,4,1
 4830 1f00 CD01      		.comm ui_PWM,2,1
 4831               		.comm f_I_pwm,4,1
 4832 1f02 2E96      		.comm i,2,1
 4833 1f04 0FB6      		.comm j,2,1
 4834 1f06 F894      		.comm k,2,1
 4835 1f08 DEBF      		.comm licz,2,1
 4836 1f0a 0FBE      		.comm r_jazdy,2,1
 4837 1f0c CDBF      		.comm czas,2,1
 4838 1f0e CF91      		.comm czas_2,2,1
 4839 1f10 DF91      		.comm suma,4,1
 4840 1f12 1F91      		.comm wskf_int,10,1
 4841 1f14 0F91      		.comm wskf_P_ADC,2,1
 4842 1f16 FF90      		.comm wskf_void,4,1
 4843 1f18 EF90      		.comm wskf_w_float,2,1
 4844 1f1a DF90      		.comm wskf_P_Pom,2,1
 4845 1f1c CF90      		.comm wskf_P_Zad,2,1
 4846 1f1e 0895      		.comm wskf_R_PI,2,1
 4893               	.Letext0:
 4894               	...
DEFINED SYMBOLS
                            *ABS*:00000000 risspzho.c
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2      *ABS*:0000003f __SREG__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:3      *ABS*:0000003e __SP_H__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:4      *ABS*:0000003d __SP_L__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:5      *ABS*:00000034 __CCP__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:105    .data:00000000 uc_klawisze
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:110    .data:00000001 f_kp_r
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:118    .data:00000005 f_ki_r
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:126    .data:00000009 f_kp_h
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:134    .data:0000000d f_ki_h
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:151    .text:00000000 main
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2672   .text:00000eea Wybieg
                            *COM*:0000000a wskf_int
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2826   .text:00000fe2 Rozruch
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:3613   .text:0000157e Hamowanie
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:1711   .text:00000928 Klawiatura
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2405   .text:00000d5c Wychylenie_Nastawnika
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2205   .text:00000c30 Przetwornik_ADC
                            *COM*:00000002 wskf_P_ADC
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:751    .text:000003ac Inicjalizacja_CPU
                            *COM*:00000004 wskf_void
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:910    .text:00000464 Pobierz_Wartosci
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:4327   .text:00001aae wyswietl_float
                            *COM*:00000002 wskf_w_float
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2535   .text:00000e08 Prad_Pomierzony
                            *COM*:00000002 wskf_P_Pom
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:2475   .text:00000daa Prad_Zadany
                            *COM*:00000002 wskf_P_Zad
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:4473   .text:00001b9a Regulator_PI
                            *COM*:00000002 wskf_R_PI
                            *COM*:00000002 reset
                            *COM*:00000002 r_jazdy
                            *COM*:00000002 war_przejscia
                            *COM*:00000002 blad
                            *COM*:00000002 i_war_wy
                            *COM*:00000002 i_war_cof
                            *COM*:00000002 ui_liczba_w
                            *COM*:00000002 ui_Ir_ogr
                            *COM*:00000002 ui_Ih_ogr
                            *COM*:00000005 c_buffer_n
                            *COM*:00000001 uc_l_obiegow
                            *COM*:00000001 uc_kolumna
                            *COM*:00000001 uc_l_spowalniajacy
                            *COM*:00000001 uc_nr_przycisku
                            *COM*:00000002 ui_PWM
                            *COM*:00000004 suma
                            *COM*:00000002 licz
                            *COM*:00000004 f_I_pom
                            *COM*:00000004 f_S
                            *COM*:00000004 f_I_1
                            *COM*:00000004 f_Ie_1
                            *COM*:00000004 f_I_pwm
C:\DOCUME~1\Johnny\USTAWI~1\Temp/ccJ6MKbV.s:4209   .text:00001a02 __vector_1
                            *COM*:00000004 f_Ie
                            *COM*:00000004 f_I_zad
                            *COM*:00000004 f_Ip
                            *COM*:00000004 f_I_wy
                            *COM*:00000004 f_Ii
                            *COM*:00000002 czas
                            *COM*:00000002 czas_2
                            *COM*:00000004 f_Innt
                            *COM*:00000002 i
                            *COM*:00000002 j
                            *COM*:00000002 k

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
lcd_clrscr
lcd_puts
__mulsf3
__ltsf2
__gtsf2
__fixunssfsi
lcd_init
lcd_command
utoa
__floatsisf
__divsf3
__gesf2
__nesf2
__addsf3
__fixsfsi
__subsf3
